(this.webpackJsonppages=this.webpackJsonppages||[]).push([[5,46,51,55,56,63,84,86,87],{174:function(e,t,n){},175:function(e,t,n){},176:function(e,t,n){},80:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n(16),c=n(1),i=n(59),s=n.n(i);n(174);function l(){var e=Object(c.useState)(""),t=Object(r.a)(e,2),n=t[0],i=t[1];return Object(c.useEffect)((function(){return n&&s.a.toast({completeCallback:function(){return i("")},displayLength:2e3,html:n}),function(){return s.a.Toast.dismissAll()}}),[n]),i}},81:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var r=n(84),c=n(83),i=(n(176),n(0));function s(e){var t=e.lang,n=e.onInput,s=void 0===n?function(){}:n;return Object(i.jsx)("div",{className:"panel language-markup",children:Object(i.jsx)(c.default,{tabs:Object.keys(t),children:Object.entries(t).map((function(e,t){return Object(i.jsx)(r.default,{content:e[1],onInput:s},t)}))})})}},82:function(e,t,n){"use strict";function r(e){var t=e.split(/\r|\n/);t.pop(),t.shift();var n=t[0].match(/^\s+/g)||[];return(n?t.map((function(e){return e.replace(n[0],"")})):t).join("\r\n")}n.r(t),n.d(t,"default",(function(){return r}))},83:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n(1),c=n.n(r),i=n(6),s=n(59),l=n.n(s),a=(n(175),n(0));function u(e){var t=e.children,n=e.tabs,s=Object(r.useRef)(null);return Object(r.useEffect)((function(){var e=l.a.Tabs.init(s.current,{});return function(){return e.destroy()}}),[]),Object(a.jsxs)(a.Fragment,{children:[Object(a.jsx)("ul",{className:"tabs",ref:s,children:n.map((function(e,t){return Object(a.jsx)("li",{className:"tab",children:Object(a.jsx)(i.b,{to:"#"+e,children:e})},t)}))}),c.a.Children.toArray(t).map((function(e,t){return Object(a.jsx)("div",{className:"flex-column",id:n[t],children:e},t)}))]})}},84:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var r=n(1),c=n(82),i=n(80),s=n(0);function l(e){var t=e.content,n=e.onInput,l=void 0===n?function(){}:n,a=Object(c.default)(t),u=Object(i.default)();return Object(r.useEffect)((function(){return l(a)}),[l,a]),Object(s.jsxs)(s.Fragment,{children:[Object(s.jsx)("button",{className:"reset",onClick:function(e){var t=e.currentTarget.parentNode.querySelector("code").textContent;navigator.clipboard.writeText(t).then((function(){return u("copied to clipboard")})).catch((function(){return u("copy to clipboard failed")}))},children:"Copy to Clipboard"}),Object(s.jsx)("pre",{children:Object(s.jsx)("code",{contentEditable:!0,spellCheck:"false",suppressContentEditableWarning:!0,onInput:function(e){var t=e.target;l(t.textContent)},children:a})})]})}},95:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(81),c=n(0);function i(){return Object(c.jsxs)(c.Fragment,{children:[Object(c.jsxs)("section",{className:"accent-bottom panel",children:[Object(c.jsx)("h2",{children:"Highly divisible triangular number"}),Object(c.jsx)("h4",{children:"Problem 12"}),Object(c.jsx)("p",{children:"The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:"}),Object(c.jsx)("div",{className:"center",children:"1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ..."}),Object(c.jsx)("p",{children:"Let us list the factors of the first seven triangle numbers:"}),Object(c.jsx)("table",{className:"concise-table container highlight striped",style:{lineHeight:"1rem",width:"10rem"},children:Object(c.jsxs)("tbody",{children:[Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"1:"}),Object(c.jsx)("td",{children:"1"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"3:"}),Object(c.jsx)("td",{children:"1, 3"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"6:"}),Object(c.jsx)("td",{children:"1, 2, 3, 6"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"10:"}),Object(c.jsx)("td",{children:"1, 2, 5, 10"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"15:"}),Object(c.jsx)("td",{children:"1, 3, 5, 15"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"21:"}),Object(c.jsx)("td",{children:"1, 3, 7, 21"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"28:"}),Object(c.jsx)("td",{children:"1, 2, 4, 7, 14, 28"})]})]})}),Object(c.jsx)("p",{children:"We can see that 28 is the first triangle number to have over five divisors."}),Object(c.jsx)("p",{children:"What is the value of the first triangle number to have over five hundred divisors?"})]}),Object(c.jsx)(r.default,{lang:{JavaScript:"\n          m => {\n            let\n            primes = [],\n            tDividers = 1,\n            t1 = 1,\n            t2 = 1,\n\n            primeFactorization = n => {\n              \n              let dividers = 1;\n              \n              for (let key = 0; primes[key] <= n; key++) {\n                \n                let power = 1;\n                \n                while (n % primes[key] === 0) {\n                  n /= primes[key];\n                  power++;\n                }\n                dividers *= power;\n              }\n              return dividers;\n            };\n\n            const\n            list = Array(m * 4).fill(true);\n            list[0] = list[1] = false;\n            \n            list.map((v, k) => {\n              if (v) {\n                primes.push(k);\n                for (let key = k * k; key < list.length; key += k) {\n                  list[key] = false;\n                }\n              }\n            });\n\n            for (var counter = 2; tDividers <= m ; counter++) {\n              if (counter % 2) {\n                t1 = primeFactorization((counter + 1) / 2);\n              }\n              else {\n                t2 = primeFactorization(counter + 1);\n              }\n              tDividers = t1 * t2;\n            }\n            return counter * (counter - 1) / 2;\n          }\n      "}})]})}}}]);
//# sourceMappingURL=5.14e57bc7.chunk.js.map