{"version":3,"sources":["Projects/ProjectEuler/P18.tsx","Hooks/useToast.ts","Components/CodePanel.tsx","Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx","Components/CodePanel/Code.tsx"],"names":["P18","className","style","minWidth","lang","JavaScript","useToast","useState","message","setMessage","useEffect","M","toast","completeCallback","displayLength","html","Toast","dismissAll","CodePanel","onInput","tabs","Object","keys","entries","map","entry","key","content","removeIndentation","text","lines","split","pop","shift","indentation","match","line","replace","join","Tabs","children","elRef","useRef","init","current","destroy","ref","title","to","React","Children","toArray","child","id","Code","code","onClick","e","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target"],"mappings":"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","file":"static/js/11.42b44b31.chunk.js","sourcesContent":["import CodePanel from '../../Components/CodePanel';\r\n\r\nexport default function P18() {\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h2>Maximum path sum I</h2>\r\n        <h4>Problem 18</h4>\r\n        <p>\r\n          By starting at the top of the triangle below and moving to adjacent\r\n          numbers on the row below, the maximum total from top to bottom is 23.\r\n        </p>\r\n        <div className=\"center font-mono\">\r\n          <span className=\"red-text\">3</span>\r\n          <br />\r\n          <span className=\"red-text\">7</span> 4\r\n          <br />\r\n          2 <span className=\"red-text\">4</span> 6\r\n          <br />\r\n          8 5 <span className=\"red-text\">9</span> 3\r\n        </div>\r\n        <p>That is, 3 + 7 + 4 + 9 = 23.</p>\r\n        <p>Find the maximum total from top to bottom of the triangle below:</p>\r\n        <div className=\"center font-mono nowrap\">\r\n          <div style={{ minWidth: 480 }}>\r\n            75\r\n            <br />\r\n            95 64\r\n            <br />\r\n            17 47 82\r\n            <br />\r\n            18 35 87 10\r\n            <br />\r\n            20 04 82 47 65\r\n            <br />\r\n            19 01 23 75 03 34\r\n            <br />\r\n            88 02 77 73 07 63 67\r\n            <br />\r\n            99 65 04 28 06 16 70 92\r\n            <br />\r\n            41 41 26 56 83 40 80 70 33\r\n            <br />\r\n            41 48 72 33 47 32 37 16 94 29\r\n            <br />\r\n            53 71 44 65 25 43 91 52 97 51 14\r\n            <br />\r\n            70 11 33 28 77 73 17 78 39 68 17 57\r\n            <br />\r\n            91 71 52 38 17 14 91 43 58 50 27 29 48\r\n            <br />\r\n            63 66 04 68 89 53 67 30 73 16 69 87 40 31\r\n            <br />\r\n            04 62 98 27 23 09 70 98 73 93 38 53 60 04 23\r\n          </div>\r\n        </div>\r\n        <p>\r\n          NOTE: As there are only 16384 routes, it is possible to solve this\r\n          problem by trying every route. However, Problem 67, is the same\r\n          challenge with a triangle containing one-hundred rows; it cannot be\r\n          solved by brute force, and requires a clever method! ;o)\r\n        </p>\r\n      </section>\r\n      {/* prettier-ignore */}\r\n      <CodePanel lang={{\r\n        JavaScript: `\r\n          () => {\r\n            let\r\n            data = [\r\n              [75],\r\n              [95, 64],\r\n              [17, 47, 82],\r\n              [18, 35, 87, 10],\r\n              [20, 4, 82, 47, 65],\r\n              [19, 1, 23, 75, 3, 34],\r\n              [88, 2, 77, 73, 7, 63, 67],\r\n              [99, 65, 4, 28, 6, 16, 70, 92],\r\n              [41, 41, 26, 56, 83, 40, 80, 70, 33],\r\n              [41, 48, 72, 33, 47, 32, 37, 16, 94, 29],\r\n              [53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],\r\n              [70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],\r\n              [91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],\r\n              [63, 66, 4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],\r\n              [4, 62, 98, 27, 23, 09, 70, 98, 73, 93, 38, 53, 60, 4, 23]\r\n            ];\r\n\r\n            for (let row = data.length - 2; row >= 0; row--) {\r\n              data[row] = data[row].map((val, col) => val + Math.max(\r\n                data[row + 1][col], data[row + 1][col + 1]\r\n              ));\r\n            }\r\n            return data[0][0];\r\n          }\r\n      `}} />\r\n    </>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};","import Code from './CodePanel/Code';\r\nimport Tabs from './Tabs';\r\nimport './CodePanel/Style.scss';\r\n\r\ninterface CodePanelProps {\r\n  lang: {\r\n    [name: string]: string\r\n  },\r\n  onInput?: (text: string) => void\r\n}\r\n\r\nexport default function CodePanel({ lang, onInput = () => {} }: CodePanelProps) {\r\n  return (\r\n    <div className=\"panel language-markup\">\r\n      <Tabs tabs={Object.keys(lang)}>\r\n        {Object.entries(lang).map(\r\n          (entry, key) => <Code content={entry[1]} key={key} onInput={onInput} />\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};","export default function removeIndentation(text: string) {\r\n  const lines = text.split(/\\r|\\n/);\r\n  lines.pop();\r\n  lines.shift();\r\n\r\n  const indentation = lines[0].match(/^\\s+/g) || [];\r\n\r\n  return (indentation\r\n    ? lines.map((line) => line.replace(indentation[0], ''))\r\n    : lines\r\n  ).join('\\r\\n');\r\n};","import React, { useEffect, useRef } from \"react\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport M from 'materialize-css';\r\nimport './Tabs/Style.scss';\r\n\r\ninterface TabsProps {\r\n  children: React.ReactNode;\r\n  tabs: string[];\r\n}\r\n\r\nexport default function Tabs({ children, tabs }: TabsProps) {\r\n\r\n  const elRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    const tabs = M.Tabs.init(elRef.current as Element, {});\r\n    return () => tabs.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tabs\" ref={elRef}>\r\n        {tabs.map((title, key) => \r\n          <li className=\"tab\" key={key}>\r\n            <Link to={\"#\" + title}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {React.Children.toArray(children).map((child, key) => \r\n        <div\r\n        className=\"flex-column\"\r\n        id={tabs[key]}\r\n        key={key}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","\r\nimport { useEffect } from 'react';\r\nimport removeIndentation from './removeIndentation';\r\nimport useToast from '../../Hooks/useToast';\r\n\r\ninterface CodeProps {\r\n  content: string,\r\n  onInput?: (text: string) => void\r\n}\r\n\r\nexport default function Code({ content, onInput = () => {} }: CodeProps) {\r\n\r\n  const\r\n  code = removeIndentation(content),\r\n  toast = useToast();\r\n\r\n  useEffect(() => onInput(code), [onInput, code]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n      className=\"reset\"\r\n      onClick={e => {\r\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\r\n        navigator.clipboard.writeText(text)\r\n        .then(() => toast('copied to clipboard'))\r\n        .catch(() => toast('copy to clipboard failed'));       \r\n      }}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <pre>\r\n        <code\r\n        contentEditable\r\n        spellCheck=\"false\"\r\n        suppressContentEditableWarning={true}\r\n        onInput={e => {\r\n          const el = e.target as HTMLElement;\r\n          onInput(el.textContent as string);\r\n        }}>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}