{"version":3,"sources":["Projects/ProjectEuler/P5.tsx","Components/CodePanel.tsx","Hooks/useToast.ts","Components/CodePanel/removeIndentation.ts"],"names":["P5","className","title","CodePanel","React","memo","children","onInput","code","removeIndentation","toast","useToast","useEffect","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","useState","message","setMessage","M","completeCallback","displayLength","html","Toast","dismissAll","lines","split","pop","shift","indentation","match","map","line","replace","join"],"mappings":"gHAAA,kEAEe,SAASA,IACtB,OACE,qCACE,0BAASC,UAAU,sBAAnB,UACE,mDACA,2CACA,2IAIA,qIAMF,cAAC,UAAD,CAAWC,MAAM,aAAjB,gW,4EClBN,2DAWMC,EAAYC,IAAMC,MAAK,YAA6D,IAA1DC,EAAyD,EAAzDA,SAAyD,IAA/CC,eAA+C,MAArC,aAAqC,EAA3BL,EAA2B,EAA3BA,MAG5DM,EAAOC,kBAAkBH,GACzBI,EAAQC,oBAIR,OAFAC,qBAAU,kBAAML,EAAQC,KAAO,CAACD,EAASC,IAGvC,sBAAKP,UAAU,wBAAf,UACE,6BAAKC,IACL,wBACAD,UAAU,QACVY,QAAS,SAAAC,GACP,IAAMC,EAAOD,EAAEE,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUP,GAC7BQ,MAAK,kBAAMb,EAAM,0BACjBc,OAAM,kBAAMd,EAAM,gCANrB,+BAUA,8BACE,sBACAe,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChCpB,QAAS,SAAAO,GACP,IAAMc,EAAKd,EAAEe,OACbtB,EAAQqB,EAAGT,cANb,SAQGX,YAOIL,a,0HC5CA,SAASQ,IAEtB,MAA8BmB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATApB,qBAAU,WAMR,OALAmB,GAAWE,IAAEvB,MAAM,CACjBwB,iBAAkB,kBAAMF,EAAW,KACnCG,cAAe,IACfC,KAAML,IAED,kBAAME,IAAEI,MAAMC,gBACpB,CAACP,IAEGC,I,gCCjBM,SAASvB,EAAkBM,GACxC,IAAMwB,EAAQxB,EAAKyB,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAQJ,EAAY,GAAI,OACjDJ,GACFS,KAAK,QAVT","file":"static/js/30.dedebd98.chunk.js","sourcesContent":["import CodePanel from '../../Components/CodePanel';\n\nexport default function P5() {\n  return (\n    <>\n      <section className=\"accent-bottom panel\">\n        <h2>Smallest multiple</h2>\n        <h4>Problem 5</h4>\n        <p>\n          2520 is the smallest number that can be divided by each of the numbers\n          from 1 to 10 without any remainder.\n        </p>\n        <p>\n          What is the smallest positive number that is evenly divisible by all of\n          the numbers from 1 to 20?\n        </p>\n      </section>\n      {/* prettier-ignore */}\n      <CodePanel title=\"JavaScript\">{`\n        m => {\n\n          let i = m;\n\n          while (true) {\n            for (let j = m - 1; j > 1; j--) {\n              if (i % j > 0) {\n                break;\n              }\n              else if (j === 2) {\n                return i;\n              }\n            }\n            i += m;\n          }\n        }\n    `}</CodePanel>\n    </>\n  );\n};","import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nconst CodePanel = React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});\n\nexport default CodePanel;","import { useEffect, useState } from \"react\";\nimport M from 'materialize-css';\nimport './useToast/Style.scss';\n\nexport default function useToast() {\n\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    message && M.toast({\n      completeCallback: () => setMessage(''),\n      displayLength: 2000,\n      html: message\n    });\n    return () => M.Toast.dismissAll();\n  }, [message]);\n\n  return setMessage;\n};","export default function removeIndentation(text: string) {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};"],"sourceRoot":""}