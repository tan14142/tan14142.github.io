{"version":3,"sources":["Projects/ProjectEuler/P15.tsx","Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx","Components/CodePanel/Code.tsx","Hooks/useHighlight.ts","Components/CodePanel.tsx","Hooks/useToast.ts"],"names":["P15","lang","className","alt","src","removeIndentation","text","lines","split","pop","shift","indentation","match","map","line","replace","join","Tabs","children","tabs","elRef","useRef","useEffect","M","init","current","destroy","ref","title","key","to","React","Children","toArray","child","id","Code","indent","onInput","toast","useToast","code","Object","values","onClick","e","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","keys","toLowerCase","spellCheck","suppressContentEditableWarning","el","target","useHighlight","link","script","window","hljs","document","createElement","rel","href","onload","highlightAll","body","appendChild","removeChild","CodePanel","entries","entry","useState","message","setMessage","completeCallback","displayLength","html","Toast","dismissAll"],"mappings":"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","file":"static/js/18.09880e04.chunk.js","sourcesContent":["import CodePanel from '../../Components/CodePanel';\r\nimport { LangProps } from '../../Components/CodePanel/LangProps';\r\n\r\nexport default function P15({lang}: LangProps) {\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h2>Lattice paths</h2>\r\n        <h4>Problem 15</h4>\r\n        <p>\r\n          Starting in the top left corner of a 2×2 grid, and only being able to\r\n          move to the right and down, there are exactly 6 routes to the bottom\r\n          right corner.\r\n        </p>\r\n        <div className=\"center\">\r\n          <img alt=\"Lattice paths\" src=\"/Projects/Project-Euler/P15.png\" />\r\n        </div>\r\n        <p>How many such routes are there through a 20×20 grid?</p>\r\n      </section>\r\n      <CodePanel lang={lang} />\r\n    </>\r\n  );\r\n};","export default function removeIndentation(text: string) {\r\n  const lines = text.split(/\\r|\\n/);\r\n  lines.pop();\r\n  lines.shift();\r\n\r\n  const indentation = lines[0].match(/^\\s+/g) || [];\r\n\r\n  return (indentation\r\n    ? lines.map((line) => line.replace(indentation[0], ''))\r\n    : lines\r\n  ).join('\\r\\n');\r\n};","import React, { useEffect, useRef } from \"react\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport M from 'materialize-css';\r\nimport './Tabs/Style.scss';\r\n\r\ninterface TabsProps {\r\n  children: React.ReactNode;\r\n  tabs: string[];\r\n}\r\n\r\nexport default function Tabs({ children, tabs }: TabsProps) {\r\n\r\n  const elRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    const tabs = M.Tabs.init(elRef.current as Element, {});\r\n    return () => tabs.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tabs\" ref={elRef}>\r\n        {tabs.map((title, key) => \r\n          <li className=\"tab\" key={key}>\r\n            <Link to={\"#\" + title}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {React.Children.toArray(children).map((child, key) => \r\n        <div\r\n        className=\"flex-column\"\r\n        id={tabs[key]}\r\n        key={key}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","\r\nimport { useEffect } from 'react';\r\nimport removeIndentation from './removeIndentation';\r\nimport useToast from '../../Hooks/useToast';\r\nimport { CodeProps } from './CodeProps';\r\n\r\nexport default function Code({ indent = true, lang, onInput = () => {} }: CodeProps) {\r\n  \r\n  const toast = useToast();\r\n  let code = Object.values(lang)[0];\r\n\r\n  if (!indent) {\r\n    code = removeIndentation(code)\r\n  }\r\n\r\n  useEffect(() => onInput(code), [onInput, code]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n      className=\"reset\"\r\n      onClick={e => {\r\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\r\n        navigator.clipboard.writeText(text)\r\n        .then(() => toast('copied to clipboard'))\r\n        .catch(() => toast('copy to clipboard failed'));       \r\n      }}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <pre>\r\n        <code\r\n        contentEditable\r\n        className={\"hljs language-\" + Object.keys(lang)[0].toLowerCase()}\r\n        spellCheck=\"false\"\r\n        suppressContentEditableWarning={true}\r\n        onInput={e => {\r\n          const el = e.target as HTMLElement;\r\n          onInput(el.textContent as string);\r\n        }}>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};","import { useEffect } from 'react';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    hljs: any;\r\n  }\r\n}\r\n\r\nexport default function useHighlight() {\r\n  \r\n  useEffect(() => {\r\n\r\n    let\r\n    link: any,\r\n    script: any;\r\n\r\n    if (!window.hljs) {\r\n      window.hljs = true;\r\n\r\n      link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = 'https://unpkg.com/@highlightjs/cdn-assets@11.1.0/styles/default.min.css';\r\n\r\n      script = document.createElement('script');\r\n      script.src = 'https://unpkg.com/@highlightjs/cdn-assets@11.1.0/highlight.min.js';\r\n      script.onload = () => window.hljs.highlightAll();\r\n    \r\n      document.body.appendChild(link);\r\n      document.body.appendChild(script);\r\n    }\r\n    \r\n    return () => {\r\n      typeof link === 'object' && document.body.removeChild(link);\r\n      typeof script === 'object' && document.body.removeChild(script);\r\n      delete window.hljs;\r\n    }\r\n  }, []);\r\n}","import Code from './CodePanel/Code';\r\nimport Tabs from './Tabs';\r\nimport './CodePanel/Style.scss';\r\nimport { CodeProps } from './CodePanel/CodeProps';\r\nimport useHighlight from '../Hooks/useHighlight';\r\n\r\nexport default function CodePanel({ lang, indent = true, onInput = () => {} }: CodeProps) {\r\n\r\n  useHighlight();\r\n\r\n  return (\r\n    <div className=\"panel language-markup\">\r\n      <Tabs tabs={Object.keys(lang)}>\r\n        {Object.entries(lang).map(\r\n          (entry, key) => <Code indent={indent} key={key} lang={{[entry[0]]: entry[1]}} onInput={onInput} />\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};"],"sourceRoot":""}