{"version":3,"sources":["Components/Box.tsx","Components/Tabs.tsx","../node_modules/use-debounce/esm/useDebounce.js","../node_modules/use-debounce/esm/useDebouncedCallback.js","Snippets/FlexBox.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/CodePanel.tsx","Hooks/useToast.ts","Components/CodePanel/removeIndentation.ts"],"names":["Box","id","styles","className","style","Tabs","children","tabs","elRef","useRef","useEffect","M","init","current","destroy","ref","map","title","key","to","React","Children","toArray","child","valueEquality","left","right","adjustFunctionValueOfSetState","value","useDebounce","delay","options","eq","equalityFn","_a","initialState","useState","state","setState","useCallback","useStateIgnoreCallback","dispatch","debounced","func","wait","_this","this","lastCallTime","lastInvokeTime","timerId","lastArgs","lastThis","result","funcRef","mounted","useRAF","window","TypeError","leading","trailing","maxing","maxWait","Math","max","useMemo","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","trailingEdge","timerExpired","Date","now","timeWaiting","remainingWait","min","_i","arguments","length","isInvoking","cancel","clearTimeout","isPending","flush","useDebouncedCallback","previousValue","FlexBox","setStyles","debounce","scoped","CodePanel","onInput","update","lineHeight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","memo","code","removeIndentation","toast","useToast","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","message","setMessage","completeCallback","displayLength","html","Toast","dismissAll","lines","split","pop","shift","indentation","match","line","replace","join"],"mappings":"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","file":"static/js/42.eb3bfc26.chunk.js","sourcesContent":["import React from 'react';\n\ninterface BoxProps {\n  id: number;\n  styles?: React.CSSProperties;\n}\n\nexport default function Box({ id, styles }: BoxProps) {\n  return (\n    <div className=\"card-panel\" id={\"box\" + id} style={styles}>\n      Box {id}\n    </div>\n  );\n};","import React, { useEffect, useRef } from \"react\";\nimport{ Link } from \"react-router-dom\";\nimport M from 'materialize-css';\nimport './Tabs/Style.scss';\n\ninterface TabsProps {\n  children: React.ReactNode;\n  tabs: string[];\n}\n\nexport default function Tabs({ children, tabs }: TabsProps) {\n\n  const elRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const tabs = M.Tabs.init(elRef.current as Element, {});\n    return () => tabs.destroy();\n  }, []);\n\n  return (\n    <>\n      <ul className=\"tabs\" ref={elRef}>\n        {tabs.map((title, key) => \n          <li className=\"tab\" key={key}>\n            <Link to={\"#\" + title}>\n              {title}\n            </Link>\n          </li>\n        )}\n      </ul>\n      {React.Children.toArray(children).map((child, key) => \n        <div\n        className=\"flex-column\"\n        id={tabs[key]}\n        key={key}>\n          {child}\n        </div>\n      )}\n    </>\n  );\n};","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\nfunction valueEquality(left, right) {\n    return left === right;\n}\nfunction adjustFunctionValueOfSetState(value) {\n    return typeof value === 'function' ? function () { return value; } : value;\n}\nfunction useStateIgnoreCallback(initialState) {\n    var _a = useState(adjustFunctionValueOfSetState(initialState)), state = _a[0], setState = _a[1];\n    var setStateIgnoreCallback = useCallback(function (value) { return setState(adjustFunctionValueOfSetState(value)); }, []);\n    return [state, setStateIgnoreCallback];\n}\nexport default function useDebounce(value, delay, options) {\n    var eq = (options && options.equalityFn) || valueEquality;\n    var _a = useStateIgnoreCallback(value), state = _a[0], dispatch = _a[1];\n    var debounced = useDebouncedCallback(useCallback(function (value) { return dispatch(value); }, [dispatch]), delay, options);\n    var previousValue = useRef(value);\n    useEffect(function () {\n        // We need to use this condition otherwise we will run debounce timer for the first render (including maxWait option)\n        if (!eq(previousValue.current, value)) {\n            debounced(value);\n            previousValue.current = value;\n        }\n    }, [value, debounced, eq]);\n    return [state, { cancel: debounced.cancel, isPending: debounced.isPending, flush: debounced.flush }];\n}\n","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback(func, wait, options) {\n    var _this = this;\n    var lastCallTime = useRef(null);\n    var lastInvokeTime = useRef(0);\n    var timerId = useRef(null);\n    var lastArgs = useRef([]);\n    var lastThis = useRef();\n    var result = useRef();\n    var funcRef = useRef(func);\n    var mounted = useRef(true);\n    funcRef.current = func;\n    // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n    var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    wait = +wait || 0;\n    options = options || {};\n    var leading = !!options.leading;\n    var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n    var maxing = 'maxWait' in options;\n    var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n    useEffect(function () {\n        mounted.current = true;\n        return function () {\n            mounted.current = false;\n        };\n    }, []);\n    // You may have a question, why we have so many code under the useMemo definition.\n    //\n    // This was made as we want to escape from useCallback hell and\n    // not to initialize a number of functions each time useDebouncedCallback is called.\n    //\n    // It means that we have less garbage for our GC calls which improves performance.\n    // Also, it makes this library smaller.\n    //\n    // And the last reason, that the code without lots of useCallback with deps is easier to read.\n    // You have only one place for that.\n    var debounced = useMemo(function () {\n        var invokeFunc = function (time) {\n            var args = lastArgs.current;\n            var thisArg = lastThis.current;\n            lastArgs.current = lastThis.current = null;\n            lastInvokeTime.current = time;\n            return (result.current = funcRef.current.apply(thisArg, args));\n        };\n        var startTimer = function (pendingFunc, wait) {\n            if (useRAF)\n                cancelAnimationFrame(timerId.current);\n            timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n        };\n        var shouldInvoke = function (time) {\n            if (!mounted.current)\n                return false;\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            // Either this is the first call, activity has stopped and we're at the\n            // trailing edge, the system time has gone backwards and we're treating\n            // it as the trailing edge, or we've hit the `maxWait` limit.\n            return (!lastCallTime.current ||\n                timeSinceLastCall >= wait ||\n                timeSinceLastCall < 0 ||\n                (maxing && timeSinceLastInvoke >= maxWait));\n        };\n        var trailingEdge = function (time) {\n            timerId.current = null;\n            // Only invoke if we have `lastArgs` which means `func` has been\n            // debounced at least once.\n            if (trailing && lastArgs.current) {\n                return invokeFunc(time);\n            }\n            lastArgs.current = lastThis.current = null;\n            return result.current;\n        };\n        var timerExpired = function () {\n            var time = Date.now();\n            if (shouldInvoke(time)) {\n                return trailingEdge(time);\n            }\n            // https://github.com/xnimorz/use-debounce/issues/97\n            if (!mounted.current) {\n                return;\n            }\n            // Remaining wait calculation\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            var timeWaiting = wait - timeSinceLastCall;\n            var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n            // Restart the timer\n            startTimer(timerExpired, remainingWait);\n        };\n        var func = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var time = Date.now();\n            var isInvoking = shouldInvoke(time);\n            lastArgs.current = args;\n            lastThis.current = _this;\n            lastCallTime.current = time;\n            if (isInvoking) {\n                if (!timerId.current && mounted.current) {\n                    // Reset any `maxWait` timer.\n                    lastInvokeTime.current = lastCallTime.current;\n                    // Start the timer for the trailing edge.\n                    startTimer(timerExpired, wait);\n                    // Invoke the leading edge.\n                    return leading ? invokeFunc(lastCallTime.current) : result.current;\n                }\n                if (maxing) {\n                    // Handle invocations in a tight loop.\n                    startTimer(timerExpired, wait);\n                    return invokeFunc(lastCallTime.current);\n                }\n            }\n            if (!timerId.current) {\n                startTimer(timerExpired, wait);\n            }\n            return result.current;\n        };\n        func.cancel = function () {\n            if (timerId.current) {\n                useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n            }\n            lastInvokeTime.current = 0;\n            lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n        };\n        func.isPending = function () {\n            return !!timerId.current;\n        };\n        func.flush = function () {\n            return !timerId.current ? result.current : trailingEdge(Date.now());\n        };\n        return func;\n    }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n    return debounced;\n}\n","import { useCallback, useState } from 'react';\nimport Box from '../Components/Box';\nimport CodePanel from '../Components/CodePanel';\nimport { useDebounce } from 'use-debounce';\nimport Tabs from '../Components/Tabs';\n\nexport default function FlexBox() {\n\n  const\n  [styles, setStyles] = useState<string[]>([]),\n  [debounce] = useDebounce(styles, 1000),\n\n  handleInput = (id: number) => {\n    return (style: string) => {\n      const update = [...styles];\n      update[id] = style;\n      setStyles(update);\n    };\n  };\n\n  return (\n    <Tabs tabs={['row', 'column']}>\n      <>\n        <style scoped>{debounce[1]}</style>\n        <CodePanel\n        onInput={useCallback(handleInput(1), [])} // eslint-disable-line react-hooks/exhaustive-deps\n        title=\"CSS\">{`\n          @media (min-width: 600px) {\n            #container1 {\n              align-items: baseline;\n              /*\n              align-items: flex-start;\n              align-items: center;\n              align-items: flex-end;\n              align-items: stretched;\n              */\n              display: flex;\n              flex-direction: row;\n              /*\n              flex-direction: column;\n              flex-direction: column-reverse;\n              flex-direction: row-reverse;\n              */\n              justify-content: space-around;\n              /*\n              justify-content: center;\n              justify-content: flex-start;\n              justify-content: flex-end;\n              justify-content: space-evenly;\n              justify-content: space-between;\n              */\n              flex-wrap: wrap;\n              /*\n              flex-wrap: wrap-reverse;\n              */\n            }\n            #container2 {\n              display: flex;\n            }\n          }\n          #container1 > div {\n            flex: 1 1 25%;\n            /* grow shrink basis */\n            /* grow for positive space\n               shrink for negative space */\n            margin: 4px;\n          }\n          #box1 {\n            flex-shrink: 0 !important;\n            order: 0;\n          }\n          #box2 {\n            flex-grow: 0 !important;\n            order: 3;\n          }\n          #box3 {\n            flex-grow: 2 !important;\n            order: 2;\n          }\n          #box4 {\n            flex-shrink: 2 !important;\n          }\n          #box6 {\n            flex-shrink: 0 !important;\n          }\n      `}</CodePanel>\n        <div className=\"panel\" id=\"container1\">\n          <Box id={1} styles={{ lineHeight: '50px' }} />\n          <Box id={2} />\n          <Box id={3} />\n          <Box id={4} />\n          <Box id={5} />\n          <Box id={6} />\n        </div>\n      </>\n      <>\n      </>\n    </Tabs>\n  );\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nconst CodePanel = React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});\n\nexport default CodePanel;","import { useEffect, useState } from \"react\";\nimport M from 'materialize-css';\nimport './useToast/Style.scss';\n\nexport default function useToast() {\n\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    message && M.toast({\n      completeCallback: () => setMessage(''),\n      displayLength: 2000,\n      html: message\n    });\n    return () => M.Toast.dismissAll();\n  }, [message]);\n\n  return setMessage;\n};","export default function removeIndentation(text: string) {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};"],"sourceRoot":""}