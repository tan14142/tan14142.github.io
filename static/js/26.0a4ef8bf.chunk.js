(this.webpackJsonpwww=this.webpackJsonpwww||[]).push([[26,44,56,76],{108:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),l=n(86);t.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement("section",{className:"accent-bottom panel"},a.a.createElement("h2",null,"Largest palindrome product"),a.a.createElement("h4",null,"Problem 4"),a.a.createElement("p",null,"A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 \xd7 99."),a.a.createElement("p",null,"Find the largest palindrome made from the product of two 3-digit numbers.")),a.a.createElement(l.default,{title:"JavaScript"},'\n        () => {\n          for (let i = 997; i > 100; i--) {\n            for (let j = 999; j > 100; j--) {\n              let p = +(String(i) + String(i).split("").reverse().join(""));\n              if (p % j === 0 && j > 99 && j < 1000 && p / j > 99 && p / j < 1000) {\n                return p;\n              }\n            }\n          }\n        }\n    '))}},177:function(e,t,n){},86:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),l=n(87),o=n(38);n(177);t.default=a.a.memo((function(e){var t=e.children,n=e.onInput,c=void 0===n?function(){}:n,i=e.title,u=Object(l.default)(t),p=Object(o.default)();return Object(r.useEffect)((function(){return c(u)}),[c,u]),a.a.createElement("div",{className:"panel language-markup"},a.a.createElement("h3",null,i),a.a.createElement("button",{className:"reset",onClick:function(e){var t=e.currentTarget.parentNode.querySelector("code").textContent;navigator.clipboard.writeText(t).then((function(){return p("copied to clipboard")})).catch((function(){return p("copy to clipboard failed")}))}},"Copy to Clipboard"),a.a.createElement("pre",null,a.a.createElement("code",{contentEditable:!0,spellCheck:"false",suppressContentEditableWarning:!0,onInput:function(e){var t=e.target;c(t.textContent)}},u)))}))},87:function(e,t,n){"use strict";n.r(t),t.default=function(e){var t=e.split(/\r|\n/);t.pop(),t.shift();var n=t[0].match(/^\s+/g)||[];return(n?t.map((function(e){return e.replace(n[0],"")})):t).join("\r\n")}}}]);
//# sourceMappingURL=26.0a4ef8bf.chunk.js.map