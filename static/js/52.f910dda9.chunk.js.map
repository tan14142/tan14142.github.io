{"version":3,"sources":["Projects/ReactD3.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Utils/shuffle.ts"],"names":["ReactD3","useState","data1","setData1","data2","setData2","data3","setData3","svg1","useRef","svg2","svg3","beautifyMax","max","maxArr","toString","split","ceil","fill","join","useEffect","svg","select","current","Math","offsetX","drawCircle","strat","attr","value","attrs","height","margin","width","selectAll","data","enter","append","update","transition","duration","interrupt","beautified","padding","xScale","scaleLinear","domain","length","range","yScale","xAxis","axisBottom","ticks","yAxis","axisLeft","drawPath","line","x","index","y","curve","curveCardinal","call","style","class","stroke","colorScale","clamp","scaleBand","map","drawRect","bandwidth","on","opacity","text","remove","className","ref","onClick","shuffle","borderRight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","array","randomIndex","temporaryValue","currentIndex","tempArr","slice","floor","random"],"mappings":"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","file":"static/js/52.f910dda9.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { axisBottom, axisLeft, curveCardinal, line, scaleBand, scaleLinear, select } from 'd3';\nimport 'd3-selection-multi';\nimport shuffle from '../Utils/shuffle';\nimport './ReactD3/Style.scss';\n\nexport default function ReactD3() {\n  \n  const\n  [data1, setData1] = useState([1, 2, 4, 8, 12, 16, 20, 24]),\n  [data2, setData2] = useState(data1),\n  [data3, setData3] = useState(data1),\n  margin = 20,\n  svg1 = useRef(),\n  svg2 = useRef(),\n  svg3 = useRef();\n  \n  useEffect(() => {\n    \n    const\n    svg = select(svg1.current),\n    padding = 10,\n    max = Math.max(...data1) + padding;\n          \n    let offsetX = 20;\n    \n    const drawCircle = strat => strat\n      .attr('r', value => value)\n      .attr('cx', value => {\n        offsetX += value * 2 + padding;\n        return offsetX - value; \n      })\n      .attr('cy', max);\n    \n    svg.attrs({\n      height : max * 2,\n      margin : margin,\n      width : 300\n    });\n\n    svg\n      .selectAll('circle')\n      .data(data1)\n      .join(\n        enter => drawCircle(\n          enter\n          .append('circle')\n          .attr('fill', 'white')\n          .attr('stroke', 'black')\n        ),\n        update => drawCircle(\n          update\n          .transition()\n          .duration(500)\n        )\n      );\n    \n    return () => svg.interrupt();\n  }, [data1]);\n  \n  useEffect(() => {\n    \n    const \n    max = Math.max(...data2),\n    beautified = beautifyMax(max),\n    svg = select(svg2.current),\n    padding = 20,\n    xUnit = 50,\n    yUnit = 4,\n          \n    xScale = scaleLinear()\n      .domain([0, data2.length - 1])\n      .range([padding, (data2.length - 1) * xUnit + padding])\n    ,\n    yScale = scaleLinear()\n      .domain([0, beautified])\n      .range([beautified * yUnit + padding, padding])\n    ,\n    xAxis = axisBottom(xScale).ticks(data2.length),\n    yAxis = axisLeft(yScale).ticks(+max.toString()[0] + 1),\n    \n    drawPath = strat => strat\n      .attr('d', line()\n        .x((value, index) => xScale(index))\n        .y(yScale)\n        .curve(curveCardinal)\n      );\n\n    svg\n      .select('.xAxis')\n      .call(xAxis)\n      .style('transform', `translateY(${ yScale(0) }px)`);\n\n    svg\n      .select('.yAxis')\n      .call(yAxis)\n      .style('transform', `translateX(${ padding }px)`);\n    \n    svg\n      .attrs({\n        height : yScale(0) + padding,\n        margin : margin,\n        width : xScale(data2.length - 1) + padding\n      })\n      .selectAll('.path')\n      .data([data2])\n      .join(\n        enter => drawPath(\n          enter\n          .append('path')\n          .attrs({\n            class : 'path',\n            fill : 'none',\n            stroke : 'blue'\n          })\n        ),\n        update => drawPath(\n          update\n          .transition()\n          .duration(500)\n        )\n      );\n    \n    return () => svg.interrupt();\n  }, [data2]);\n  \n  useEffect(() => {\n    \n    const\n    max = Math.max(...data3),\n    beautified = beautifyMax(max),\n    svg = select(svg3.current),\n    padding = 20,\n    xUnit = 50,\n    yUnit = 4,\n    \n    colorScale = scaleLinear()\n      .domain([4, 12, 20])\n      .range(['green', 'orange', 'red'])\n      .clamp(true),\n    \n    xScale = scaleBand()\n      .domain(data3.map((value, index) => index))\n      .range([padding, (data3.length - 1) * xUnit + padding])\n      .padding(.5)\n    ,\n    yScale = scaleLinear()\n      .domain([0, beautified])\n      .range([beautified * yUnit + padding, padding])\n    ,\n    xAxis = axisBottom(xScale).ticks(data3.length),\n    yAxis = axisLeft(yScale).ticks(+max.toString()[0] + 1),\n\n    drawRect = strat => strat\n      .attrs({\n        fill : colorScale,\n        height : value => value * yUnit,\n        x : (value, index) => xScale(index),\n        y : yScale\n      });\n    \n    svg\n      .select('.xAxis')\n      .call(xAxis)\n      .style('transform', `translateY(${ yScale(0) }px)`);\n\n    svg\n      .select('.yAxis')\n      .call(yAxis)\n      .style('transform', `translateX(${ padding }px)`);\n    \n    svg\n      .attrs({\n        height : yScale(0) + padding,\n        margin : margin,\n        width : (data3.length - 1) * xUnit + padding * 2\n      })\n      .selectAll('.bar')\n      .data(data3)\n      .join(\n        enter => drawRect(\n          enter\n          .append('rect')\n          .attrs({\n            class : 'bar',\n            width : xScale.bandwidth()\n          })\n        ),\n        update => drawRect(\n          update\n          .transition()\n          .duration(500)\n        )\n      )\n      .on('mouseenter', (value, index) => {\n        svg\n          .selectAll('.tooltip')\n          .data([value])\n          .join(enter => enter\n            .append('text')\n            .attrs({\n              class : 'tooltip',\n              'font-size' : 12,\n              'text-anchor' : 'middle',\n              x : xScale(index) + xScale.bandwidth() / 2,\n              y : yScale(value)\n            })\n          )\n          .transition()\n          .attrs({\n            opacity : .8,\n            y : yScale(value) - 4\n          })\n          .text(value)\n      })\n      .on('mouseleave', () => svg\n        .selectAll('.tooltip')\n        .remove()\n      );\n    \n    return () => svg.interrupt();\n  }, [data3]);\n\n  function beautifyMax(max) {\n    \n    let\n    maxArr = max.toString().split(''),\n    ceil = ++maxArr[0];\n\n    maxArr.fill(0);\n    maxArr[0] = ceil;\n    return +maxArr.join('');\n  }\n\n  return (\n    <>\n      <section className=\"accent-bottom center-content panel\">\n        <h2>Circles</h2>\n        <svg\n        className=\"width100\"\n        ref={svg1} />\n        <button\n        className=\"btn ReactD3-el waves-effect\"\n        onClick={() => setData1(shuffle(data1))}>\n          shuffle\n        </button>\n      </section>\n      <section className=\"accent-bottom center-content panel\">\n        <h2>Line Chart</h2>\n        <svg\n        className=\"width100\"\n        ref={svg2}\n        style={{\n          borderRight: \"2rem solid transparent\",\n        }}>\n          <g className=\"xAxis\" />\n          <g className=\"yAxis\" />\n        </svg>\n        <button\n        className=\"btn ReactD3-el waves-effect\"\n        onClick={() => setData2(shuffle(data2))}>\n          shuffle\n        </button>\n      </section>\n      <section className=\"accent-bottom center-content panel\">\n        <h2>Bar Chart</h2>\n        <svg\n        className=\"width100\"\n        ref={svg3}\n        style={{\n          borderRight: \"2rem solid transparent\",\n        }}>\n          <g className=\"xAxis\" />\n          <g className=\"yAxis\" />\n        </svg>\n        <button\n        className=\"btn ReactD3-el waves-effect\"\n        onClick={() => setData3(shuffle(data3))}>\n          shuffle\n        </button>\n      </section>\n    </>\n  );\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function shuffle(array: any[]): any[] {\r\n    \r\n  let\r\n  currentIndex: number = array.length,\r\n  randomIndex,\r\n  temporaryValue,\r\n  tempArr: any[] = array.slice();\r\n\r\n  while (0 !== currentIndex) {\r\n\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    temporaryValue = tempArr[currentIndex];\r\n    tempArr[currentIndex] = tempArr[randomIndex];\r\n    tempArr[randomIndex] = temporaryValue;\r\n  }\r\n  return tempArr;\r\n};"],"sourceRoot":""}