{"version":3,"sources":["Projects/ProjectEuler/P8.tsx","Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx","Components/CodePanel/Code.tsx","Hooks/useHighlight.ts","Components/CodePanel.tsx","Hooks/useToast.ts"],"names":["P8","lang","className","removeIndentation","text","lines","split","pop","shift","indentation","match","map","line","replace","join","Tabs","children","tabs","elRef","useRef","useEffect","M","init","current","destroy","ref","title","key","to","React","Children","toArray","child","id","Code","indent","onInput","toast","useToast","code","Object","values","onClick","e","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","keys","toLowerCase","spellCheck","suppressContentEditableWarning","el","target","useHighlight","link","script","window","hljs","document","createElement","rel","href","src","onload","highlightAll","body","appendChild","removeChild","CodePanel","entries","entry","useState","message","setMessage","completeCallback","displayLength","html","Toast","dismissAll"],"mappings":"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","file":"static/js/40.089bc6f5.chunk.js","sourcesContent":["import CodePanel from '../../Components/CodePanel';\r\nimport { LangProps } from '../../Components/CodePanel/LangProps';\r\n\r\nexport default function P8({lang}: LangProps) {\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h2>Largest product in a series</h2>\r\n        <h4>Problem 8</h4>\r\n        <p>\r\n          The four adjacent digits in the 1000-digit number that have the greatest\r\n          product are 9 × 9 × 8 × 9 = 5832.\r\n        </p>\r\n        <div className=\"center font-mono nowrap\">\r\n          73167176531330624919225119674426574742355349194934\r\n          <br />\r\n          96983520312774506326239578318016984801869478851843\r\n          <br />\r\n          85861560789112949495459501737958331952853208805511\r\n          <br />\r\n          12540698747158523863050715693290963295227443043557\r\n          <br />\r\n          66896648950445244523161731856403098711121722383113\r\n          <br />\r\n          62229893423380308135336276614282806444486645238749\r\n          <br />\r\n          30358907296290491560440772390713810515859307960866\r\n          <br />\r\n          70172427121883998797908792274921901699720888093776\r\n          <br />\r\n          65727333001053367881220235421809751254540594752243\r\n          <br />\r\n          52584907711670556013604839586446706324415722155397\r\n          <br />\r\n          53697817977846174064955149290862569321978468622482\r\n          <br />\r\n          83972241375657056057490261407972968652414535100474\r\n          <br />\r\n          82166370484403199890008895243450658541227588666881\r\n          <br />\r\n          16427171479924442928230863465674813919123162824586\r\n          <br />\r\n          17866458359124566529476545682848912883142607690042\r\n          <br />\r\n          24219022671055626321111109370544217506941658960408\r\n          <br />\r\n          07198403850962455444362981230987879927244284909188\r\n          <br />\r\n          84580156166097919133875499200524063689912560717606\r\n          <br />\r\n          05886116467109405077541002256983155200055935729725\r\n          <br />\r\n          71636269561882670428252483600823257530420752963450\r\n        </div>\r\n        <p>\r\n          Find the thirteen adjacent digits in the 1000-digit number that have the\r\n          greatest product. What is the value of this product?\r\n        </p>\r\n      </section>\r\n      <CodePanel lang={lang} />\r\n    </>\r\n  );\r\n};","export default function removeIndentation(text: string) {\r\n  const lines = text.split(/\\r|\\n/);\r\n  lines.pop();\r\n  lines.shift();\r\n\r\n  const indentation = lines[0].match(/^\\s+/g) || [];\r\n\r\n  return (indentation\r\n    ? lines.map((line) => line.replace(indentation[0], ''))\r\n    : lines\r\n  ).join('\\r\\n');\r\n};","import React, { useEffect, useRef } from \"react\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport M from 'materialize-css';\r\nimport './Tabs/Style.scss';\r\n\r\ninterface TabsProps {\r\n  children: React.ReactNode;\r\n  tabs: string[];\r\n}\r\n\r\nexport default function Tabs({ children, tabs }: TabsProps) {\r\n\r\n  const elRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    const tabs = M.Tabs.init(elRef.current as Element, {});\r\n    return () => tabs.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tabs\" ref={elRef}>\r\n        {tabs.map((title, key) => \r\n          <li className=\"tab\" key={key}>\r\n            <Link to={\"#\" + title}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {React.Children.toArray(children).map((child, key) => \r\n        <div\r\n        className=\"flex-column\"\r\n        id={tabs[key]}\r\n        key={key}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","\r\nimport { useEffect } from 'react';\r\nimport removeIndentation from './removeIndentation';\r\nimport useToast from '../../Hooks/useToast';\r\nimport { CodeProps } from './CodeProps';\r\n\r\nexport default function Code({ indent = true, lang, onInput = () => {} }: CodeProps) {\r\n  \r\n  const toast = useToast();\r\n  let code = Object.values(lang)[0];\r\n\r\n  if (!indent) {\r\n    code = removeIndentation(code)\r\n  }\r\n\r\n  useEffect(() => onInput(code), [onInput, code]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n      className=\"reset\"\r\n      onClick={e => {\r\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\r\n        navigator.clipboard.writeText(text)\r\n        .then(() => toast('copied to clipboard'))\r\n        .catch(() => toast('copy to clipboard failed'));       \r\n      }}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <pre>\r\n        <code\r\n        contentEditable\r\n        className={\"hljs language-\" + Object.keys(lang)[0].toLowerCase()}\r\n        spellCheck=\"false\"\r\n        suppressContentEditableWarning={true}\r\n        onInput={e => {\r\n          const el = e.target as HTMLElement;\r\n          onInput(el.textContent as string);\r\n        }}>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};","import { useEffect } from 'react';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    hljs: any;\r\n  }\r\n}\r\n\r\nexport default function useHighlight() {\r\n  \r\n  useEffect(() => {\r\n\r\n    let\r\n    link: any,\r\n    script: any;\r\n\r\n    if (!window.hljs) {\r\n      window.hljs = true;\r\n\r\n      link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = 'https://unpkg.com/@highlightjs/cdn-assets@11.1.0/styles/default.min.css';\r\n\r\n      script = document.createElement('script');\r\n      script.src = 'https://unpkg.com/@highlightjs/cdn-assets@11.1.0/highlight.min.js';\r\n      script.onload = () => window.hljs.highlightAll();\r\n    \r\n      document.body.appendChild(link);\r\n      document.body.appendChild(script);\r\n    }\r\n    \r\n    return () => {\r\n      typeof link === 'object' && document.body.removeChild(link);\r\n      typeof script === 'object' && document.body.removeChild(script);\r\n      delete window.hljs;\r\n    }\r\n  }, []);\r\n}","import Code from './CodePanel/Code';\r\nimport Tabs from './Tabs';\r\nimport './CodePanel/Style.scss';\r\nimport { CodeProps } from './CodePanel/CodeProps';\r\nimport useHighlight from '../Hooks/useHighlight';\r\n\r\nexport default function CodePanel({ lang, indent = true, onInput = () => {} }: CodeProps) {\r\n\r\n  useHighlight();\r\n\r\n  return (\r\n    <div className=\"panel language-markup\">\r\n      <Tabs tabs={Object.keys(lang)}>\r\n        {Object.entries(lang).map(\r\n          (entry, key) => <Code indent={indent} key={key} lang={{[entry[0]]: entry[1]}} onInput={onInput} />\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};"],"sourceRoot":""}