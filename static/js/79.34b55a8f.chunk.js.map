{"version":3,"sources":["Projects/WorldPopulation/transformCSV.ts","Projects/WorldPopulation.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Hooks/useToast.ts","Hooks/useFetch.ts"],"names":["transformCSV","response","a","csvParse","text","data","sets","Array","fill","forEach","series","key","years","Object","entries","type","pop","region","year","value","push","length","WorldPopulation","startYear","useFetch","ready","useState","setYear","timer","setTimer","useTimer","setActive","className","RacingBars","dataSlice","wMax","getTotal","action","style","marginBottom","id","max","min","onChange","e","target","htmlFor","position","top","active","onClick","preventDefault","interval","svgRef","useRef","useEffect","height","width","current","clientWidth","aScale","scaleLinear","domain","range","xAxis","axisBottom","tickFormat","x","ticks","svg","select","transition","duration","styles","opacity","call","transform","selectAll","remove","interrupt","regions","slice","world","xScale","yScale","scaleBand","padding","map","index","wScale","bandwidth","color","keys","sort","b","join","attrs","class","values","stroke","y","Rural","entry","parseInt","ref","borderBottom","marginTop","overflow","obj","Total","callback","setter","callbackRef","setterRef","timerRef","clear","clearInterval","clearTimeout","tick","props","bool","state","delay","setInterval","timeout","setTimeout","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","useToast","message","setMessage","M","toast","completeCallback","displayLength","html","Toast","dismissAll","url","setState","isMounted","fetch","result","name"],"mappings":"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","file":"static/js/79.34b55a8f.chunk.js","sourcesContent":["import { csvParse } from 'd3';\r\n\r\nexport default async function transformCSV(response: Response) {\r\n  const\r\n  data = csvParse(await response.text()) as any[],\r\n  sets = new Array(1960).fill(null);\r\n\r\n  data.forEach((series, key) => {\r\n    const\r\n    years = Object.entries(series),\r\n    type = years.pop()![1],\r\n    region = years.pop()![1];\r\n\r\n    for (const [year, value] of years) {\r\n      if (key === 0) {\r\n        sets[+year] = [];\r\n      }\r\n      if (key % 2 === 0) {\r\n        sets[+year].push({[region as string]: {}})\r\n      }\r\n      sets[+year][sets[+year].length - 1][region as string][type as string] = value;\r\n    }\r\n  });\r\n  return sets;\r\n};","import { useEffect, useRef, useState } from 'react';\r\nimport { axisBottom, scaleLinear, scaleBand, select } from 'd3';\r\nimport 'd3-selection-multi';\r\nimport useFetch from '../Hooks/useFetch';\r\nimport transformCSV from './WorldPopulation/transformCSV';\r\n\r\nexport default function WorldPopulation() {\r\n  \r\n  const startYear = 1960,\r\n        { data, ready } = useFetch(\r\n          '/Projects/WorldPopulation.csv',\r\n          transformCSV\r\n        ),\r\n        [year, setYear] = useState(startYear),\r\n        [timer, setTimer] = useState();\r\n  \r\n  useTimer(() => {\r\n    if (year < data.length - 1) {\r\n      setYear(year + 1);\r\n    }\r\n    else {\r\n      timer.setActive(false);\r\n    }\r\n  }, setTimer);\r\n\r\n  return ready\r\n    ? (\r\n    <section className=\"accent-bottom panel center\">\r\n      <h2>World Population by Region</h2>\r\n      <h4>and global urbanization since 1960</h4>\r\n      <p>Rural | Urban</p>\r\n      <RacingBars\r\n      dataSlice={data[year]}\r\n      wMax={getTotal(data[data.length - 1][data[year].length - 1])} />\r\n      <form\r\n      action=\"#\"\r\n      style={{ marginBottom: \"1rem\" }}>\r\n        <p className=\"range-field\">\r\n          <input\r\n          id=\"range\"\r\n          max={data.length - 1}\r\n          min={startYear}\r\n          onChange={e => {\r\n            timer.setActive(false);\r\n            setYear(+e.target.value);\r\n          }}\r\n          value={year}\r\n          type=\"range\" />\r\n        </p>\r\n        <label htmlFor=\"range\" style={{\r\n          position : 'relative',\r\n          top : '-20px'\r\n        }}>{year}</label>\r\n        <br />\r\n        <button\r\n        className={!timer.active && year < data.length - 1 ? \"btn waves-effect\" : \"hide\"}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          timer.interval(100);\r\n        }}>\r\n          run\r\n        </button>\r\n        <button\r\n        className={year < data.length - 1 && timer.active ? \"btn waves-effect\" : \"hide\"}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          timer.setActive(false);\r\n        }}>\r\n          pause\r\n        </button>\r\n        <button\r\n        className={year === data.length - 1 ? \"btn waves-effect\" : \"hide\"}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          setYear(startYear);\r\n        }}>\r\n          reset\r\n        </button>\r\n      </form>\r\n    </section>\r\n    )\r\n    : null;\r\n};\r\n\r\nconst RacingBars = ({ dataSlice, wMax }) => {\r\n  \r\n  const svgRef = useRef();\r\n  \r\n  useEffect(() => {\r\n\r\n    const height = 200,\r\n          width = svgRef.current.clientWidth,\r\n          \r\n          aScale = scaleLinear()\r\n            .domain([0, wMax / 3])\r\n            .range([-.5, width]),\r\n          \r\n          xAxis = axisBottom(aScale)\r\n            .tickFormat(x => x / 1000000 + 'M')\r\n            .ticks(5),\r\n          \r\n          svg = select(svgRef.current);\r\n\r\n    svg\r\n      .transition()\r\n      .duration(500)\r\n      .styles({\r\n        height : height + 'px',\r\n        opacity : 1\r\n      });\r\n    \r\n    svg\r\n      .select('.xAxis')\r\n      .call(xAxis)\r\n      .styles({\r\n        transform : `translateY(${ height - 2 }px)`\r\n      });\r\n\r\n    svg\r\n      .selectAll('.xAxis > .domain, .xAxis > .tick:last-child')\r\n      .remove();\r\n\r\n    svg\r\n      .selectAll('.tick > line')\r\n      .styles({\r\n        fill : 'red',\r\n        opacity : 1 / 3,\r\n        transform : `translateY(-${height - 10}px) scale(1, ${height / 6 - .5})`\r\n      });\r\n\r\n    return () => svg.interrupt();\r\n  }, [wMax]);\r\n\r\n  useEffect(() => {\r\n\r\n    const height = 200,\r\n          width = svgRef.current.clientWidth,\r\n          regions = dataSlice.slice(0, dataSlice.length - 1),\r\n          world = dataSlice[dataSlice.length - 1],\r\n          \r\n          xScale = scaleLinear()\r\n            .domain([0, wMax / 3])\r\n            .range([0, width]),\r\n          \r\n          yScale = scaleBand()\r\n            .padding(1 / 3)\r\n            .domain(new Array(regions.length)\r\n              .fill(null)\r\n              .map((value, index) => index)\r\n            )\r\n            .range([0, height]),\r\n          \r\n          wScale = scaleLinear()\r\n            .domain([0, wMax])\r\n            .range([height, yScale.bandwidth() / 2]),\r\n          \r\n          svg = select(svgRef.current);\r\n\r\n    [\r\n      '#66c2a5',\r\n      '#fc8d62',\r\n      '#8da0cb',\r\n      '#e78ac3',\r\n      '#a6d854',\r\n      '#ffd92f',\r\n      '#e5c494'\r\n    ].map((color, index) => regions[index][Object.keys(regions[index])[0]].color = color)\r\n\r\n    regions.sort((a, b) => getTotal(b) - getTotal(a));\r\n    \r\n    svg\r\n      .selectAll('.region')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('rect')\r\n      .attrs({\r\n        class : 'region',\r\n        fill : region => Object.values(region)[0].color,\r\n        stroke : 'black',\r\n        height : yScale.bandwidth(),\r\n        x : 0\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        width : region => xScale(getTotal(region)),\r\n        y : (region, index) => yScale(index)\r\n      });\r\n\r\n    svg\r\n      .selectAll('.regionRural')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('rect')\r\n      .attrs({\r\n        class : 'regionRural',\r\n        fill : 'none',\r\n        stroke : 'black',\r\n        'stroke-opacity' : .25,\r\n        height : yScale.bandwidth()\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        width : .1,\r\n        x : (region, index) => xScale(getTotal(region)) * Object.values(region)[0].Rural / 100,\r\n        y : (region, index) => yScale(index)\r\n      });\r\n    \r\n    svg\r\n      .selectAll('.world')\r\n      .data([world])\r\n      .join('rect')\r\n      .attrs({\r\n        class : 'world',\r\n        width : yScale.bandwidth() * 3,\r\n        x : width - yScale.bandwidth() * 4\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        height : entry => height - wScale(getTotal(entry)),\r\n        y : entry => wScale(getTotal(entry))\r\n      });\r\n    \r\n    svg\r\n      .selectAll('.label')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('text')\r\n      .text(region => Object.keys(region)[0])\r\n      .attrs({\r\n        class : 'label',\r\n        'font-size' : 8,\r\n        x : 0,\r\n        y : (region, index) => yScale(index) - 2\r\n      });\r\n   \r\n    svg\r\n      .selectAll('.total')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('text')\r\n      .text(region => parseInt(getTotal(region) / 1000000) + 'M')\r\n      .attrs({\r\n        class : 'total',\r\n        'font-size' : 8,\r\n        x : 4,\r\n        y : (region, index) => yScale(index) + yScale.bandwidth() * 2 / 3\r\n      });\r\n\r\n    svg\r\n      .selectAll('.worldLabel')\r\n      .data([world])\r\n      .join('text')\r\n      .text('Total')\r\n      .attrs({\r\n        class : 'worldLabel',\r\n        'font-size' : 8,\r\n        x : width - yScale.bandwidth() * 3\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        y : entry => wScale(getTotal(entry)) - 2\r\n      });\r\n\r\n    svg\r\n      .selectAll('.worldTotal')\r\n      .data([world])\r\n      .join('text')\r\n      .text(world => parseInt(getTotal(world) / 1000000) + 'M')\r\n      .attrs({\r\n        class : 'worldTotal',\r\n        fill : 'white',\r\n        'font-size' : 8,\r\n        x : width - yScale.bandwidth() * 3.15\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        y : entry => wScale(getTotal(entry)) + yScale.bandwidth() * 3 / 5\r\n      });\r\n    \r\n    return () => svg.interrupt();\r\n  }, [dataSlice, wMax]);\r\n  \r\n  return (\r\n    <svg\r\n    ref={svgRef}\r\n    style={{\r\n      borderBottom : '2px solid black',\r\n      height : 0,\r\n      marginTop : 20,\r\n      opacity : 0,\r\n      overflow : 'visible'\r\n    }}>\r\n      <g className=\"xAxis\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst getTotal = obj => +Object.values(obj)[0].Total;\r\n\r\nconst useTimer = (callback, setter) => {\r\n  \r\n  const callbackRef = useRef(),\r\n        setterRef = useRef(),\r\n        timerRef = useRef();\r\n\r\n  const clear = () => {\r\n    clearInterval(timerRef.current);\r\n    clearTimeout(timerRef.current);\r\n  };\r\n  \r\n  const tick = () => callbackRef.current();\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n    setterRef.current = setter;\r\n  }, [callback, setter]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const props = {\r\n      active : false,\r\n      setActive : bool => {\r\n        props.active && !bool && clear();\r\n        setterRef.current(state => ({ ...state, active : props.active = bool }));\r\n      },\r\n      interval : delay => {\r\n        timerRef.current = setInterval(tick, delay);\r\n        props.setActive(true);\r\n      },\r\n      timeout : delay => {\r\n        timerRef.current = setTimeout(tick, delay);\r\n        props.setActive(true);\r\n      }\r\n    };\r\n    setterRef.current(props);\r\n    \r\n    return clear;\r\n  }, []);\r\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};","import { useEffect, useState } from 'react';\r\nimport useToast from './useToast';\r\n\r\nexport default function useFetch(url: string, transform?: (res: Response) => any) {\r\n\r\n  const\r\n  [state, setState] = useState({ data: '', ready: false }),\r\n  toast = useToast();\r\n\r\n  useEffect(() => {\r\n\r\n    let isMounted = true;\r\n\r\n    (async () => {\r\n      try {\r\n        const\r\n        response = await fetch(url),\r\n        result = isMounted && await (transform\r\n          ? transform!(response)\r\n          : response.text()\r\n        );\r\n        isMounted && setState({\r\n          data: result,\r\n          ready: true\r\n        });\r\n      }\r\n      catch(e) {\r\n        isMounted && toast(e.name === 'AbortError'\r\n          ? 'Fetch was aborted'\r\n          : 'Something went wrong. Please try later.'\r\n        );\r\n      }\r\n    })();\r\n    \r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n  }, [toast, url, transform]);\r\n\r\n  return state;\r\n};"],"sourceRoot":""}