{"version":3,"sources":["Components/Box.tsx","../node_modules/use-debounce/esm/useDebounce.js","../node_modules/use-debounce/esm/useDebouncedCallback.js","Snippets/FlexBox.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/CodePanel.tsx","Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx"],"names":["id","styles","className","style","valueEquality","left","right","useDebounce","value","delay","options","eq","equalityFn","_a","useState","state","dispatch","_b","callback","maxWait","maxWaitHandler","useRef","maxWaitArgs","leading","trailing","undefined","leadingCall","functionTimeoutHandler","isComponentUnmounted","debouncedFunction","current","cancelDebouncedCallback","useCallback","clearTimeout","useEffect","debouncedCallback","args","_i","arguments","length","apply","setTimeout","shouldCallFunction","callPending","useDebouncedCallback","cancel","previousValue","setStyles","debounce","Tabs","tabs","scoped","CodePanel","onInput","update","title","Box","lineHeight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","React","memo","children","code","removeIndentation","toast","useToast","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","lines","split","pop","shift","indentation","match","map","line","replace","join","elRef","M","init","destroy","ref","key","to","Children","toArray","child"],"mappings":"+GAAA,2BAOe,sBAA+B,IAA5BA,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,OACpB,OACE,yBAAKC,UAAU,aAAaF,GAAI,MAAQA,EAAIG,MAAOF,GAAnD,OACOD,K,6FCRX,SAASI,EAAcC,EAAMC,GACzB,OAAOD,IAASC,EAEL,SAASC,EAAYC,EAAOC,EAAOC,GAC9C,IAAIC,EAAKD,GAAWA,EAAQE,WAAaF,EAAQE,WAAaR,EAC1DS,EAAKC,mBAASN,GAAQO,EAAQF,EAAG,GAAIG,EAAWH,EAAG,GACnDI,ECPO,SAA8BC,EAAUT,EAAOC,QAC1C,IAAZA,IAAsBA,EAAU,IACpC,IAAIS,EAAUT,EAAQS,QAClBC,EAAiBC,iBAAO,MACxBC,EAAcD,iBAAO,IACrBE,EAAUb,EAAQa,QAClBC,OAAgCC,IAArBf,EAAQc,UAAgCd,EAAQc,SAC3DE,EAAcL,kBAAO,GACrBM,EAAyBN,iBAAO,MAChCO,EAAuBP,kBAAO,GAC9BQ,EAAoBR,iBAAOH,GAC/BW,EAAkBC,QAAUZ,EAC5B,IAAIa,EAA0BC,uBAAY,WACtCC,aAAaN,EAAuBG,SACpCG,aAAab,EAAeU,SAC5BV,EAAeU,QAAU,KACzBR,EAAYQ,QAAU,GACtBH,EAAuBG,QAAU,KACjCJ,EAAYI,SAAU,IACvB,IACHI,qBAAU,WAGN,OADAN,EAAqBE,SAAU,EACxB,WAEHF,EAAqBE,SAAU,KAEpC,IACH,IAAIK,EAAoBH,uBAAY,WAEhC,IADA,IAAII,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAKC,GAAMC,UAAUD,GAEzBf,EAAYQ,QAAUM,EACtBH,aAAaN,EAAuBG,SAChCJ,EAAYI,UACZJ,EAAYI,SAAU,GAErBH,EAAuBG,UAAWP,GAAYG,EAAYI,UAC3DD,EAAkBC,QAAQU,MAAMX,EAAmBO,GACnDV,EAAYI,SAAU,GAE1BH,EAAuBG,QAAUW,YAAW,WACxC,IAAIC,GAAqB,EACrBnB,GAAWG,EAAYI,UACvBY,GAAqB,GAEzBX,KACKH,EAAqBE,SAAWN,GAAYkB,GAC7Cb,EAAkBC,QAAQU,MAAMX,EAAmBO,KAExD3B,GACCU,IAAYC,EAAeU,SAAWN,IACtCJ,EAAeU,QAAUW,YAAW,WAChC,IAAIL,EAAOd,EAAYQ,QACvBC,IACKH,EAAqBE,SACtBD,EAAkBC,QAAQU,MAAM,KAAMJ,KAE3CjB,MAER,CAACA,EAASV,EAAOsB,EAAyBR,EAASC,IAClDmB,EAAcX,uBAAY,WAErBL,EAAuBG,UAG5BD,EAAkBC,QAAQU,MAAM,KAAMlB,EAAYQ,SAClDC,OACD,CAACA,IAEJ,MAAO,CAACI,EAAmBJ,EAAyBY,GDhE3CC,CAAqBZ,uBAAY,SAAUxB,GAAS,OAAOQ,EAASR,KAAW,IAAKC,EAAOC,GAAUQ,EAAWD,EAAG,GAAI4B,EAAS5B,EAAG,GAAI0B,EAAc1B,EAAG,GAC7J6B,EAAgBzB,iBAAOb,GAQ3B,OAPA0B,qBAAU,WAEDvB,EAAGmC,EAAchB,QAAStB,KAC3BU,EAASV,GACTsC,EAAchB,QAAUtB,KAE7B,CAACA,EAAOU,EAAUP,IACd,CAACI,EAAO8B,EAAQF,G,YEXZ,qBAAO,IAML3C,EANI,EAGGc,mBAAmB,IAHtB,mBAGlBb,EAHkB,KAGV8C,EAHU,OAINxC,EAAYN,EAAQ,KAAhC+C,EAJkB,oBAcnB,OACE,kBAACC,EAAA,QAAD,CAAMC,KAAM,CAAC,MAAO,WAClB,oCACE,2BAAOC,QAAM,GAAEH,EAAS,IACxB,kBAACI,EAAA,QAAD,CAAWC,QAASrB,uBAZXhC,EAYmC,EAXzC,SAACG,GACN,IAAMmD,EAAM,YAAOrD,GACnBqD,EAAOtD,GAAMG,EACb4C,EAAUO,KAQwC,IAAKC,MAAM,OAA3D,2pDA4DA,yBAAKrD,UAAU,QAAQF,GAAG,cACxB,kBAACwD,EAAA,QAAD,CAAKxD,GAAI,EAAGC,OAAQ,CAAEwD,WAAY,UAClC,kBAACD,EAAA,QAAD,CAAKxD,GAAI,IACT,kBAACwD,EAAA,QAAD,CAAKxD,GAAI,IACT,kBAACwD,EAAA,QAAD,CAAKxD,GAAI,IACT,kBAACwD,EAAA,QAAD,CAAKxD,GAAI,IACT,kBAACwD,EAAA,QAAD,CAAKxD,GAAI,MAGb,wC,uICzFS,SAAS0D,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,gCIL9F,kDAWeC,cAAMC,MAAK,YAA6D,IAA1DC,EAAyD,EAAzDA,SAAyD,IAA/CnB,eAA+C,MAArC,aAAqC,EAA3BE,EAA2B,EAA3BA,MAGzDkB,EAAOC,kBAAkBF,GACzBG,EAAQC,oBAIR,OAFA1C,qBAAU,kBAAMmB,EAAQoB,KAAO,CAACpB,EAASoB,IAGvC,yBAAKvE,UAAU,yBACb,4BAAKqD,GACL,4BACArD,UAAU,QACV2E,QAAS,SAAAC,GACP,IAAMC,EAAOD,EAAEE,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUP,GAC7BQ,MAAK,kBAAMZ,EAAM,0BACjBa,OAAM,kBAAMb,EAAM,iCANrB,qBAUA,6BACE,0BACAc,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChCtC,QAAS,SAAAyB,GACP,IAAMc,EAAKd,EAAEe,OACbxC,EAAQuC,EAAGT,eAEVV,S,gCCzCX,OAAe,mBAACM,GACd,IAAMe,EAAQf,EAAKgB,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAQJ,EAAY,GAAI,OACjDJ,GACFS,KAAK,U,gCCVT,0DAUe,sBAAoC,IAAjC/B,EAAgC,EAAhCA,SAAUtB,EAAsB,EAAtBA,KAEpBsD,EAAQnF,iBAAyB,MAOvC,OALAa,qBAAU,WACR,IAAMgB,EAAOuD,IAAExD,KAAKyD,KAAKF,EAAM1E,QAAoB,IACnD,OAAO,kBAAMoB,EAAKyD,aACjB,IAGD,oCACE,wBAAIzG,UAAU,OAAO0G,IAAKJ,GACvBtD,EAAKkD,KAAI,SAAC7C,EAAOsD,GAAR,OACR,wBAAI3G,UAAU,MAAM2G,IAAKA,GACvB,kBAAC,IAAD,CAAMC,GAAI,IAAMvD,GACbA,QAKRe,IAAMyC,SAASC,QAAQxC,GAAU4B,KAAI,SAACa,EAAOJ,GAAR,OACpC,yBACA3G,UAAU,cACVF,GAAIkD,EAAK2D,GACTA,IAAKA,GACFI","file":"static/js/36.c4e7a8bb.chunk.js","sourcesContent":["import React from 'react';\n\ninterface BoxProps {\n  id: number;\n  styles?: React.CSSProperties;\n}\n\nexport default ({ id, styles }: BoxProps) => {\n  return (\n    <div className=\"card-panel\" id={\"box\" + id} style={styles}>\n      Box {id}\n    </div>\n  );\n};","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\nfunction valueEquality(left, right) {\n    return left === right;\n}\nexport default function useDebounce(value, delay, options) {\n    var eq = options && options.equalityFn ? options.equalityFn : valueEquality;\n    var _a = useState(value), state = _a[0], dispatch = _a[1];\n    var _b = useDebouncedCallback(useCallback(function (value) { return dispatch(value); }, []), delay, options), callback = _b[0], cancel = _b[1], callPending = _b[2];\n    var previousValue = useRef(value);\n    useEffect(function () {\n        // We need to use this condition otherwise we will run debounce timer for the first render (including maxWait option)\n        if (!eq(previousValue.current, value)) {\n            callback(value);\n            previousValue.current = value;\n        }\n    }, [value, callback, eq]);\n    return [state, cancel, callPending];\n}\n","import { useRef, useCallback, useEffect } from 'react';\nexport default function useDebouncedCallback(callback, delay, options) {\n    if (options === void 0) { options = {}; }\n    var maxWait = options.maxWait;\n    var maxWaitHandler = useRef(null);\n    var maxWaitArgs = useRef([]);\n    var leading = options.leading;\n    var trailing = options.trailing === undefined ? true : options.trailing;\n    var leadingCall = useRef(false);\n    var functionTimeoutHandler = useRef(null);\n    var isComponentUnmounted = useRef(false);\n    var debouncedFunction = useRef(callback);\n    debouncedFunction.current = callback;\n    var cancelDebouncedCallback = useCallback(function () {\n        clearTimeout(functionTimeoutHandler.current);\n        clearTimeout(maxWaitHandler.current);\n        maxWaitHandler.current = null;\n        maxWaitArgs.current = [];\n        functionTimeoutHandler.current = null;\n        leadingCall.current = false;\n    }, []);\n    useEffect(function () {\n        // We have to set isComponentUnmounted to be truth, as fast-refresh runs all useEffects\n        isComponentUnmounted.current = false;\n        return function () {\n            // we use flag, as we allow to call callPending outside the hook\n            isComponentUnmounted.current = true;\n        };\n    }, []);\n    var debouncedCallback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        maxWaitArgs.current = args;\n        clearTimeout(functionTimeoutHandler.current);\n        if (leadingCall.current) {\n            leadingCall.current = false;\n        }\n        if (!functionTimeoutHandler.current && leading && !leadingCall.current) {\n            debouncedFunction.current.apply(debouncedFunction, args);\n            leadingCall.current = true;\n        }\n        functionTimeoutHandler.current = setTimeout(function () {\n            var shouldCallFunction = true;\n            if (leading && leadingCall.current) {\n                shouldCallFunction = false;\n            }\n            cancelDebouncedCallback();\n            if (!isComponentUnmounted.current && trailing && shouldCallFunction) {\n                debouncedFunction.current.apply(debouncedFunction, args);\n            }\n        }, delay);\n        if (maxWait && !maxWaitHandler.current && trailing) {\n            maxWaitHandler.current = setTimeout(function () {\n                var args = maxWaitArgs.current;\n                cancelDebouncedCallback();\n                if (!isComponentUnmounted.current) {\n                    debouncedFunction.current.apply(null, args);\n                }\n            }, maxWait);\n        }\n    }, [maxWait, delay, cancelDebouncedCallback, leading, trailing]);\n    var callPending = useCallback(function () {\n        // Call pending callback only if we have anything in our queue\n        if (!functionTimeoutHandler.current) {\n            return;\n        }\n        debouncedFunction.current.apply(null, maxWaitArgs.current);\n        cancelDebouncedCallback();\n    }, [cancelDebouncedCallback]);\n    // At the moment, we use 3 args array so that we save backward compatibility\n    return [debouncedCallback, cancelDebouncedCallback, callPending];\n}\n","import React, { useCallback, useState } from 'react';\nimport Box from '../Components/Box';\nimport CodePanel from '../Components/CodePanel';\nimport { useDebounce } from 'use-debounce';\nimport Tabs from '../Components/Tabs';\n\nexport default () => {\n\n  const\n  [styles, setStyles] = useState<string[]>([]),\n  [debounce] = useDebounce(styles, 1000),\n\n  handleInput = (id: number) => {\n    return (style: string) => {\n      const update = [...styles];\n      update[id] = style;\n      setStyles(update);\n    };\n  };\n\n  return (\n    <Tabs tabs={['row', 'column']}>\n      <>\n        <style scoped>{debounce[1]}</style>\n        <CodePanel onInput={useCallback(handleInput(1), [])} title=\"CSS\">{`\n          @media (min-width: 600px) {\n            #container1 {\n              align-items: baseline;\n              /*\n              align-items: flex-start;\n              align-items: center;\n              align-items: flex-end;\n              align-items: stretched;\n              */\n              display: flex;\n              flex-direction: row;\n              /*\n              flex-direction: column;\n              flex-direction: column-reverse;\n              flex-direction: row-reverse;\n              */\n              justify-content: space-around;\n              /*\n              justify-content: center;\n              justify-content: flex-start;\n              justify-content: flex-end;\n              justify-content: space-evenly;\n              justify-content: space-between;\n              */\n              flex-wrap: wrap;\n              /*\n              flex-wrap: wrap-reverse;\n              */\n            }\n            #container2 {\n              display: flex;\n            }\n          }\n          #container1 > div {\n            flex: 1 1 25%;\n            /* grow shrink basis */\n            /* grow for positive space\n               shrink for negative space */\n            margin: 4px;\n          }\n          #box1 {\n            flex-shrink: 0 !important;\n            order: 0;\n          }\n          #box2 {\n            flex-grow: 0 !important;\n            order: 3;\n          }\n          #box3 {\n            flex-grow: 2 !important;\n            order: 2;\n          }\n          #box4 {\n            flex-shrink: 2 !important;\n          }\n          #box6 {\n            flex-shrink: 0 !important;\n          }\n      `}</CodePanel>\n        <div className=\"panel\" id=\"container1\">\n          <Box id={1} styles={{ lineHeight: '50px' }} />\n          <Box id={2} />\n          <Box id={3} />\n          <Box id={4} />\n          <Box id={5} />\n          <Box id={6} />\n        </div>\n      </>\n      <>\n      </>\n    </Tabs>\n  );\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nexport default React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});","export default (text: string) => {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};","import React, { useEffect, useRef } from \"react\";\nimport{ Link } from \"react-router-dom\";\nimport M from 'materialize-css';\nimport './Tabs/Style.scss';\n\ninterface TabsProps {\n  children: React.ReactNode;\n  tabs: string[];\n}\n\nexport default ({ children, tabs }: TabsProps) => {\n\n  const elRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const tabs = M.Tabs.init(elRef.current as Element, {});\n    return () => tabs.destroy();\n  }, []);\n\n  return (\n    <>\n      <ul className=\"tabs\" ref={elRef}>\n        {tabs.map((title, key) => \n          <li className=\"tab\" key={key}>\n            <Link to={\"#\" + title}>\n              {title}\n            </Link>\n          </li>\n        )}\n      </ul>\n      {React.Children.toArray(children).map((child, key) => \n        <div\n        className=\"flex-column\"\n        id={tabs[key]}\n        key={key}>\n          {child}\n        </div>\n      )}\n    </>\n  );\n};"],"sourceRoot":""}