{"version":3,"sources":["Components/Box.tsx","../node_modules/use-debounce/esm/useDebounce.js","../node_modules/use-debounce/esm/useDebouncedCallback.js","Snippets/FlexBox.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Hooks/useToast.ts","Components/CodePanel.tsx","Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx","Components/CodePanel/Code.tsx"],"names":["Box","id","styles","className","style","valueEquality","left","right","adjustFunctionValueOfSetState","value","useDebounce","delay","options","eq","equalityFn","_a","initialState","useState","state","setState","useCallback","useStateIgnoreCallback","dispatch","debounced","func","wait","_this","this","lastCallTime","useRef","lastInvokeTime","timerId","lastArgs","lastThis","result","funcRef","mounted","current","useRAF","window","TypeError","leading","trailing","maxing","maxWait","Math","max","useEffect","useMemo","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","trailingEdge","timerExpired","Date","now","timeWaiting","remainingWait","min","_i","arguments","length","isInvoking","cancel","clearTimeout","isPending","flush","useDebouncedCallback","previousValue","FlexBox","setStyles","debounce","Tabs","tabs","scoped","CodePanel","onInput","update","lang","CSS","lineHeight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","useToast","message","setMessage","M","toast","completeCallback","displayLength","html","Toast","dismissAll","keys","entries","map","entry","key","content","removeIndentation","text","lines","split","pop","shift","indentation","match","line","replace","join","children","elRef","init","destroy","ref","title","to","React","Children","toArray","child","Code","code","onClick","e","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target"],"mappings":"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","file":"static/js/42.72a25553.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface BoxProps {\r\n  id: number;\r\n  styles?: React.CSSProperties;\r\n}\r\n\r\nexport default function Box({ id, styles }: BoxProps) {\r\n  return (\r\n    <div className=\"card-panel\" id={\"box\" + id} style={styles}>\r\n      Box {id}\r\n    </div>\r\n  );\r\n};","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\nfunction valueEquality(left, right) {\n    return left === right;\n}\nfunction adjustFunctionValueOfSetState(value) {\n    return typeof value === 'function' ? function () { return value; } : value;\n}\nfunction useStateIgnoreCallback(initialState) {\n    var _a = useState(adjustFunctionValueOfSetState(initialState)), state = _a[0], setState = _a[1];\n    var setStateIgnoreCallback = useCallback(function (value) { return setState(adjustFunctionValueOfSetState(value)); }, []);\n    return [state, setStateIgnoreCallback];\n}\nexport default function useDebounce(value, delay, options) {\n    var eq = (options && options.equalityFn) || valueEquality;\n    var _a = useStateIgnoreCallback(value), state = _a[0], dispatch = _a[1];\n    var debounced = useDebouncedCallback(useCallback(function (value) { return dispatch(value); }, [dispatch]), delay, options);\n    var previousValue = useRef(value);\n    useEffect(function () {\n        // We need to use this condition otherwise we will run debounce timer for the first render (including maxWait option)\n        if (!eq(previousValue.current, value)) {\n            debounced(value);\n            previousValue.current = value;\n        }\n    }, [value, debounced, eq]);\n    return [state, { cancel: debounced.cancel, isPending: debounced.isPending, flush: debounced.flush }];\n}\n","import { useRef, useEffect, useMemo } from 'react';\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Specify invoking on the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback(func, wait, options) {\n    var _this = this;\n    var lastCallTime = useRef(null);\n    var lastInvokeTime = useRef(0);\n    var timerId = useRef(null);\n    var lastArgs = useRef([]);\n    var lastThis = useRef();\n    var result = useRef();\n    var funcRef = useRef(func);\n    var mounted = useRef(true);\n    funcRef.current = func;\n    // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n    var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    wait = +wait || 0;\n    options = options || {};\n    var leading = !!options.leading;\n    var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n    var maxing = 'maxWait' in options;\n    var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n    useEffect(function () {\n        mounted.current = true;\n        return function () {\n            mounted.current = false;\n        };\n    }, []);\n    // You may have a question, why we have so many code under the useMemo definition.\n    //\n    // This was made as we want to escape from useCallback hell and\n    // not to initialize a number of functions each time useDebouncedCallback is called.\n    //\n    // It means that we have less garbage for our GC calls which improves performance.\n    // Also, it makes this library smaller.\n    //\n    // And the last reason, that the code without lots of useCallback with deps is easier to read.\n    // You have only one place for that.\n    var debounced = useMemo(function () {\n        var invokeFunc = function (time) {\n            var args = lastArgs.current;\n            var thisArg = lastThis.current;\n            lastArgs.current = lastThis.current = null;\n            lastInvokeTime.current = time;\n            return (result.current = funcRef.current.apply(thisArg, args));\n        };\n        var startTimer = function (pendingFunc, wait) {\n            if (useRAF)\n                cancelAnimationFrame(timerId.current);\n            timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);\n        };\n        var shouldInvoke = function (time) {\n            if (!mounted.current)\n                return false;\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            // Either this is the first call, activity has stopped and we're at the\n            // trailing edge, the system time has gone backwards and we're treating\n            // it as the trailing edge, or we've hit the `maxWait` limit.\n            return (!lastCallTime.current ||\n                timeSinceLastCall >= wait ||\n                timeSinceLastCall < 0 ||\n                (maxing && timeSinceLastInvoke >= maxWait));\n        };\n        var trailingEdge = function (time) {\n            timerId.current = null;\n            // Only invoke if we have `lastArgs` which means `func` has been\n            // debounced at least once.\n            if (trailing && lastArgs.current) {\n                return invokeFunc(time);\n            }\n            lastArgs.current = lastThis.current = null;\n            return result.current;\n        };\n        var timerExpired = function () {\n            var time = Date.now();\n            if (shouldInvoke(time)) {\n                return trailingEdge(time);\n            }\n            // https://github.com/xnimorz/use-debounce/issues/97\n            if (!mounted.current) {\n                return;\n            }\n            // Remaining wait calculation\n            var timeSinceLastCall = time - lastCallTime.current;\n            var timeSinceLastInvoke = time - lastInvokeTime.current;\n            var timeWaiting = wait - timeSinceLastCall;\n            var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n            // Restart the timer\n            startTimer(timerExpired, remainingWait);\n        };\n        var func = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var time = Date.now();\n            var isInvoking = shouldInvoke(time);\n            lastArgs.current = args;\n            lastThis.current = _this;\n            lastCallTime.current = time;\n            if (isInvoking) {\n                if (!timerId.current && mounted.current) {\n                    // Reset any `maxWait` timer.\n                    lastInvokeTime.current = lastCallTime.current;\n                    // Start the timer for the trailing edge.\n                    startTimer(timerExpired, wait);\n                    // Invoke the leading edge.\n                    return leading ? invokeFunc(lastCallTime.current) : result.current;\n                }\n                if (maxing) {\n                    // Handle invocations in a tight loop.\n                    startTimer(timerExpired, wait);\n                    return invokeFunc(lastCallTime.current);\n                }\n            }\n            if (!timerId.current) {\n                startTimer(timerExpired, wait);\n            }\n            return result.current;\n        };\n        func.cancel = function () {\n            if (timerId.current) {\n                useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);\n            }\n            lastInvokeTime.current = 0;\n            lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;\n        };\n        func.isPending = function () {\n            return !!timerId.current;\n        };\n        func.flush = function () {\n            return !timerId.current ? result.current : trailingEdge(Date.now());\n        };\n        return func;\n    }, [leading, maxing, wait, maxWait, trailing, useRAF]);\n    return debounced;\n}\n","import { useCallback, useState } from 'react';\r\nimport Box from '../Components/Box';\r\nimport CodePanel from '../Components/CodePanel';\r\nimport { useDebounce } from 'use-debounce';\r\nimport Tabs from '../Components/Tabs';\r\n\r\nexport default function FlexBox() {\r\n\r\n  const\r\n  [styles, setStyles] = useState<string[]>([]),\r\n  [debounce] = useDebounce(styles, 1000),\r\n\r\n  handleInput = (id: number) => {\r\n    return (style: string) => {\r\n      const update = [...styles];\r\n      update[id] = style;\r\n      setStyles(update);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Tabs tabs={['row', 'column']}>\r\n      <>\r\n        <style scoped>{debounce[1]}</style>\r\n        <CodePanel\r\n        onInput={useCallback(handleInput(1), [])} // eslint-disable-line react-hooks/exhaustive-deps\r\n        lang={{\r\n          CSS: `\r\n            @media (min-width: 600px) {\r\n              #container1 {\r\n                align-items: baseline;\r\n                /*\r\n                align-items: flex-start;\r\n                align-items: center;\r\n                align-items: flex-end;\r\n                align-items: stretched;\r\n                */\r\n                display: flex;\r\n                flex-direction: row;\r\n                /*\r\n                flex-direction: column;\r\n                flex-direction: column-reverse;\r\n                flex-direction: row-reverse;\r\n                */\r\n                justify-content: space-around;\r\n                /*\r\n                justify-content: center;\r\n                justify-content: flex-start;\r\n                justify-content: flex-end;\r\n                justify-content: space-evenly;\r\n                justify-content: space-between;\r\n                */\r\n                flex-wrap: wrap;\r\n                /*\r\n                flex-wrap: wrap-reverse;\r\n                */\r\n              }\r\n              #container2 {\r\n                display: flex;\r\n              }\r\n            }\r\n            #container1 > div {\r\n              flex: 1 1 25%;\r\n              /* grow shrink basis */\r\n              /* grow for positive space\r\n                shrink for negative space */\r\n              margin: 4px;\r\n            }\r\n            #box1 {\r\n              flex-shrink: 0 !important;\r\n              order: 0;\r\n            }\r\n            #box2 {\r\n              flex-grow: 0 !important;\r\n              order: 3;\r\n            }\r\n            #box3 {\r\n              flex-grow: 2 !important;\r\n              order: 2;\r\n            }\r\n            #box4 {\r\n              flex-shrink: 2 !important;\r\n            }\r\n            #box6 {\r\n              flex-shrink: 0 !important;\r\n            }\r\n      `}} />\r\n        <div className=\"panel\" id=\"container1\">\r\n          <Box id={1} styles={{ lineHeight: '50px' }} />\r\n          <Box id={2} />\r\n          <Box id={3} />\r\n          <Box id={4} />\r\n          <Box id={5} />\r\n          <Box id={6} />\r\n        </div>\r\n      </>\r\n      <>\r\n      </>\r\n    </Tabs>\r\n  );\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};","import Code from './CodePanel/Code';\r\nimport Tabs from './Tabs';\r\nimport './CodePanel/Style.scss';\r\n\r\ninterface CodePanelProps {\r\n  lang: {\r\n    [name: string]: string\r\n  },\r\n  onInput?: (text: string) => void\r\n}\r\n\r\nexport default function CodePanel({ lang, onInput = () => {} }: CodePanelProps) {\r\n  return (\r\n    <div className=\"panel language-markup\">\r\n      <Tabs tabs={Object.keys(lang)}>\r\n        {Object.entries(lang).map(\r\n          (entry, key) => <Code content={entry[1]} key={key} onInput={onInput} />\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};","export default function removeIndentation(text: string) {\r\n  const lines = text.split(/\\r|\\n/);\r\n  lines.pop();\r\n  lines.shift();\r\n\r\n  const indentation = lines[0].match(/^\\s+/g) || [];\r\n\r\n  return (indentation\r\n    ? lines.map((line) => line.replace(indentation[0], ''))\r\n    : lines\r\n  ).join('\\r\\n');\r\n};","import React, { useEffect, useRef } from \"react\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport M from 'materialize-css';\r\nimport './Tabs/Style.scss';\r\n\r\ninterface TabsProps {\r\n  children: React.ReactNode;\r\n  tabs: string[];\r\n}\r\n\r\nexport default function Tabs({ children, tabs }: TabsProps) {\r\n\r\n  const elRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    const tabs = M.Tabs.init(elRef.current as Element, {});\r\n    return () => tabs.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tabs\" ref={elRef}>\r\n        {tabs.map((title, key) => \r\n          <li className=\"tab\" key={key}>\r\n            <Link to={\"#\" + title}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {React.Children.toArray(children).map((child, key) => \r\n        <div\r\n        className=\"flex-column\"\r\n        id={tabs[key]}\r\n        key={key}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","\r\nimport { useEffect } from 'react';\r\nimport removeIndentation from './removeIndentation';\r\nimport useToast from '../../Hooks/useToast';\r\n\r\ninterface CodeProps {\r\n  content: string,\r\n  onInput?: (text: string) => void\r\n}\r\n\r\nexport default function Code({ content, onInput = () => {} }: CodeProps) {\r\n\r\n  const\r\n  code = removeIndentation(content),\r\n  toast = useToast();\r\n\r\n  useEffect(() => onInput(code), [onInput, code]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n      className=\"reset\"\r\n      onClick={e => {\r\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\r\n        navigator.clipboard.writeText(text)\r\n        .then(() => toast('copied to clipboard'))\r\n        .catch(() => toast('copy to clipboard failed'));       \r\n      }}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <pre>\r\n        <code\r\n        contentEditable\r\n        spellCheck=\"false\"\r\n        suppressContentEditableWarning={true}\r\n        onInput={e => {\r\n          const el = e.target as HTMLElement;\r\n          onInput(el.textContent as string);\r\n        }}>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}