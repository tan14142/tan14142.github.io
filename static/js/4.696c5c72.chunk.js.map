{"version":3,"sources":["Components/CodePanel.tsx","Components/CodePanel/removeIndentation.ts","Projects/ProjectEuler/P11.tsx"],"names":["React","memo","children","onInput","title","code","removeIndentation","toast","useToast","useEffect","className","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","lines","split","pop","shift","indentation","match","map","line","replace","join"],"mappings":"0HAAA,kDAWeA,cAAMC,MAAK,YAA6D,IAA1DC,EAAyD,EAAzDA,SAAyD,IAA/CC,eAA+C,MAArC,aAAqC,EAA3BC,EAA2B,EAA3BA,MAGzDC,EAAOC,kBAAkBJ,GACzBK,EAAQC,oBAIR,OAFAC,qBAAU,kBAAMN,EAAQE,KAAO,CAACF,EAASE,IAGvC,yBAAKK,UAAU,yBACb,4BAAKN,GACL,4BACAM,UAAU,QACVC,QAAS,SAAAC,GACP,IAAMC,EAAOD,EAAEE,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUP,GAC7BQ,MAAK,kBAAMd,EAAM,0BACjBe,OAAM,kBAAMf,EAAM,iCANrB,qBAUA,6BACE,0BACAgB,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChCtB,QAAS,SAAAS,GACP,IAAMc,EAAKd,EAAEe,OACbxB,EAAQuB,EAAGT,eAEVZ,S,gCCzCX,OAAe,mBAACQ,GACd,IAAMe,EAAQf,EAAKgB,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAQJ,EAAY,GAAI,OACjDJ,GACFS,KAAK,U,gCCVT,mCAGe,qBACb,OACE,oCACE,6BAAS3B,UAAU,uBACjB,yDACA,0CACA,sHAIA,yBAAKA,UAAU,2BAAf,8DAEE,6BAFF,8DAIE,6BAJF,8DAME,6BANF,8DAQE,6BARF,8DAUE,6BAVF,8DAYE,6BAZF,2BAa0B,0BAAMA,UAAU,YAAhB,MAb1B,oCAcE,6BAdF,8BAe6B,0BAAMA,UAAU,YAAhB,MAf7B,iCAgBE,6BAhBF,iCAiBgC,0BAAMA,UAAU,YAAhB,MAjBhC,8BAkBE,6BAlBF,oCAmBmC,0BAAMA,UAAU,YAAhB,MAnBnC,2BAoBE,6BApBF,8DAsBE,6BAtBF,8DAwBE,6BAxBF,8DA0BE,6BA1BF,8DA4BE,6BA5BF,8DA8BE,6BA9BF,8DAgCE,6BAhCF,8DAkCE,6BAlCF,8DAoCE,6BApCF,8DAsCE,6BAtCF,+DAyCA,oGACA,wKAMF,kBAAC,UAAD,CAAWN,MAAM,cAAjB","file":"static/js/4.696c5c72.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nexport default React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});","export default (text: string) => {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};","import React from 'react';\nimport CodePanel from '../../Components/CodePanel';\n\nexport default () => {\n  return (\n    <>\n      <section className=\"accent-bottom panel\">\n        <h2>Largest product in a grid</h2>\n        <h4>Problem 11</h4>\n        <p>\n          In the 20×20 grid below, four numbers along a diagonal line have been\n          marked in red.\n        </p>\n        <div className=\"center font-mono nowrap\">\n          08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08\n          <br />\n          49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00\n          <br />\n          81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65\n          <br />\n          52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91\n          <br />\n          22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80\n          <br />\n          24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50\n          <br />\n          32 98 81 28 64 23 67 10 <span className=\"red-text\">26</span> 38 40 67 59 54 70 66 18 38 64 70\n          <br />\n          67 26 20 68 02 62 12 20 95 <span className=\"red-text\">63</span> 94 39 63 08 40 91 66 49 94 21\n          <br />\n          24 55 58 05 66 73 99 26 97 17 <span className=\"red-text\">78</span> 78 96 83 14 88 34 89 63 72\n          <br />\n          21 36 23 09 75 00 76 44 20 45 35 <span className=\"red-text\">14</span> 00 61 33 97 34 31 33 95\n          <br />\n          78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92\n          <br />\n          16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57\n          <br />\n          86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58\n          <br />\n          19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40\n          <br />\n          04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66\n          <br />\n          88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69\n          <br />\n          04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36\n          <br />\n          20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16\n          <br />\n          20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54\n          <br />\n          01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48\n        </div>\n        <p>The product of these numbers is 26 × 63 × 78 × 14 = 1788696.</p>\n        <p>\n          What is the greatest product of four adjacent numbers in the same\n          direction (up, down, left, right, or diagonally) in the 20×20 grid?\n        </p>\n      </section>\n      {/* prettier-ignore */}\n      <CodePanel title=\"JavaScript\">{`\n        () => {\n          const d = [\n            [8, 2, 22, 97, 38, 15, 0, 40, 0, 75, 4, 5, 7, 78, 52, 12, 50, 77, 91, 8],\n            [49, 49, 99, 40, 17, 81, 18, 57, 60, 87, 17, 40, 98, 43, 69, 48, 4, 56, 62, 0],\n            [81, 49, 31, 73, 55, 79, 14, 29, 93, 71, 40, 67, 53, 88, 30, 3, 49, 13, 36, 65],\n            [52, 70, 95, 23, 4, 60, 11, 42, 69, 24, 68, 56, 1, 32, 56, 71, 37, 2, 36, 91],\n            [22, 31, 16, 71, 51, 67, 63, 89, 41, 92, 36, 54, 22, 40, 40, 28, 66, 33, 13, 80],\n            [24, 47, 32, 60, 99, 3, 45, 2, 44, 75, 33, 53, 78, 36, 84, 20, 35, 17, 12, 50],\n            [32, 98, 81, 28, 64, 23, 67, 10, 26, 38, 40, 67, 59, 54, 70, 66, 18, 38, 64, 70],\n            [67, 26, 20, 68, 2, 62, 12, 20, 95, 63, 94, 39, 63, 8, 40, 91, 66, 49, 94, 21],\n            [24, 55, 58, 5, 66, 73, 99, 26, 97, 17, 78, 78, 96, 83, 14, 88, 34, 89, 63, 72],\n            [21, 36, 23, 9, 75, 0, 76, 44, 20, 45, 35, 14, 0, 61, 33, 97, 34, 31, 33, 95],\n            [78, 17, 53, 28, 22, 75, 31, 67, 15, 94, 3, 80, 4, 62, 16, 14, 9, 53, 56, 92],\n            [16, 39, 5, 42, 96, 35, 31, 47, 55, 58, 88, 24, 0, 17, 54, 24, 36, 29, 85, 57],\n            [86, 56, 0, 48, 35, 71, 89, 7, 5, 44, 44, 37, 44, 60, 21, 58, 51, 54, 17, 58],\n            [19, 80, 81, 68, 5, 94, 47, 69, 28, 73, 92, 13, 86, 52, 17, 77, 4, 89, 55, 40],\n            [4, 52, 8, 83, 97, 35, 99, 16, 7, 97, 57, 32, 16, 26, 26, 79, 33, 27, 98, 66],\n            [88, 36, 68, 87, 57, 62, 20, 72, 3, 46, 33, 67, 46, 55, 12, 32, 63, 93, 53, 69],\n            [4, 42, 16, 73, 38, 25, 39, 11, 24, 94, 72, 18, 8, 46, 29, 32, 40, 62, 76, 36],\n            [20, 69, 36, 41, 72, 30, 23, 88, 34, 62, 99, 69, 82, 67, 59, 85, 74, 4, 36, 16],\n            [20, 73, 35, 29, 78, 31, 90, 1, 74, 31, 49, 71, 48, 86, 81, 16, 23, 57, 5, 54],\n            [1, 70, 54, 71, 83, 51, 54, 69, 16, 92, 33, 48, 61, 43, 52, 1, 89, 19, 67, 48]\n          ];\n\n          let\n          p = 0,\n          f = (n1, n2, n3, n4) => {\n            let n = n1 * n2 * n3 * n4;\n            if (p < n) {\n              p = n;\n            }\n          };\n\n          for (let x = 3; x < 20 - 3; x++) {\n            for (let y = 3; y < 20 - 3; y++) {\n              f(d[x][y], d[x][y - 1], d[x][y - 2], d[x][y - 3]);\n              f(d[x][y], d[x][y + 1], d[x][y + 2], d[x][y + 3]);\n              f(d[x][y], d[x - 1][y], d[x - 2][y], d[x - 3][y]);\n              f(d[x][y], d[x + 1][y], d[x + 2][y], d[x + 3][y]);\n              f(d[x][y], d[x - 1][y - 1], d[x - 2][y - 2], d[x - 3][y - 3]);\n              f(d[x][y], d[x + 1][y + 1], d[x + 2][y + 2], d[x + 3][y + 3]);\n              f(d[x][y], d[x + 1][y - 1], d[x + 2][y - 2], d[x + 3][y - 3]);\n              f(d[x][y], d[x - 1][y + 1], d[x - 2][y + 2], d[x - 3][y + 3]);\n            }\n          }\n          return p;\n        }\n    `}</CodePanel>\n    </>\n  );\n};"],"sourceRoot":""}