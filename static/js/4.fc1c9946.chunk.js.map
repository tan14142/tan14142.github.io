{"version":3,"sources":["Projects/PracticeHindi/P2.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Hooks/useToast.ts","Components/PracticeButtons.tsx","Utils/shuffle.ts","Components/PracticeChips.tsx","Projects/PracticeHindi/Story.tsx"],"names":["P2","setProgress","sentences","en","hi","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","useToast","useState","message","setMessage","useEffect","M","toast","completeCallback","displayLength","html","Toast","dismissAll","Progress","handleBack","handleRestart","handleTraining","handleSubmit","className","onClick","style","left","position","shuffle","array","randomIndex","temporaryValue","currentIndex","length","tempArr","slice","Math","floor","random","Chips","dictionary","handleClick","margin","keys","sort","a","b","toLowerCase","localeCompare","map","word","key","href","e","preventDefault","Story","randomize","undefined","questions","setQuestions","answer","setAnswer","mapSelection","selection","sentence","option","split","setSelection","background","id","substr","lastIndexOf","includes","trim","shift"],"mappings":"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","file":"static/js/4.fc1c9946.chunk.js","sourcesContent":["import Story from './Story';\r\nimport ProgressProps from './ProgressProps';\r\n\r\nexport default function P2({ setProgress }: ProgressProps) {\r\n  const sentences = [\r\n    {\r\n      en: \"shopkeeper\",\r\n      hi: [\"dukandar\"]\r\n    },\r\n    {\r\n      en: \"customer\",\r\n      hi: [\"kharidar\"]\r\n    },\r\n    {\r\n      en: \"Hello! How can I help you?\",\r\n      hi: [\"namaste mein aap ki kya madat kar sakta hoon\"]\r\n    },\r\n    {\r\n      en: \"Hello! I am looking for shoes for my daughter.\",\r\n      hi: [\"namaste mein apni beti ke liye jute khoj raha hoon\"]\r\n    },\r\n    {\r\n      en: \"What price range are you looking for?\",\r\n      hi: [\"aap kitne daam ke jute khoj rahe ho\"]\r\n    },\r\n    {\r\n      en: \"Maybe between 40 and 60 dollar.\",\r\n      hi: [\"karib chaarlees aur saat dollarr ke beech\"]\r\n    },\r\n    {\r\n      en: \"Follow me! Here they are!\",\r\n      hi: [\"mere saath aaiye ye rahe\"]\r\n    },\r\n    {\r\n      en: \"How much are these?\",\r\n      hi: [\"iska daam kitna hai\"]\r\n    },\r\n    {\r\n      en: \"They cost 55 dollar.\",\r\n      hi: [\"iska daam pachpan dollarr hai\"]\r\n    },\r\n    {\r\n      en: \"Can I have them for 40 dollar?\",\r\n      hi: [\"kya mein isse chaarlees dollarr me le jaa sakta hoon\"]\r\n    },\r\n    {\r\n      en: \"That is OK.\",\r\n      hi: [\"theek hai\"]\r\n    },\r\n    {\r\n      en: \"Thank you, I will buy them\",\r\n      hi: [\"dhanyavaad mein kharid loonga\"]\r\n    },\r\n    {\r\n      en: \"Thank you, come again\",\r\n      hi: [\"dhanyavaad phir aaiyega\"]\r\n    }\r\n  ];\r\n\r\n  return <Story sentences={sentences} setProgress={setProgress} />\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};","interface ProgressProps {\r\n  handleBack: () => void,\r\n  handleRestart: () => void,\r\n  handleTraining: () => void,\r\n  handleSubmit: () => void\r\n}\r\n\r\nexport default function Progress({handleBack, handleRestart, handleTraining, handleSubmit}: ProgressProps) {\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <button\r\n        className=\"btn col l2 m3 s4 waves-effect waves-light\"\r\n        onClick={handleBack}>\r\n          <i className=\"material-icons left\">chevron_left</i>\r\n          Back\r\n      </button>\r\n      <button\r\n        className=\"btn col s1 offset-l3 offset-m2 offset-s1 waves-effect waves-light\"\r\n        onClick={handleRestart}>\r\n          <i className=\"material-icons\">replay</i>\r\n      </button>\r\n      <button\r\n        className=\"btn col s1 waves-effect waves-light\"\r\n        onClick={handleTraining}\r\n          style={{\r\n          left: \".25rem\",\r\n          position: \"relative\"\r\n        }}>\r\n          <i className=\"material-icons\">fitness_center</i>\r\n      </button>\r\n      <button\r\n        className=\"btn col l2 m3 s4 offset-l3 offset-m2 offset-s1 waves-effect waves-light\"\r\n        onClick={handleSubmit}>\r\n          Submit\r\n          <i className=\"material-icons right\">chevron_right</i>\r\n      </button>\r\n    </div>\r\n  );\r\n};","export default function shuffle(array: any[]): any[] {\r\n    \r\n  let\r\n  currentIndex: number = array.length,\r\n  randomIndex,\r\n  temporaryValue,\r\n  tempArr: any[] = array.slice();\r\n\r\n  while (0 !== currentIndex) {\r\n\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    temporaryValue = tempArr[currentIndex];\r\n    tempArr[currentIndex] = tempArr[randomIndex];\r\n    tempArr[randomIndex] = temporaryValue;\r\n  }\r\n  return tempArr;\r\n};","interface ChipsProps {\r\n  dictionary: string[],\r\n  handleClick: (word: string) => void\r\n}\r\n\r\nexport default function Chips({ dictionary, handleClick }: ChipsProps) {\r\n\r\n  return (\r\n    <div style={{ margin: \".5rem 0\" }}>\r\n      {Object.keys(dictionary).sort(\r\n        (a, b) => a.toLowerCase().localeCompare(b.toLowerCase())\r\n      ).map((word, key) => {\r\n        return (\r\n          <a\r\n            className=\"chip\" href=\"!#\" key={key}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleClick(word);\r\n            }}>\r\n              {word}\r\n          </a>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};","import { useState } from 'react';\r\nimport Buttons from '../../Components/PracticeButtons';\r\nimport Chips from '../../Components/PracticeChips';\r\nimport useToast from '../../Hooks/useToast';\r\nimport shuffle from '../../Utils/shuffle';\r\nimport ProgressProps from './ProgressProps';\r\nimport './Style.scss';\r\n\r\ninterface StoryProps extends ProgressProps {\r\n  randomize?: undefined | (() => sentences),\r\n  sentences: sentences\r\n}\r\n\r\ntype sentences = {\r\n  en: string;\r\n  hi: string[];\r\n}[];\r\n\r\nexport default function Story({ randomize = undefined, sentences, setProgress }: StoryProps) {\r\n\r\n  const\r\n\r\n  [questions, setQuestions] = useState([...sentences]),\r\n  [answer, setAnswer] = useState(\"\"),\r\n\r\n  mapSelection = (sentences: sentences) => {\r\n\r\n    let selection: any = {};\r\n  \r\n    sentences.map(sentence => {\r\n      return sentence.hi.map(option => {\r\n        return option.split(\" \").map(word => {\r\n          return selection[word] = null;\r\n        });\r\n      })\r\n    });\r\n\r\n    return selection;\r\n  },\r\n\r\n  [selection, setSelection] = useState(mapSelection(sentences)),\r\n\r\n  toast = useToast(),\r\n  \r\n  handleChip = (word: string) => {\r\n    setAnswer(answer + \" \" + word);\r\n  },\r\n\r\n  handleBack = () => {\r\n    setAnswer(answer.substr(0, answer.lastIndexOf(\" \")));\r\n  },\r\n\r\n  handleRestart = () => {\r\n    setAnswer(\"\");\r\n    setQuestions([...sentences]);\r\n    randomize && setSelection(mapSelection([...sentences]));\r\n    setProgress(0);\r\n  },\r\n\r\n  handleTraining = () => {\r\n    handleRestart();\r\n\r\n    const questions = randomize ? randomize() : [...sentences];\r\n    setQuestions(shuffle(questions));\r\n    setSelection(mapSelection(questions));\r\n  },\r\n\r\n  handleSubmit = () => {\r\n    if (questions[0].hi.includes(answer.trim())) {\r\n\r\n      toast('sahee!');\r\n      setAnswer(\"\");\r\n\r\n      if (questions.length > 1) {\r\n        questions.shift();\r\n        setProgress(1 - questions.length / sentences.length);\r\n      }\r\n      else {\r\n        questions[0].en = \"Well done!\"\r\n        setProgress(1);\r\n      }\r\n    }\r\n    else {\r\n      toast('galat!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h4 className=\"center\" style={{ background: \"#ee6e73\" }}>{questions[0].en}</h4>\r\n        <h4 className=\"center\" id=\"StoryAnswer\">{answer}</h4>\r\n        <Chips\r\n          dictionary={selection}\r\n          handleClick={handleChip} />\r\n      </section>\r\n      <Buttons\r\n        handleBack={handleBack}\r\n        handleRestart={handleRestart}\r\n        handleTraining={handleTraining}\r\n        handleSubmit={handleSubmit} />\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}