{"version":3,"sources":["Projects/PracticeHindi/P3.tsx","Hooks/useToast.ts","Components/PracticeButtons.tsx","Projects/PracticeHindi/Numbers.ts"],"names":["P3","setProgress","thousand","initQuestions","subset","i","push","en","hi","numbers","useState","questions","setQuestions","answer","setAnswer","toast","useToast","handleRestart","className","style","background","id","onChange","e","target","value","placeholder","display","margin","width","type","handleBack","handleTraining","random","limit","Math","round","translate","n","s","randomQuestions","Array","length","fill","undefined","map","r1","r2","r3","replace","handleSubmit","shift","message","setMessage","useEffect","M","completeCallback","displayLength","html","Toast","dismissAll","Progress","onClick","left","position"],"mappings":"8MAMe,SAASA,EAAT,GAA6C,IAA/BC,EAA8B,EAA9BA,YAI3BC,EAAW,SAEXC,EAAiB,WAGf,IAFA,IAAIC,EAAS,GAEJC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAOE,KAAK,CACVC,GAAIF,EACJG,GAAIC,UAAQJ,KAIhB,IAAK,IAAIA,EAAI,GAAIA,GAAK,IAAKA,GAAK,GAC9BD,EAAOE,KAAK,CACVC,GAAIF,EACJG,GAAIC,UAAQJ,KAShB,OALAD,EAAOE,KAAK,CACVC,GAAI,IACJC,GAAIN,IAGCE,EAtBQ,GAFjB,EA2B4BM,mBAASP,GA3BrC,mBA2BCQ,EA3BD,KA2BYC,EA3BZ,OA4BsBF,mBAAS,IA5B/B,mBA4BCG,EA5BD,KA4BSC,EA5BT,KA8BAC,EAAQC,oBAIRC,EAAgB,WACdH,EAAU,IACVF,EAAaT,GACbF,EAAY,IAkDd,OACE,qCACE,0BAASiB,UAAU,sBAAnB,UACE,oBAAIA,UAAU,SAASC,MAAO,CAAEC,WAAY,WAA5C,SAA0DT,EAAU,GAAGH,KACvE,uBACEU,UAAU,SACVG,GAAG,WACHC,SAAU,SAAAC,GAAC,OAAIT,EAAUS,EAAEC,OAAOC,QAClCC,YAAY,qBACZP,MAAO,CACLQ,QAAS,QACTC,OAAQ,OACRC,MAAO,SAETC,KAAK,SACLL,MAAOZ,OAEX,cAAC,UAAD,CACEkB,WAzEO,kBAAMjB,EAAU,KA0EvBG,cAAeA,EACfe,eAnEY,WAEhB,IAEAC,EAAS,SAACC,GAAD,OAAmBC,KAAKC,MAAMD,KAAKF,SAAWC,IACvDG,EAAY,SAACC,GAAD,IAAYC,EAAZ,uDAAwB,GAAxB,OAAqC,IAAND,EAAU,GAAK7B,UAAQ6B,GAAK,IAAMC,GAE7EC,EAAkBC,MAAMtC,EAAcuC,QAAQC,UAAKC,GAAWC,KAAI,WAEhE,IAEAC,EAAKb,EAAO,GACZc,EAAKd,EAAO,GACZe,EAAKf,EAAO,IAEZ,MAAO,CACL1B,GAAS,IAALuC,EAAiB,IAALC,EAAWC,EAC3BxC,GAAIsC,EAAKC,EAAKC,EAAK,GACdX,EAAUS,EAAI5C,GAAY,IAAMmC,EAAUU,EAAItC,UAAQ,MAAQ,IAAM4B,EAAUW,IAAKC,QAAQ,OAAQ,KACpGxC,UAAQ,OAIhBQ,IACAL,EAAa4B,IA4CTU,aAzCS,WACTvC,EAAU,GAAGJ,MAAQM,GAEvBE,EAAM,UACND,EAAU,IAENH,EAAU+B,OAAS,GACrB/B,EAAUwC,QACVlD,EAAY,EAAIU,EAAU+B,OAASvC,EAAcuC,UAGjD/B,EAAU,GAAGH,GAAK,iBAClBP,EAAY,KAIdc,EAAM,kB,gJCzFG,SAASC,IAEtB,MAA8BN,mBAAS,IAAvC,mBAAO0C,EAAP,KAAgBC,EAAhB,KAWA,OATAC,qBAAU,WAMR,OALAF,GAAWG,IAAExC,MAAM,CACjByC,iBAAkB,kBAAMH,EAAW,KACnCI,cAAe,IACfC,KAAMN,IAED,kBAAMG,IAAEI,MAAMC,gBACpB,CAACR,IAEGC,I,0FCVM,SAASQ,EAAT,GAA6F,IAA1E9B,EAAyE,EAAzEA,WAAYd,EAA6D,EAA7DA,cAAee,EAA8C,EAA9CA,eAAgBkB,EAA8B,EAA9BA,aAE3E,OACE,sBAAKhC,UAAU,MAAf,UACE,yBACEA,UAAU,4CACV4C,QAAS/B,EAFX,UAGI,mBAAGb,UAAU,sBAAb,0BAHJ,UAMA,wBACEA,UAAU,oEACV4C,QAAS7C,EAFX,SAGI,mBAAGC,UAAU,iBAAb,sBAEJ,wBACEA,UAAU,sCACV4C,QAAS9B,EACPb,MAAO,CACP4C,KAAM,SACNC,SAAU,YALd,SAOI,mBAAG9C,UAAU,iBAAb,8BAEJ,yBACEA,UAAU,0EACV4C,QAASZ,EAFX,mBAII,mBAAGhC,UAAU,uBAAb,mC,gCCnCV,OAwGeT,UAxGC,CACd,SACA,KACA,KACA,OACA,QACA,QACA,MACA,OACA,MACA,KACA,MACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,OACA,SACA,SACA,QACA,WACA,UACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,UACA,WACA,aACA,UACA,WACA,aACA,WACA,YACA,YACA,WACA,cACA,YACA,cACA,aACA,cACA,WACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,YACA,WACA,SACA,OACA,UACA,SACA,UACA,YACA,WACA,aACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,cACA,YACA,aACA,aACA,UACA,OACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,WACA,WACA,QACA,WACA,UACA,WACA,aACA,YACA,YACA,YACA,WACA,YACA","file":"static/js/36.ccf4b424.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport Buttons from '../../Components/PracticeButtons';\r\nimport useToast from '../../Hooks/useToast';\r\nimport numbers from './Numbers';\r\nimport ProgressProps from './ProgressProps';\r\n\r\nexport default function P3({ setProgress }: ProgressProps) {\r\n\r\n  const\r\n  \r\n  thousand = \"hazaar\",\r\n\r\n  initQuestions = (() => {\r\n    let subset = [];\r\n\r\n    for (let i = 0; i < 21; i++) {\r\n      subset.push({\r\n        en: i,\r\n        hi: numbers[i]\r\n      });\r\n    }\r\n\r\n    for (let i = 20; i <= 100; i += 10) {\r\n      subset.push({\r\n        en: i,\r\n        hi: numbers[i]\r\n      });\r\n    }\r\n\r\n    subset.push({\r\n      en: 1000,\r\n      hi: thousand \r\n    });\r\n\r\n    return subset;\r\n  })(),\r\n\r\n  [questions, setQuestions] = useState(initQuestions),\r\n  [answer, setAnswer] = useState(\"\"),\r\n\r\n  toast = useToast(),\r\n\r\n  handleBack = () => setAnswer(\"\"),\r\n\r\n  handleRestart = () => {\r\n    setAnswer(\"\");\r\n    setQuestions(initQuestions);\r\n    setProgress(0);\r\n  },\r\n\r\n  handleRandomize = () => {\r\n\r\n    const\r\n\r\n    random = (limit: number) => Math.round(Math.random() * limit),\r\n    translate = (n: number, s: string = \"\") => n === 0 ? \"\" : numbers[n] + \" \" + s,\r\n\r\n    randomQuestions = Array(initQuestions.length).fill(undefined).map(() => {\r\n\r\n      const\r\n\r\n      r1 = random(9),\r\n      r2 = random(9),\r\n      r3 = random(99);\r\n\r\n      return {\r\n        en: r1 * 1000 + r2 * 100 + r3,\r\n        hi: r1 + r2 + r3 > 0\r\n          ? (translate(r1, thousand) + \" \" + translate(r2, numbers[100]) + \" \" + translate(r3)).replace(/  +/g, \" \")\r\n          : numbers[0]\r\n      };\r\n    });\r\n\r\n    handleRestart();\r\n    setQuestions(randomQuestions);\r\n  },\r\n\r\n  handleSubmit = () => {\r\n    if (questions[0].en === +answer) {\r\n\r\n      toast('sahee!');\r\n      setAnswer(\"\");\r\n\r\n      if (questions.length > 1) {\r\n        questions.shift();\r\n        setProgress(1 - questions.length / initQuestions.length);\r\n      }\r\n      else {\r\n        questions[0].hi = \"bahut badhiya!\";\r\n        setProgress(1);\r\n      }\r\n    }\r\n    else {\r\n      toast('galat!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h4 className=\"center\" style={{ background: \"#ee6e73\" }}>{questions[0].hi}</h4>\r\n        <input\r\n          className=\"center\"\r\n          id=\"P3number\"\r\n          onChange={e => setAnswer(e.target.value)}\r\n          placeholder=\"type in the number\"\r\n          style={{\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n            width: \"10rem\"\r\n          }}\r\n          type=\"number\"\r\n          value={answer} />\r\n      </section>\r\n      <Buttons\r\n        handleBack={handleBack}\r\n        handleRestart={handleRestart}\r\n        handleTraining={handleRandomize}\r\n        handleSubmit={handleSubmit} />\r\n    </>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};","interface ProgressProps {\r\n  handleBack: () => void,\r\n  handleRestart: () => void,\r\n  handleTraining: () => void,\r\n  handleSubmit: () => void\r\n}\r\n\r\nexport default function Progress({handleBack, handleRestart, handleTraining, handleSubmit}: ProgressProps) {\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <button\r\n        className=\"btn col l2 m3 s4 waves-effect waves-light\"\r\n        onClick={handleBack}>\r\n          <i className=\"material-icons left\">chevron_left</i>\r\n          Back\r\n      </button>\r\n      <button\r\n        className=\"btn col s1 offset-l3 offset-m2 offset-s1 waves-effect waves-light\"\r\n        onClick={handleRestart}>\r\n          <i className=\"material-icons\">replay</i>\r\n      </button>\r\n      <button\r\n        className=\"btn col s1 waves-effect waves-light\"\r\n        onClick={handleTraining}\r\n          style={{\r\n          left: \".25rem\",\r\n          position: \"relative\"\r\n        }}>\r\n          <i className=\"material-icons\">fitness_center</i>\r\n      </button>\r\n      <button\r\n        className=\"btn col l2 m3 s4 offset-l3 offset-m2 offset-s1 waves-effect waves-light\"\r\n        onClick={handleSubmit}>\r\n          Submit\r\n          <i className=\"material-icons right\">chevron_right</i>\r\n      </button>\r\n    </div>\r\n  );\r\n};","const numbers = [\r\n  \"shoony\",\r\n  \"ek\",\r\n  \"do\",\r\n  \"teen\",\r\n  \"chaar\",\r\n  \"panch\",\r\n  \"che\",\r\n  \"saat\",\r\n  \"art\",\r\n  \"no\",\r\n  \"das\",\r\n  \"giara\",\r\n  \"bara\",\r\n  \"tera\",\r\n  \"chauda\",\r\n  \"pandra\",\r\n  \"sola\",\r\n  \"satara\",\r\n  \"ahtara\",\r\n  \"unnees\",\r\n  \"bees\",\r\n  \"iktees\",\r\n  \"batees\",\r\n  \"taees\",\r\n  \"chaubees\",\r\n  \"pachees\",\r\n  \"chabees\",\r\n  \"saatees\",\r\n  \"aathaees\",\r\n  \"untees\",\r\n  \"tees\",\r\n  \"ektees\",\r\n  \"baktees\",\r\n  \"taetees\",\r\n  \"chautees\",\r\n  \"pachantees\",\r\n  \"chatees\",\r\n  \"saataees\",\r\n  \"aathaitees\",\r\n  \"notalees\",\r\n  \"chaarlees\",\r\n  \"ikatalees\",\r\n  \"bayalees\",\r\n  \"tayantalees\",\r\n  \"chawalees\",\r\n  \"payantalees\",\r\n  \"chiyaalees\",\r\n  \"sayantalees\",\r\n  \"artalees\",\r\n  \"unachaas\",\r\n  \"pachaas\",\r\n  \"ikyawaan\",\r\n  \"bawaan\",\r\n  \"tirwaan\",\r\n  \"chawaan\",\r\n  \"pachpan\",\r\n  \"chappan\",\r\n  \"sattawaan\",\r\n  \"uttawaan\",\r\n  \"unsaat\",\r\n  \"saat\",\r\n  \"ikasaat\",\r\n  \"basaat\",\r\n  \"tirsaat\",\r\n  \"chaunsaat\",\r\n  \"paynsaat\",\r\n  \"chiyansaat\",\r\n  \"sursaat\",\r\n  \"ursaat\",\r\n  \"unahattar\",\r\n  \"sattar\",\r\n  \"ikattar\",\r\n  \"bakattar\",\r\n  \"tikattar\",\r\n  \"chahattar\",\r\n  \"pachahattar\",\r\n  \"chihattar\",\r\n  \"saathattar\",\r\n  \"athahattar\",\r\n  \"unaasee\",\r\n  \"assi\",\r\n  \"ikyassi\",\r\n  \"bayassi\",\r\n  \"tirassi\",\r\n  \"chaurassi\",\r\n  \"pachassi\",\r\n  \"chiyassi\",\r\n  \"saatassi\",\r\n  \"athaassi\",\r\n  \"nawaassi\",\r\n  \"nabbe\",\r\n  \"ikyanway\",\r\n  \"baanway\",\r\n  \"tiranway\",\r\n  \"chauranway\",\r\n  \"pachanway\",\r\n  \"chiyanway\",\r\n  \"sattanway\",\r\n  \"uttanway\",\r\n  \"ninyanway\",\r\n  \"sau\"\r\n];\r\n\r\nexport default numbers;"],"sourceRoot":""}