{"version":3,"sources":["Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx","Components/CodePanel/Code.tsx","Hooks/useHighlight.ts","Components/CodePanel.tsx","Projects/ProjectEuler/P12.tsx"],"names":["removeIndentation","text","lines","split","pop","shift","indentation","match","map","line","replace","join","Tabs","children","tabs","elRef","useRef","useEffect","M","init","current","destroy","className","ref","title","key","to","React","Children","toArray","child","id","Code","indent","lang","onInput","toast","useToast","code","Object","values","onClick","e","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","keys","toLowerCase","spellCheck","suppressContentEditableWarning","el","target","useHighlight","link","script","window","hljs","document","createElement","rel","href","src","onload","highlightAll","body","appendChild","removeChild","CodePanel","entries","entry","P12","style","lineHeight","width"],"mappings":"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","file":"static/js/50.32b4710b.chunk.js","sourcesContent":["export default function removeIndentation(text: string) {\r\n  const lines = text.split(/\\r|\\n/);\r\n  lines.pop();\r\n  lines.shift();\r\n\r\n  const indentation = lines[0].match(/^\\s+/g) || [];\r\n\r\n  return (indentation\r\n    ? lines.map((line) => line.replace(indentation[0], ''))\r\n    : lines\r\n  ).join('\\r\\n');\r\n};","import React, { useEffect, useRef } from \"react\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport M from 'materialize-css';\r\nimport './Tabs/Style.scss';\r\n\r\ninterface TabsProps {\r\n  children: React.ReactNode;\r\n  tabs: string[];\r\n}\r\n\r\nexport default function Tabs({ children, tabs }: TabsProps) {\r\n\r\n  const elRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    const tabs = M.Tabs.init(elRef.current as Element, {});\r\n    return () => tabs.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tabs\" ref={elRef}>\r\n        {tabs.map((title, key) => \r\n          <li className=\"tab\" key={key}>\r\n            <Link to={\"#\" + title}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {React.Children.toArray(children).map((child, key) => \r\n        <div\r\n        className=\"flex-column\"\r\n        id={tabs[key]}\r\n        key={key}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","\r\nimport { useEffect } from 'react';\r\nimport removeIndentation from './removeIndentation';\r\nimport useToast from '../../Hooks/useToast';\r\nimport { CodeProps } from './CodeProps';\r\n\r\nexport default function Code({ indent = true, lang, onInput = () => {} }: CodeProps) {\r\n  \r\n  const toast = useToast();\r\n  let code = Object.values(lang)[0];\r\n\r\n  if (!indent) {\r\n    code = removeIndentation(code)\r\n  }\r\n\r\n  useEffect(() => onInput(code), [onInput, code]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n      className=\"reset\"\r\n      onClick={e => {\r\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\r\n        navigator.clipboard.writeText(text)\r\n        .then(() => toast('copied to clipboard'))\r\n        .catch(() => toast('copy to clipboard failed'));       \r\n      }}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <pre>\r\n        <code\r\n        contentEditable\r\n        className={\"hljs language-\" + Object.keys(lang)[0].toLowerCase()}\r\n        spellCheck=\"false\"\r\n        suppressContentEditableWarning={true}\r\n        onInput={e => {\r\n          const el = e.target as HTMLElement;\r\n          onInput(el.textContent as string);\r\n        }}>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};","import { useEffect } from 'react';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    hljs: any;\r\n  }\r\n}\r\n\r\nexport default function useHighlight() {\r\n  \r\n  useEffect(() => {\r\n\r\n    let\r\n    link: any,\r\n    script: any;\r\n\r\n    if (!window.hljs) {\r\n      window.hljs = true;\r\n\r\n      link = document.createElement('link');\r\n      link.rel = 'stylesheet';\r\n      link.href = 'https://unpkg.com/@highlightjs/cdn-assets@11.1.0/styles/default.min.css';\r\n\r\n      script = document.createElement('script');\r\n      script.src = 'https://unpkg.com/@highlightjs/cdn-assets@11.1.0/highlight.min.js';\r\n      script.onload = () => window.hljs.highlightAll();\r\n    \r\n      document.body.appendChild(link);\r\n      document.body.appendChild(script);\r\n    }\r\n    \r\n    return () => {\r\n      typeof link === 'object' && document.body.removeChild(link);\r\n      typeof script === 'object' && document.body.removeChild(script);\r\n      delete window.hljs;\r\n    }\r\n  }, []);\r\n}","import Code from './CodePanel/Code';\r\nimport Tabs from './Tabs';\r\nimport './CodePanel/Style.scss';\r\nimport { CodeProps } from './CodePanel/CodeProps';\r\nimport useHighlight from '../Hooks/useHighlight';\r\n\r\nexport default function CodePanel({ lang, indent = true, onInput = () => {} }: CodeProps) {\r\n\r\n  useHighlight();\r\n\r\n  return (\r\n    <div className=\"panel language-markup\">\r\n      <Tabs tabs={Object.keys(lang)}>\r\n        {Object.entries(lang).map(\r\n          (entry, key) => <Code indent={indent} key={key} lang={{[entry[0]]: entry[1]}} onInput={onInput} />\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};","import CodePanel from '../../Components/CodePanel';\r\nimport { LangProps } from '../../Components/CodePanel/LangProps';\r\n\r\nexport default function P12({lang}: LangProps) {\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h2>Highly divisible triangular number</h2>\r\n        <h4>Problem 12</h4>\r\n        <p>\r\n          The sequence of triangle numbers is generated by adding the natural\r\n          numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =\r\n          28. The first ten terms would be:\r\n        </p>\r\n        <div className=\"center\">1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...</div>\r\n        <p>Let us list the factors of the first seven triangle numbers:</p>\r\n        <table className=\"concise-table container highlight striped\" style={{\r\n          lineHeight : '1rem',\r\n          width: '10rem'\r\n        }}>\r\n          <tbody>\r\n            <tr>\r\n              <td>1:</td>\r\n              <td>1</td>\r\n            </tr>\r\n            <tr>\r\n              <td>3:</td>\r\n              <td>1, 3</td>\r\n            </tr>\r\n            <tr>\r\n              <td>6:</td>\r\n              <td>1, 2, 3, 6</td>\r\n            </tr>\r\n            <tr>\r\n              <td>10:</td>\r\n              <td>1, 2, 5, 10</td>\r\n            </tr>\r\n            <tr>\r\n              <td>15:</td>\r\n              <td>1, 3, 5, 15</td>\r\n            </tr>\r\n            <tr>\r\n              <td>21:</td>\r\n              <td>1, 3, 7, 21</td>\r\n            </tr>\r\n            <tr>\r\n              <td>28:</td>\r\n              <td>1, 2, 4, 7, 14, 28</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p>\r\n          We can see that 28 is the first triangle number to have over five\r\n          divisors.\r\n        </p>\r\n        <p>\r\n          What is the value of the first triangle number to have over five hundred\r\n          divisors?\r\n        </p>\r\n      </section>\r\n      <CodePanel lang={lang} />\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}