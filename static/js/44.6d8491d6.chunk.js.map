{"version":3,"sources":["Projects/WorldMap.tsx","../node_modules/d3-selection-multi/src/selection/attrs.js","../node_modules/d3-selection-multi/src/selection/styles.js","../node_modules/d3-selection-multi/src/selection/properties.js","../node_modules/d3-selection-multi/src/transition/attrs.js","../node_modules/d3-selection-multi/src/transition/styles.js","../node_modules/d3-selection-multi/index.js"],"names":["handleLegend","ref","selected","select","append","attrs","class","styles","transform","mouse","x","y","call","parent","format","n","key","toFixed","map","entry","index","appendText","text","properties","stroke","colorScale","maxProp","colors","scaleLinear","domain","range","strategies","handleDevLevel","feature","economy","handleGDP","maxGDPRef","current","gdp_md_est","handleGDPpc","maxGDPpcRef","gdppc","handleIncomeGroup","income_grp","handlePop","maxPopRef","pop_est","handleVisited","name","visited","includes","event","useRef","selectRef","useState","setMap","strategy","selector","setSelector","useEffect","fetch","then","response","json","result","max","features","console","warn","M","FormSelect","init","className","id","Chart","data","handler","height","width","svg","projection","geoMercator","fitSize","precision","pathGen","geoPath","selectAll","join","on","this","remove","cleanup","attr","setTimeout","transition","duration","d","fill","interrupt","onChange","value","target","svgRef","useResizeObserver","style","marginTop","attrsFunction","selection","each","apply","arguments","s","attrsObject","stylesFunction","priority","stylesObject","propertiesFunction","property","propertiesObject","t","prototype"],"mappings":"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","file":"static/js/44.6d8491d6.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  geoPath,\n  geoMercator,\n  max,\n  mouse,\n  scaleLinear,\n  select\n} from \"d3\";\nimport \"d3-selection-multi\";\nimport useResizeObserver from '../Hooks/useResizeObserver';\nimport M from 'materialize-css';\nimport './WorldMap/Style.scss';\n\nexport default () => {\n  \n  const\n  \n  handleMap = (map, ref, selector, height, width) => {\n    \n    const\n    \n    svg = select(ref),\n    projection = geoMercator()\n      .fitSize([width - 10, height], selector.feature || map)\n      .precision(10),\n    \n    pathGen = geoPath().projection(projection);\n    \n    svg\n      .selectAll(\".country\")\n      .data(map.features)\n      .join(\"path\")\n      .attrs({\n        class : \"country\"\n      })\n      .on(\"click\", function(selected) {\n        setSelector(\n          selector => ({\n            ...selector,\n            feature : selected === selector.feature\n              ? null\n              : selected\n          })\n        );\n        event.current = \"click\";\n        select(this).attrs({\n          id : \"selected\"\n        });\n      })\n      .on(\"mousemove\", selected => {\n        \n        event.current = \"hover\";\n        \n        svg\n          .selectAll(\".legend\")\n          .remove();\n        \n        svg\n          .selectAll(\".legend\")\n          .data([true])\n          .join(() => handleLegend(ref, selected))\n          .styles({\n            transform : () => {\n              const [x, y] = mouse(ref);\n              return `translate(${x}px, ${y}px)`;\n            }\n          });\n      })\n      .on(\"mouseleave\", () => {\n        \n        const cleanup = () => {\n          svg.selectAll(\".legend\").remove();\n          svg.selectAll(\"#selected\").attr(\"id\", null);\n        }\n        if (event.current === \"click\" && selector.feature) {\n          setTimeout(cleanup, 4000);\n        }\n        else {\n          cleanup();\n        }\n      })\n      .transition()\n      .duration(1000)\n      .attrs({\n        d : pathGen,\n        fill : strategies[selector.strategy]\n      });\n    \n    return () => svg.interrupt()\n  },\n\n  handleLegend = (ref, selected) => {\n    select(ref)\n    .append(\"g\")\n    .attrs({\n      class : \"legend\"\n    })\n    .styles({\n      transform : () => {\n        const [x, y] = mouse(ref);\n        return `translate(${x}px, ${y}px)`;\n      }\n    })\n    .call(parent => {\n      [\n        {\n          format : n => n,\n          key : \"name\"\n        },\n        {\n          format : n => n,\n          key : \"economy\"\n        },\n        {\n          format : n => n,\n          key : \"income_grp\"\n        },\n        {\n          format : n => \"Pop : \" + (n / 1000000).toFixed(2) + \" M\",\n          key : \"pop_est\"\n        },\n        {\n          format : n => \"GDP : $\" + (n / 1000).toFixed(2) + \" B\",\n          key : \"gdp_md_est\"\n        },\n        {\n          format : n => \"GDPpc : $\" + n.toFixed(2),\n          key : \"gdppc\"\n        }\n      ].map((entry, index) => {\n        \n        const appendText = () => parent\n          .append('text')\n          .text(entry.format(selected.properties[entry.key]))\n          .attrs({\n            \"pointer-events\" : \"none\",\n            x : 8,\n            y : index * 16 + 16\n          });\n        \n        appendText()\n          .attrs({\n            stroke : \"white\",\n            \"stroke-width\" : 2\n          });\n        appendText();\n        \n        return null;\n      });\n    });\n  },\n  \n  colorScale = (maxProp, colors) => scaleLinear()\n    .domain([0, maxProp])\n    .range(colors),\n  \n  strategies = {\n    \n    handleDevLevel : feature => colorScale(7, [\"blue\", \"#eee\"])\n      (feature.properties.economy[0]),\n\n    handleGDP : feature => colorScale(maxGDPRef.current, [\"#eed\", \"gold\"])\n      (feature.properties.gdp_md_est),\n    \n    handleGDPpc : feature => colorScale(maxGDPpcRef.current, [\"#efe\", \"green\"])\n      (feature.properties.gdppc),\n    \n    handleIncomeGroup : feature => colorScale(5, [\"orange\", \"#eed\"])\n      (feature.properties.income_grp[0]),\n    \n    handlePop : feature => colorScale(maxPopRef.current, [\"#fee\", \"red\"])\n      (feature.properties.pop_est),\n    \n    handleVisited : feature => feature.properties.name === \"New Zealand\"\n      ? \"none\"\n      : visited.includes(feature.properties.name)\n        ? \"violet\"\n        : \"#eee\"\n  },\n  \n  visited = [\n    \"Belgium\",\n    \"Cambodia\",\n    \"Czech Rep.\",\n    \"Cook Islands\",\n    \"Denmark\",\n    \"France\",\n    \"Fiji\",\n    \"Germany\",\n    \"India\",\n    \"Ireland\",\n    \"Italy\",\n    \"Iceland\",\n    \"Lao PDR\",\n    \"Myanmar\",\n    \"Nepal\",\n    \"Netherlands\",\n    \"New Zealand\",\n    \"Norway\",\n    \"Samoa\",\n    \"Singapore\",\n    \"Spain\",\n    \"Sweden\",\n    \"Thailand\",\n    \"United Kingdom\",\n    \"Vietnam\"\n  ],\n  \n  event = useRef(),\n  maxGDPRef = useRef(),\n  maxGDPpcRef = useRef(),\n  maxPopRef = useRef(),\n  selectRef = useRef(),\n  [map, setMap] = useState(),\n  [selector, setSelector] = useState({ strategy : \"handleVisited\" });\n  \n  useEffect(() => {\n    fetch(\"/Projects/custom.geo.json\")\n      .then(response => response.json())\n      .then(\n        result => {\n          setMap(result);\n          \n          maxGDPRef.current = max(\n            result.features,\n            feature => feature.properties.gdp_md_est\n          );\n          \n          maxGDPpcRef.current = max(\n            result.features,\n            feature => feature.properties.gdppc = feature\n              .properties.gdp_md_est < 0\n                ? 0\n                : 1000000\n                  * feature.properties.gdp_md_est\n                  / feature.properties.pop_est\n          );\n          \n          maxPopRef.current = max(\n            result.features,\n            feature => feature.properties.pop_est\n          );\n        },\n        console.warn\n      );\n  }, []);\n  \n  useEffect(() => {\n    M.FormSelect.init(selectRef.current, {});\n  }, []);\n  \n  return (\n    <section className=\"accent-bottom panel\" id=\"WorldMap\">\n      <h2>World Map</h2>\n      <Chart data={map} handler={handleMap} selector={selector} />\n      <div className=\"input-field\">\n        <select\n        className=\"browser-default btn center-content\"\n        onChange={event => {\n          \n          const { target : { value }} = event;\n          \n          setSelector(\n            selector => ({\n              ...selector,\n              strategy : value\n            })\n          );\n        }}\n        ref={selectRef}>\n          <option value=\"handleVisited\">countries visited</option>\n          <option value=\"handlePop\">estimated population</option>\n          <option value=\"handleGDP\">estimated GDP</option>\n          <option value=\"handleGDPpc\">estimated GDP per capita</option>\n          <option value=\"handleDevLevel\">development level</option>\n          <option value=\"handleIncomeGroup\">income group</option>\n        </select>\n      </div>\n    </section>\n  );\n}\n\nconst Chart = ({ data, handler, selector }) => {\n//todo probably\n  const\n  \n  svgRef = useRef<SVGSVGElement>(null),\n  { height, width } = useResizeObserver(svgRef.current);\n  \n  useEffect(() => {\n    if (handler && data && height && width) {\n      return handler(data, svgRef.current, selector, height, width)\n    }\n  }, [data, handler, selector, height, width]);\n\n  return (\n    <svg\n    ref={svgRef}\n    style={{\n      height : 480,\n      marginTop : 20\n    }}>\n    </svg>\n  );\n};","import {select} from \"d3-selection\";\n\nfunction attrsFunction(selection, map) {\n  return selection.each(function() {\n    var x = map.apply(this, arguments), s = select(this);\n    for (var name in x) s.attr(name, x[name]);\n  });\n}\n\nfunction attrsObject(selection, map) {\n  for (var name in map) selection.attr(name, map[name]);\n  return selection;\n}\n\nexport default function(map) {\n  return (typeof map === \"function\" ? attrsFunction : attrsObject)(this, map);\n}\n","import {select} from \"d3-selection\";\n\nfunction stylesFunction(selection, map, priority) {\n  return selection.each(function() {\n    var x = map.apply(this, arguments), s = select(this);\n    for (var name in x) s.style(name, x[name], priority);\n  });\n}\n\nfunction stylesObject(selection, map, priority) {\n  for (var name in map) selection.style(name, map[name], priority);\n  return selection;\n}\n\nexport default function(map, priority) {\n  return (typeof map === \"function\" ? stylesFunction : stylesObject)(this, map, priority == null ? \"\" : priority);\n}\n","import {select} from \"d3-selection\";\n\nfunction propertiesFunction(selection, map) {\n  return selection.each(function() {\n    var x = map.apply(this, arguments), s = select(this);\n    for (var name in x) s.property(name, x[name]);\n  });\n}\n\nfunction propertiesObject(selection, map) {\n  for (var name in map) selection.property(name, map[name]);\n  return selection;\n}\n\nexport default function(map) {\n  return (typeof map === \"function\" ? propertiesFunction : propertiesObject)(this, map);\n}\n","import {select} from \"d3-selection\";\n\nfunction attrsFunction(transition, map) {\n  return transition.each(function() {\n    var x = map.apply(this, arguments), t = select(this).transition(transition);\n    for (var name in x) t.attr(name, x[name]);\n  });\n}\n\nfunction attrsObject(transition, map) {\n  for (var name in map) transition.attr(name, map[name]);\n  return transition;\n}\n\nexport default function(map) {\n  return (typeof map === \"function\" ? attrsFunction : attrsObject)(this, map);\n}\n","import {select} from \"d3-selection\";\n\nfunction stylesFunction(transition, map, priority) {\n  return transition.each(function() {\n    var x = map.apply(this, arguments), t = select(this).transition(transition);\n    for (var name in x) t.style(name, x[name], priority);\n  });\n}\n\nfunction stylesObject(transition, map, priority) {\n  for (var name in map) transition.style(name, map[name], priority);\n  return transition;\n}\n\nexport default function(map, priority) {\n  return (typeof map === \"function\" ? stylesFunction : stylesObject)(this, map, priority == null ? \"\" : priority);\n}\n","import {selection} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\nimport selection_attrs from \"./src/selection/attrs\";\nimport selection_styles from \"./src/selection/styles\";\nimport selection_properties from \"./src/selection/properties\";\nimport transition_attrs from \"./src/transition/attrs\";\nimport transition_styles from \"./src/transition/styles\";\n\nselection.prototype.attrs = selection_attrs;\nselection.prototype.styles = selection_styles;\nselection.prototype.properties = selection_properties;\ntransition.prototype.attrs = transition_attrs;\ntransition.prototype.styles = transition_styles;\n"],"sourceRoot":""}