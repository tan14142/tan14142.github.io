{"version":3,"sources":["Components/Box.tsx","Components/Tabs.tsx","../node_modules/use-debounce/esm/useDebounce.js","../node_modules/use-debounce/esm/useDebouncedCallback.js","Snippets/FlexBox.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/CodePanel.tsx","Hooks/useToast.ts","Components/CodePanel/removeIndentation.ts"],"names":["id","styles","className","style","children","tabs","elRef","useRef","useEffect","M","Tabs","init","current","destroy","ref","map","title","key","to","React","Children","toArray","child","valueEquality","left","right","useDebounce","value","delay","options","eq","equalityFn","_a","useState","state","dispatch","_b","callback","maxWait","maxWaitHandler","maxWaitArgs","leading","trailing","undefined","leadingCall","functionTimeoutHandler","isComponentUnmounted","debouncedFunction","cancelDebouncedCallback","useCallback","clearTimeout","debouncedCallback","args","_i","arguments","length","apply","setTimeout","shouldCallFunction","callPending","useDebouncedCallback","cancel","previousValue","setStyles","debounce","scoped","CodePanel","onInput","update","Box","lineHeight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","memo","code","removeIndentation","toast","useToast","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","message","setMessage","completeCallback","html","Toast","dismissAll","lines","split","pop","shift","indentation","match","line","replace","join"],"mappings":"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","file":"static/js/34.782ec40d.chunk.js","sourcesContent":["import React from 'react';\n\ninterface BoxProps {\n  id: number;\n  styles?: React.CSSProperties;\n}\n\nexport default ({ id, styles }: BoxProps) => {\n  return (\n    <div className=\"card-panel\" id={\"box\" + id} style={styles}>\n      Box {id}\n    </div>\n  );\n};","import React, { useEffect, useRef } from \"react\";\nimport{ Link } from \"react-router-dom\";\nimport M from 'materialize-css';\nimport './Tabs/Style.scss';\n\ninterface TabsProps {\n  children: React.ReactNode;\n  tabs: string[];\n}\n\nexport default ({ children, tabs }: TabsProps) => {\n\n  const elRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const tabs = M.Tabs.init(elRef.current as Element, {});\n    return () => tabs.destroy();\n  }, []);\n\n  return (\n    <>\n      <ul className=\"tabs\" ref={elRef}>\n        {tabs.map((title, key) => \n          <li className=\"tab\" key={key}>\n            <Link to={\"#\" + title}>\n              {title}\n            </Link>\n          </li>\n        )}\n      </ul>\n      {React.Children.toArray(children).map((child, key) => \n        <div\n        className=\"flex-column\"\n        id={tabs[key]}\n        key={key}>\n          {child}\n        </div>\n      )}\n    </>\n  );\n};","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\nfunction valueEquality(left, right) {\n    return left === right;\n}\nexport default function useDebounce(value, delay, options) {\n    var eq = options && options.equalityFn ? options.equalityFn : valueEquality;\n    var _a = useState(value), state = _a[0], dispatch = _a[1];\n    var _b = useDebouncedCallback(useCallback(function (value) { return dispatch(value); }, []), delay, options), callback = _b[0], cancel = _b[1], callPending = _b[2];\n    var previousValue = useRef(value);\n    useEffect(function () {\n        // We need to use this condition otherwise we will run debounce timer for the first render (including maxWait option)\n        if (!eq(previousValue.current, value)) {\n            callback(value);\n            previousValue.current = value;\n        }\n    }, [value, callback, eq]);\n    return [state, cancel, callPending];\n}\n","import { useRef, useCallback, useEffect } from 'react';\nexport default function useDebouncedCallback(callback, delay, options) {\n    if (options === void 0) { options = {}; }\n    var maxWait = options.maxWait;\n    var maxWaitHandler = useRef(null);\n    var maxWaitArgs = useRef([]);\n    var leading = options.leading;\n    var trailing = options.trailing === undefined ? true : options.trailing;\n    var leadingCall = useRef(false);\n    var functionTimeoutHandler = useRef(null);\n    var isComponentUnmounted = useRef(false);\n    var debouncedFunction = useRef(callback);\n    debouncedFunction.current = callback;\n    var cancelDebouncedCallback = useCallback(function () {\n        clearTimeout(functionTimeoutHandler.current);\n        clearTimeout(maxWaitHandler.current);\n        maxWaitHandler.current = null;\n        maxWaitArgs.current = [];\n        functionTimeoutHandler.current = null;\n        leadingCall.current = false;\n    }, []);\n    useEffect(function () {\n        // We have to set isComponentUnmounted to be truth, as fast-refresh runs all useEffects\n        isComponentUnmounted.current = false;\n        return function () {\n            // we use flag, as we allow to call callPending outside the hook\n            isComponentUnmounted.current = true;\n        };\n    }, []);\n    var debouncedCallback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        maxWaitArgs.current = args;\n        clearTimeout(functionTimeoutHandler.current);\n        if (leadingCall.current) {\n            leadingCall.current = false;\n        }\n        if (!functionTimeoutHandler.current && leading && !leadingCall.current) {\n            debouncedFunction.current.apply(debouncedFunction, args);\n            leadingCall.current = true;\n        }\n        functionTimeoutHandler.current = setTimeout(function () {\n            var shouldCallFunction = true;\n            if (leading && leadingCall.current) {\n                shouldCallFunction = false;\n            }\n            cancelDebouncedCallback();\n            if (!isComponentUnmounted.current && trailing && shouldCallFunction) {\n                debouncedFunction.current.apply(debouncedFunction, args);\n            }\n        }, delay);\n        if (maxWait && !maxWaitHandler.current && trailing) {\n            maxWaitHandler.current = setTimeout(function () {\n                var args = maxWaitArgs.current;\n                cancelDebouncedCallback();\n                if (!isComponentUnmounted.current) {\n                    debouncedFunction.current.apply(null, args);\n                }\n            }, maxWait);\n        }\n    }, [maxWait, delay, cancelDebouncedCallback, leading, trailing]);\n    var callPending = useCallback(function () {\n        // Call pending callback only if we have anything in our queue\n        if (!functionTimeoutHandler.current) {\n            return;\n        }\n        debouncedFunction.current.apply(null, maxWaitArgs.current);\n        cancelDebouncedCallback();\n    }, [cancelDebouncedCallback]);\n    // At the moment, we use 3 args array so that we save backward compatibility\n    return [debouncedCallback, cancelDebouncedCallback, callPending];\n}\n","import React, { useCallback, useState } from 'react';\nimport Box from '../Components/Box';\nimport CodePanel from '../Components/CodePanel';\nimport { useDebounce } from 'use-debounce';\nimport Tabs from '../Components/Tabs';\n\nexport default () => {\n\n  const\n  [styles, setStyles] = useState<string[]>([]),\n  [debounce] = useDebounce(styles, 1000),\n\n  handleInput = (id: number) => {\n    return (style: string) => {\n      const update = [...styles];\n      update[id] = style;\n      setStyles(update);\n    };\n  };\n\n  return (\n    <Tabs tabs={['row', 'column']}>\n      <>\n        <style scoped>{debounce[1]}</style>\n        <CodePanel onInput={useCallback(handleInput(1), [])} title=\"CSS\">{`\n          @media (min-width: 600px) {\n            #container1 {\n              align-items: baseline;\n              /*\n              align-items: flex-start;\n              align-items: center;\n              align-items: flex-end;\n              align-items: stretched;\n              */\n              display: flex;\n              flex-direction: row;\n              /*\n              flex-direction: column;\n              flex-direction: column-reverse;\n              flex-direction: row-reverse;\n              */\n              justify-content: space-around;\n              /*\n              justify-content: center;\n              justify-content: flex-start;\n              justify-content: flex-end;\n              justify-content: space-evenly;\n              justify-content: space-between;\n              */\n              flex-wrap: wrap;\n              /*\n              flex-wrap: wrap-reverse;\n              */\n            }\n            #container2 {\n              display: flex;\n            }\n          }\n          #container1 > div {\n            flex: 1 1 25%;\n            /* grow shrink basis */\n            /* grow for positive space\n               shrink for negative space */\n            margin: 4px;\n          }\n          #box1 {\n            flex-shrink: 0 !important;\n            order: 0;\n          }\n          #box2 {\n            flex-grow: 0 !important;\n            order: 3;\n          }\n          #box3 {\n            flex-grow: 2 !important;\n            order: 2;\n          }\n          #box4 {\n            flex-shrink: 2 !important;\n          }\n          #box6 {\n            flex-shrink: 0 !important;\n          }\n      `}</CodePanel>\n        <div className=\"panel\" id=\"container1\">\n          <Box id={1} styles={{ lineHeight: '50px' }} />\n          <Box id={2} />\n          <Box id={3} />\n          <Box id={4} />\n          <Box id={5} />\n          <Box id={6} />\n        </div>\n      </>\n      <>\n      </>\n    </Tabs>\n  );\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nexport default React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});","import { useEffect, useState } from \"react\";\nimport M from 'materialize-css';\nimport './useToast/Style.scss';\n\nexport default () => {\n\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    message && M.toast({\n      completeCallback: () => setMessage(''),\n      html: message\n    });\n    return () => M.Toast.dismissAll();\n  }, [message]);\n\n  return setMessage;\n};","export default (text: string) => {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};"],"sourceRoot":""}