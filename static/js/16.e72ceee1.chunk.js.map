{"version":3,"sources":["Components/CodePanel.tsx","Hooks/useToast.ts","Components/CodePanel/removeIndentation.ts","Projects/ProjectEuler/P2.tsx"],"names":["CodePanel","React","memo","children","onInput","title","code","removeIndentation","toast","useToast","useEffect","className","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","useState","message","setMessage","M","completeCallback","displayLength","html","Toast","dismissAll","lines","split","pop","shift","indentation","match","map","line","replace","join","P2"],"mappings":"2JAAA,2DAWMA,EAAYC,IAAMC,MAAK,YAA6D,IAA1DC,EAAyD,EAAzDA,SAAyD,IAA/CC,eAA+C,MAArC,aAAqC,EAA3BC,EAA2B,EAA3BA,MAG5DC,EAAOC,kBAAkBJ,GACzBK,EAAQC,oBAIR,OAFAC,qBAAU,kBAAMN,EAAQE,KAAO,CAACF,EAASE,IAGvC,sBAAKK,UAAU,wBAAf,UACE,6BAAKN,IACL,wBACAM,UAAU,QACVC,QAAS,SAAAC,GACP,IAAMC,EAAOD,EAAEE,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUP,GAC7BQ,MAAK,kBAAMd,EAAM,0BACjBe,OAAM,kBAAMf,EAAM,gCANrB,+BAUA,8BACE,sBACAgB,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChCtB,QAAS,SAAAS,GACP,IAAMc,EAAKd,EAAEe,OACbxB,EAAQuB,EAAGT,cANb,SAQGZ,YAOIN,a,0HC5CA,SAASS,IAEtB,MAA8BoB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATArB,qBAAU,WAMR,OALAoB,GAAWE,IAAExB,MAAM,CACjByB,iBAAkB,kBAAMF,EAAW,KACnCG,cAAe,IACfC,KAAML,IAED,kBAAME,IAAEI,MAAMC,gBACpB,CAACP,IAEGC,I,gCCjBM,SAASxB,EAAkBO,GACxC,IAAMwB,EAAQxB,EAAKyB,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAQJ,EAAY,GAAI,OACjDJ,GACFS,KAAK,QAVT,gD,gCCAA,kEAEe,SAASC,IACtB,OACE,qCACE,0BAASrC,UAAU,sBAAnB,UACE,wDACA,2CACA,6KAKA,qBAAKA,UAAU,SAAf,oDACA,sKAMF,cAAC,UAAD,CAAWN,MAAM,aAAjB","file":"static/js/16.e72ceee1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nconst CodePanel = React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});\n\nexport default CodePanel;","import { useEffect, useState } from \"react\";\nimport M from 'materialize-css';\nimport './useToast/Style.scss';\n\nexport default function useToast() {\n\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    message && M.toast({\n      completeCallback: () => setMessage(''),\n      displayLength: 2000,\n      html: message\n    });\n    return () => M.Toast.dismissAll();\n  }, [message]);\n\n  return setMessage;\n};","export default function removeIndentation(text: string) {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};","import CodePanel from '../../Components/CodePanel';\n\nexport default function P2() {\n  return (\n    <>\n      <section className=\"accent-bottom panel\">\n        <h2>Even Fibonacci numbers</h2>\n        <h4>Problem 2</h4>\n        <p>\n          Each new term in the Fibonacci sequence is generated by adding the\n          previous two terms. By starting with 1 and 2, the first 10 terms will\n          be:\n        </p>\n        <div className=\"center\">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</div>\n        <p>\n          By considering the terms in the Fibonacci sequence whose values do not\n          exceed four million, find the sum of the even-valued terms.\n        </p>\n      </section>\n      {/* prettier-ignore */}\n      <CodePanel title=\"JavaScript\">{`\n        m => {\n          let\n          i = 0,\n          j = 1,\n          k,\n          result = 0;\n  \n          while (j <= m) {\n            k = j;\n            j += i;\n            i = k;\n            if (i % 2 === 0) {\n              result += i;\n            }\n          }\n          return result;\n        }\n    `}</CodePanel>\n    </>\n  );\n};"],"sourceRoot":""}