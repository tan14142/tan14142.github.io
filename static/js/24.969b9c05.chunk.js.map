{"version":3,"sources":["Projects/ProjectEuler/P30.tsx","Components/CodePanel.tsx","Hooks/useToast.ts","Components/CodePanel/removeIndentation.ts"],"names":["className","title","React","memo","children","onInput","code","removeIndentation","toast","useToast","useEffect","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","useState","message","setMessage","M","completeCallback","html","Toast","dismissAll","lines","split","pop","shift","indentation","match","map","line","replace","join"],"mappings":"gHAAA,mCAGe,qBACb,OACE,oCACE,6BAASA,UAAU,uBACjB,kDACA,0CACA,yIAIA,yBAAKA,UAAU,UAAf,+CAEE,6BAFF,+CAIE,6BAJF,gDAOA,8EACA,sFACA,+HAKF,kBAAC,UAAD,CAAWC,MAAM,cAAjB,w/B,4EC3BN,kDAWeC,cAAMC,MAAK,YAA6D,IAA1DC,EAAyD,EAAzDA,SAAyD,IAA/CC,eAA+C,MAArC,aAAqC,EAA3BJ,EAA2B,EAA3BA,MAGzDK,EAAOC,kBAAkBH,GACzBI,EAAQC,oBAIR,OAFAC,qBAAU,kBAAML,EAAQC,KAAO,CAACD,EAASC,IAGvC,yBAAKN,UAAU,yBACb,4BAAKC,GACL,4BACAD,UAAU,QACVW,QAAS,SAAAC,GACP,IAAMC,EAAOD,EAAEE,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUP,GAC7BQ,MAAK,kBAAMb,EAAM,0BACjBc,OAAM,kBAAMd,EAAM,iCANrB,qBAUA,6BACE,0BACAe,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChCpB,QAAS,SAAAO,GACP,IAAMc,EAAKd,EAAEe,OACbtB,EAAQqB,EAAGT,eAEVX,S,kFCrCI,qBAAO,IAAD,EAEWsB,mBAAS,IAFpB,mBAEZC,EAFY,KAEHC,EAFG,KAYnB,OARApB,qBAAU,WAKR,OAJAmB,GAAWE,IAAEvB,MAAM,CACjBwB,iBAAkB,kBAAMF,EAAW,KACnCG,KAAMJ,IAED,kBAAME,IAAEG,MAAMC,gBACpB,CAACN,IAEGC,I,gCChBT,OAAe,mBAACjB,GACd,IAAMuB,EAAQvB,EAAKwB,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAQJ,EAAY,GAAI,OACjDJ,GACFS,KAAK","file":"static/js/24.969b9c05.chunk.js","sourcesContent":["import React from 'react';\nimport CodePanel from '../../Components/CodePanel';\n\nexport default () => {\n  return (\n    <>\n      <section className=\"accent-bottom panel\">\n        <h2>Digit fifth powers</h2>\n        <h4>Problem 30</h4>\n        <p>\n          Surprisingly there are only three numbers that can be written\n          as the sum of fourth powers of their digits:\n        </p>\n        <div className=\"padded\">\n          1634 = 1⁴ + 6⁴ + 3⁴ + 4⁴\n          <br />\n          8208 = 8⁴ + 2⁴ + 0⁴ + 8⁴\n          <br />\n          9474 = 9⁴ + 4⁴ + 7⁴ + 4⁴\n        </div>\n        <p>As 1 = 1⁴ is not a sum it is not included.</p>\n        <p>The sum of these numbers is 1634 + 8208 + 9474 = 19316.</p>\n        <p>\n          Find the sum of all the numbers that can be written as the sum\n          of fifth powers of their digits.\n        </p>\n      </section>\n      <CodePanel title=\"JavaScript\">{`\n        m => {\n          const\n          powers = [...Array(10)].map(\n            (value, key) => Math.pow(key, m)\n          ),\n          results = [],\n          reverse = value => String(value).split('').reduce(\n            (acc, base) => acc + Math.pow(+base, m),\n            0\n          ),\n          sum = arr => arr.reduce(\n            (acc, value) => acc + value,\n            0\n          ),\n          f = offsets => {\n            for (let i = offsets[offsets.length - 1]; i < 10; i++) {\n              if (offsets.length < m + 1) {\n                f([...offsets, i]);\n              }\n              else {\n                const n = sum([...offsets.slice(1), i].map(\n                  value => powers[value]\n                ));\n                \n                if (!results.includes(n) && n === reverse(n)) {\n                  results.push(n);\n                }\n              }\n            }\n          };\n          f([0]);\n          return sum(results) - 1;\n        }\n    `}</CodePanel>\n    </>\n  );\n};","import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nexport default React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});","import { useEffect, useState } from \"react\";\nimport M from 'materialize-css';\nimport './useToast/Style.scss';\n\nexport default () => {\n\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    message && M.toast({\n      completeCallback: () => setMessage(''),\n      html: message\n    });\n    return () => M.Toast.dismissAll();\n  }, [message]);\n\n  return setMessage;\n};","export default (text: string) => {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};"],"sourceRoot":""}