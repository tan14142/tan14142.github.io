(this.webpackJsonppages=this.webpackJsonppages||[]).push([[29,39,47,54,69,72],{155:function(e,t,n){},156:function(e,t,n){},75:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),l=n(77),c=n(76);n(156);t.default=r.a.memo((function(e){var t=e.children,n=e.onInput,u=void 0===n?function(){}:n,i=e.title,o=Object(l.default)(t),s=Object(c.default)();return Object(a.useEffect)((function(){return u(o)}),[u,o]),r.a.createElement("div",{className:"panel language-markup"},r.a.createElement("h3",null,i),r.a.createElement("button",{className:"reset",onClick:function(e){var t=e.currentTarget.parentNode.querySelector("code").textContent;navigator.clipboard.writeText(t).then((function(){return s("copied to clipboard")})).catch((function(){return s("copy to clipboard failed")}))}},"Copy to Clipboard"),r.a.createElement("pre",null,r.a.createElement("code",{contentEditable:!0,spellCheck:"false",suppressContentEditableWarning:!0,onInput:function(e){var t=e.target;u(t.textContent)}},o)))}))},76:function(e,t,n){"use strict";n.r(t);var a=n(14),r=n(0),l=n(55),c=n.n(l);n(155);t.default=function(){var e=Object(r.useState)(""),t=Object(a.a)(e,2),n=t[0],l=t[1];return Object(r.useEffect)((function(){return n&&c.a.toast({completeCallback:function(){return l("")},html:n}),function(){return c.a.Toast.dismissAll()}}),[n]),l}},77:function(e,t,n){"use strict";n.r(t),t.default=function(e){var t=e.split(/\r|\n/);t.pop(),t.shift();var n=t[0].match(/^\s+/g)||[];return(n?t.map((function(e){return e.replace(n[0],"")})):t).join("\r\n")}},98:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),l=n(75);t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("section",{className:"accent-bottom panel"},r.a.createElement("h2",null,"Largest product in a series"),r.a.createElement("h4",null,"Problem 8"),r.a.createElement("p",null,"The four adjacent digits in the 1000-digit number that have the greatest product are 9 \xd7 9 \xd7 8 \xd7 9 = 5832."),r.a.createElement("div",{className:"center font-mono nowrap"},"73167176531330624919225119674426574742355349194934",r.a.createElement("br",null),"96983520312774506326239578318016984801869478851843",r.a.createElement("br",null),"85861560789112949495459501737958331952853208805511",r.a.createElement("br",null),"12540698747158523863050715693290963295227443043557",r.a.createElement("br",null),"66896648950445244523161731856403098711121722383113",r.a.createElement("br",null),"62229893423380308135336276614282806444486645238749",r.a.createElement("br",null),"30358907296290491560440772390713810515859307960866",r.a.createElement("br",null),"70172427121883998797908792274921901699720888093776",r.a.createElement("br",null),"65727333001053367881220235421809751254540594752243",r.a.createElement("br",null),"52584907711670556013604839586446706324415722155397",r.a.createElement("br",null),"53697817977846174064955149290862569321978468622482",r.a.createElement("br",null),"83972241375657056057490261407972968652414535100474",r.a.createElement("br",null),"82166370484403199890008895243450658541227588666881",r.a.createElement("br",null),"16427171479924442928230863465674813919123162824586",r.a.createElement("br",null),"17866458359124566529476545682848912883142607690042",r.a.createElement("br",null),"24219022671055626321111109370544217506941658960408",r.a.createElement("br",null),"07198403850962455444362981230987879927244284909188",r.a.createElement("br",null),"84580156166097919133875499200524063689912560717606",r.a.createElement("br",null),"05886116467109405077541002256983155200055935729725",r.a.createElement("br",null),"71636269561882670428252483600823257530420752963450"),r.a.createElement("p",null,"Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?")),r.a.createElement(l.default,{title:"JavaScript"},"\n        m => {\n          let\n          c = 0,\n          n = '7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450';\n          n = n.split('');\n\n          for (let i = 0; i < n.length - m; i++) {\n            \n            let s = 1;\n\n            for (let j = 0; j < m; j++) {\n              s *= n[i + j];\n            }\n            if (s > c) {\n              c = s;\n            }\n          }\n          return c;\n        }\n    "))}}}]);
//# sourceMappingURL=29.4c503e8c.chunk.js.map