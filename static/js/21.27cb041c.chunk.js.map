{"version":3,"sources":["Projects/ProjectEuler/P27.tsx","Hooks/useToast.ts","Components/CodePanel.tsx","Components/CodePanel/removeIndentation.ts","Components/Tabs.tsx","Components/CodePanel/Code.tsx"],"names":["P27","className","lang","JavaScript","useToast","useState","message","setMessage","useEffect","M","toast","completeCallback","displayLength","html","Toast","dismissAll","CodePanel","onInput","tabs","Object","keys","entries","map","entry","key","content","removeIndentation","text","lines","split","pop","shift","indentation","match","line","replace","join","Tabs","children","elRef","useRef","init","current","destroy","ref","title","to","React","Children","toArray","child","id","Code","code","onClick","e","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target"],"mappings":"yHAAA,kEAEe,SAASA,IACtB,OACE,qCACE,0BAASC,UAAU,sBAAnB,UACE,kDACA,4CACA,mFACA,qBAAKA,UAAU,SAAf,4BACA,mSAMA,+NAKA,oEACA,sBAAKA,UAAU,SAAf,iEAEE,uBAFF,+CAIE,uBAJF,iCAOA,4MAMF,cAAC,UAAD,CAAWC,KAAM,CACfC,WAAW,0tC,4LChCJ,SAASC,IAEtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,qBAAU,WAMR,OALAF,GAAWG,IAAEC,MAAM,CACjBC,iBAAkB,kBAAMJ,EAAW,KACnCK,cAAe,IACfC,KAAMP,IAED,kBAAMG,IAAEK,MAAMC,gBACpB,CAACT,IAEGC,I,gCCjBT,mFAWe,SAASS,EAAT,GAAkE,IAA7Cd,EAA4C,EAA5CA,KAA4C,IAAtCe,eAAsC,MAA5B,aAA4B,EAC9E,OACE,qBAAKhB,UAAU,wBAAf,SACE,cAAC,UAAD,CAAMiB,KAAMC,OAAOC,KAAKlB,GAAxB,SACGiB,OAAOE,QAAQnB,GAAMoB,KACpB,SAACC,EAAOC,GAAR,OAAgB,cAAC,UAAD,CAAMC,QAASF,EAAM,GAAcN,QAASA,GAAdO,Y,gCChBzC,SAASE,EAAkBC,GACxC,IAAMC,EAAQD,EAAKE,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMN,KAAI,SAACY,GAAD,OAAUA,EAAKC,QAAQH,EAAY,GAAI,OACjDJ,GACFQ,KAAK,QAVT,gD,gCCAA,2GAUe,SAASC,EAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,SAAUpB,EAAmB,EAAnBA,KAEjCqB,EAAQC,iBAAyB,MAOvC,OALAhC,qBAAU,WACR,IAAMU,EAAOT,IAAE4B,KAAKI,KAAKF,EAAMG,QAAoB,IACnD,OAAO,kBAAMxB,EAAKyB,aACjB,IAGD,qCACE,oBAAI1C,UAAU,OAAO2C,IAAKL,EAA1B,SACGrB,EAAKI,KAAI,SAACuB,EAAOrB,GAAR,OACR,oBAAIvB,UAAU,MAAd,SACE,cAAC,IAAD,CAAM6C,GAAI,IAAMD,EAAhB,SACGA,KAFoBrB,QAO5BuB,IAAMC,SAASC,QAAQX,GAAUhB,KAAI,SAAC4B,EAAO1B,GAAR,OACpC,qBACAvB,UAAU,cACVkD,GAAIjC,EAAKM,GAFT,SAIG0B,GADE1B,W,gCCjCb,iFASe,SAAS4B,EAAT,GAA2D,IAA3C3B,EAA0C,EAA1CA,QAA0C,IAAjCR,eAAiC,MAAvB,aAAuB,EAGvEoC,EAAO3B,kBAAkBD,GACzBf,EAAQN,oBAIR,OAFAI,qBAAU,kBAAMS,EAAQoC,KAAO,CAACpC,EAASoC,IAGvC,qCACE,wBACApD,UAAU,QACVqD,QAAS,SAAAC,GACP,IAAM5B,EAAO4B,EAAEC,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUnC,GAC7BoC,MAAK,kBAAMrD,EAAM,0BACjBsD,OAAM,kBAAMtD,EAAM,gCANrB,+BAUA,8BACE,sBACAuD,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChClD,QAAS,SAAAsC,GACP,IAAMa,EAAKb,EAAEc,OACbpD,EAAQmD,EAAGT,cANb,SAQGN","file":"static/js/21.27cb041c.chunk.js","sourcesContent":["import CodePanel from '../../Components/CodePanel';\r\n\r\nexport default function P27() {\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom panel\">\r\n        <h2>Quadratic primes</h2>\r\n        <h4>Problem 27</h4>\r\n        <p>Euler discovered the remarkable quadratic formula:</p>\r\n        <div className=\"center\">n² + n + 41</div>\r\n        <p>\r\n          It turns out that the formula will produce 40 primes for the\r\n          consecutive integer values 0 ≤ n ≤ 39. However, when\r\n          n = 40, 40² + 40 + 41 = 40(40 + 1) + 41 is divisible by 41, and\r\n          certainly when n = 41, 41² + 41 + 41 is clearly divisible by 41.\r\n        </p>\r\n        <p>\r\n          The incredible formula n² - 79n + 1601 was discovered, which\r\n          produces 80 primes for the consecutive values 0 ≤ n ≤ 79. The\r\n          product of the coefficients, -79 and 1601, is -126479.\r\n        </p>\r\n        <p>Considering quadratics of the form:</p>\r\n        <div className=\"center\">\r\n          n² + an + b, where |a| &lt; 1000 and |b| ≤ 1000\r\n          <br />\r\n          where |n| is the modulus/absolute value of n\r\n          <br />\r\n          e.g. |11| = 11 and |-4| = 4\r\n        </div>\r\n        <p>\r\n          Find the product of the coefficients, a and b, for the quadratic\r\n          expression that produces the maximum number of primes for\r\n          consecutive values of n, starting with n = 0.\r\n        </p>\r\n      </section>\r\n      <CodePanel lang={{\r\n        JavaScript: `\r\n          m => {\r\n            const primes = Array(m + 1).fill(true);\r\n            primes[0] = primes[1] = false;\r\n            \r\n            for (let i = 2; i < Math.sqrt(m); i++) {\r\n              if (primes[i]) {\r\n                for (let j = i * i; j <= m; j += i) {\r\n                  primes[j] = false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            let\r\n            result = { max: 0 },\r\n            swapB = b => {\r\n              let a = m % 2\r\n                ? -m + 2\r\n                : -m + 1;\r\n              \r\n              for (; a < m; a += 2) {\r\n              \r\n                let n = 0;\r\n                \r\n                while (primes[n * n + n * a + b]) {\r\n                  n++;\r\n                }\r\n                \r\n                if (n > result.max) {\r\n                  result = {\r\n                    a: a,\r\n                    b: b,\r\n                    max: n\r\n                  };\r\n                }\r\n              }\r\n            };\r\n            \r\n            for (let i = m; i >= 0; i--) {\r\n              if (primes[i]) {\r\n                swapB(i);\r\n                swapB(-i);\r\n              }\r\n            }\r\n\r\n            return result.a * result.b;\r\n          }\r\n      `}} />\r\n    </>\r\n  );\r\n};","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};","import Code from './CodePanel/Code';\r\nimport Tabs from './Tabs';\r\nimport './CodePanel/Style.scss';\r\n\r\ninterface CodePanelProps {\r\n  lang: {\r\n    [name: string]: string\r\n  },\r\n  onInput?: (text: string) => void\r\n}\r\n\r\nexport default function CodePanel({ lang, onInput = () => {} }: CodePanelProps) {\r\n  return (\r\n    <div className=\"panel language-markup\">\r\n      <Tabs tabs={Object.keys(lang)}>\r\n        {Object.entries(lang).map(\r\n          (entry, key) => <Code content={entry[1]} key={key} onInput={onInput} />\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};","export default function removeIndentation(text: string) {\r\n  const lines = text.split(/\\r|\\n/);\r\n  lines.pop();\r\n  lines.shift();\r\n\r\n  const indentation = lines[0].match(/^\\s+/g) || [];\r\n\r\n  return (indentation\r\n    ? lines.map((line) => line.replace(indentation[0], ''))\r\n    : lines\r\n  ).join('\\r\\n');\r\n};","import React, { useEffect, useRef } from \"react\";\r\nimport{ Link } from \"react-router-dom\";\r\nimport M from 'materialize-css';\r\nimport './Tabs/Style.scss';\r\n\r\ninterface TabsProps {\r\n  children: React.ReactNode;\r\n  tabs: string[];\r\n}\r\n\r\nexport default function Tabs({ children, tabs }: TabsProps) {\r\n\r\n  const elRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    const tabs = M.Tabs.init(elRef.current as Element, {});\r\n    return () => tabs.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"tabs\" ref={elRef}>\r\n        {tabs.map((title, key) => \r\n          <li className=\"tab\" key={key}>\r\n            <Link to={\"#\" + title}>\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {React.Children.toArray(children).map((child, key) => \r\n        <div\r\n        className=\"flex-column\"\r\n        id={tabs[key]}\r\n        key={key}>\r\n          {child}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};","\r\nimport { useEffect } from 'react';\r\nimport removeIndentation from './removeIndentation';\r\nimport useToast from '../../Hooks/useToast';\r\n\r\ninterface CodeProps {\r\n  content: string,\r\n  onInput?: (text: string) => void\r\n}\r\n\r\nexport default function Code({ content, onInput = () => {} }: CodeProps) {\r\n\r\n  const\r\n  code = removeIndentation(content),\r\n  toast = useToast();\r\n\r\n  useEffect(() => onInput(code), [onInput, code]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n      className=\"reset\"\r\n      onClick={e => {\r\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\r\n        navigator.clipboard.writeText(text)\r\n        .then(() => toast('copied to clipboard'))\r\n        .catch(() => toast('copy to clipboard failed'));       \r\n      }}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <pre>\r\n        <code\r\n        contentEditable\r\n        spellCheck=\"false\"\r\n        suppressContentEditableWarning={true}\r\n        onInput={e => {\r\n          const el = e.target as HTMLElement;\r\n          onInput(el.textContent as string);\r\n        }}>\r\n          {code}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};"],"sourceRoot":""}