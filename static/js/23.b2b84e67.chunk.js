(this.webpackJsonppages=this.webpackJsonppages||[]).push([[23,39,47,54,69,72],{155:function(e,t,n){},156:function(e,t,n){},75:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),c=n(77),i=n(76);n(156);t.default=r.a.memo((function(e){var t=e.children,n=e.onInput,l=void 0===n?function(){}:n,u=e.title,o=Object(c.default)(t),p=Object(i.default)();return Object(a.useEffect)((function(){return l(o)}),[l,o]),r.a.createElement("div",{className:"panel language-markup"},r.a.createElement("h3",null,u),r.a.createElement("button",{className:"reset",onClick:function(e){var t=e.currentTarget.parentNode.querySelector("code").textContent;navigator.clipboard.writeText(t).then((function(){return p("copied to clipboard")})).catch((function(){return p("copy to clipboard failed")}))}},"Copy to Clipboard"),r.a.createElement("pre",null,r.a.createElement("code",{contentEditable:!0,spellCheck:"false",suppressContentEditableWarning:!0,onInput:function(e){var t=e.target;l(t.textContent)}},o)))}))},76:function(e,t,n){"use strict";n.r(t);var a=n(14),r=n(0),c=n(55),i=n.n(c);n(155);t.default=function(){var e=Object(r.useState)(""),t=Object(a.a)(e,2),n=t[0],c=t[1];return Object(r.useEffect)((function(){return n&&i.a.toast({completeCallback:function(){return c("")},html:n}),function(){return i.a.Toast.dismissAll()}}),[n]),c}},77:function(e,t,n){"use strict";n.r(t),t.default=function(e){var t=e.split(/\r|\n/);t.pop(),t.shift();var n=t[0].match(/^\s+/g)||[];return(n?t.map((function(e){return e.replace(n[0],"")})):t).join("\r\n")}},93:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),c=n(75);t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("section",{className:"accent-bottom panel"},r.a.createElement("h2",null,"Largest prime factor"),r.a.createElement("h4",null,"Problem 3"),r.a.createElement("p",null,"The prime factors of 13195 are 5, 7, 13 and 29."),r.a.createElement("p",null,"What is the largest prime factor of the number 600851475143 ?")),r.a.createElement(c.default,{title:"JavaScript"},"\n        m => {\n          const primes = [];\n          let i = 3;\n\n          while (i < m) {\n            if (m % i === 0 && primes.every(p => i % p)) {\n              primes.push(i);\n              if (primes.reduce((p1, p2) => p1 * p2) === m) {\n                return primes.pop();\n              }\n            }\n            i += 2;\n          }\n        }\n    "))}}}]);
//# sourceMappingURL=23.b2b84e67.chunk.js.map