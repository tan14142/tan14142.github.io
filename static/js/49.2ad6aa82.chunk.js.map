{"version":3,"sources":["Hooks/useFetch.ts","Projects/WorldPopulation/transformCSV.ts","Projects/WorldPopulation.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Hooks/useToast.ts"],"names":["useFetch","url","transform","useState","data","ready","state","setState","toast","useToast","useEffect","isMounted","a","fetch","response","text","result","name","transformCSV","csvParse","sets","Array","fill","forEach","series","key","years","Object","entries","type","pop","region","year","value","push","length","WorldPopulation","startYear","setYear","timer","setTimer","useTimer","setActive","className","RacingBars","dataSlice","wMax","getTotal","action","style","marginBottom","id","max","min","onChange","e","target","htmlFor","position","top","active","onClick","preventDefault","interval","svgRef","useRef","height","width","current","clientWidth","aScale","scaleLinear","domain","range","xAxis","axisBottom","tickFormat","x","ticks","svg","select","transition","duration","styles","opacity","call","selectAll","remove","interrupt","regions","slice","world","xScale","yScale","scaleBand","padding","map","index","wScale","bandwidth","color","keys","sort","b","join","attrs","class","values","stroke","y","Rural","entry","parseInt","ref","borderBottom","marginTop","overflow","obj","Total","callback","setter","callbackRef","setterRef","timerRef","clear","clearInterval","clearTimeout","tick","props","bool","delay","setInterval","timeout","setTimeout","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","message","setMessage","M","completeCallback","displayLength","html","Toast","dismissAll"],"mappings":"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","file":"static/js/49.2ad6aa82.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport useToast from './useToast';\r\n\r\nexport default function useFetch(url: string, transform?: (res: Response) => any) {\r\n\r\n  const\r\n  [state, setState] = useState({ data: '', ready: false }),\r\n  toast = useToast();\r\n\r\n  useEffect(() => {\r\n\r\n    let isMounted = true;\r\n\r\n    (async () => {\r\n      try {\r\n        const\r\n        response = await fetch(url),\r\n        result = isMounted && await (transform\r\n          ? transform!(response)\r\n          : response.text()\r\n        );\r\n        isMounted && setState({\r\n          data: result,\r\n          ready: true\r\n        });\r\n      }\r\n      catch(e) {\r\n        isMounted && toast(e.name === 'AbortError'\r\n          ? 'Fetch was aborted'\r\n          : 'Something went wrong. Please try later.'\r\n        );\r\n      }\r\n    })();\r\n    \r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n  }, [toast, url, transform]);\r\n\r\n  return state;\r\n};","import { csvParse } from 'd3';\r\n\r\nexport default async function transformCSV(response: Response) {\r\n  const\r\n  data = csvParse(await response.text()) as any[],\r\n  sets = new Array(1960).fill(null);\r\n\r\n  data.forEach((series, key) => {\r\n    const\r\n    years = Object.entries(series),\r\n    type = years.pop()![1],\r\n    region = years.pop()![1];\r\n\r\n    for (const [year, value] of years) {\r\n      if (key === 0) {\r\n        sets[+year] = [];\r\n      }\r\n      if (key % 2 === 0) {\r\n        sets[+year].push({[region as string]: {}})\r\n      }\r\n      sets[+year][sets[+year].length - 1][region as string][type as string] = value;\r\n    }\r\n  });\r\n  return sets;\r\n};","import { useEffect, useRef, useState } from 'react';\r\nimport { axisBottom, scaleLinear, scaleBand, select } from 'd3';\r\nimport 'd3-selection-multi';\r\nimport useFetch from '../Hooks/useFetch';\r\nimport transformCSV from './WorldPopulation/transformCSV';\r\n\r\nexport default function WorldPopulation() {\r\n  \r\n  const startYear = 1960,\r\n        { data, ready } = useFetch(\r\n          '/Projects/WorldPopulation.csv',\r\n          transformCSV\r\n        ),\r\n        [year, setYear] = useState(startYear),\r\n        [timer, setTimer] = useState();\r\n  \r\n  useTimer(() => {\r\n    if (year < data.length - 1) {\r\n      setYear(year + 1);\r\n    }\r\n    else {\r\n      timer.setActive(false);\r\n    }\r\n  }, setTimer);\r\n\r\n  return ready\r\n    ? (\r\n    <section className=\"accent-bottom panel center\">\r\n      <h2>World Population by Region</h2>\r\n      <h4>and global urbanization since 1960</h4>\r\n      <p>Rural | Urban</p>\r\n      <RacingBars\r\n      dataSlice={data[year]}\r\n      wMax={getTotal(data[data.length - 1][data[year].length - 1])} />\r\n      <form\r\n      action=\"#\"\r\n      style={{ marginBottom: \"1rem\" }}>\r\n        <p className=\"range-field\">\r\n          <input\r\n          id=\"range\"\r\n          max={data.length - 1}\r\n          min={startYear}\r\n          onChange={e => {\r\n            timer.setActive(false);\r\n            setYear(+e.target.value);\r\n          }}\r\n          value={year}\r\n          type=\"range\" />\r\n        </p>\r\n        <label htmlFor=\"range\" style={{\r\n          position : 'relative',\r\n          top : '-20px'\r\n        }}>{year}</label>\r\n        <br />\r\n        <button\r\n        className={!timer.active && year < data.length - 1 ? \"btn waves-effect\" : \"hide\"}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          timer.interval(100);\r\n        }}>\r\n          run\r\n        </button>\r\n        <button\r\n        className={year < data.length - 1 && timer.active ? \"btn waves-effect\" : \"hide\"}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          timer.setActive(false);\r\n        }}>\r\n          pause\r\n        </button>\r\n        <button\r\n        className={year === data.length - 1 ? \"btn waves-effect\" : \"hide\"}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          setYear(startYear);\r\n        }}>\r\n          reset\r\n        </button>\r\n      </form>\r\n    </section>\r\n    )\r\n    : null;\r\n};\r\n\r\nconst RacingBars = ({ dataSlice, wMax }) => {\r\n  \r\n  const svgRef = useRef();\r\n  \r\n  useEffect(() => {\r\n\r\n    const height = 200,\r\n          width = svgRef.current.clientWidth,\r\n          \r\n          aScale = scaleLinear()\r\n            .domain([0, wMax / 3])\r\n            .range([-.5, width]),\r\n          \r\n          xAxis = axisBottom(aScale)\r\n            .tickFormat(x => x / 1000000 + 'M')\r\n            .ticks(5),\r\n          \r\n          svg = select(svgRef.current);\r\n\r\n    svg\r\n      .transition()\r\n      .duration(500)\r\n      .styles({\r\n        height : height + 'px',\r\n        opacity : 1\r\n      });\r\n    \r\n    svg\r\n      .select('.xAxis')\r\n      .call(xAxis)\r\n      .styles({\r\n        transform : `translateY(${ height - 2 }px)`\r\n      });\r\n\r\n    svg\r\n      .selectAll('.xAxis > .domain, .xAxis > .tick:last-child')\r\n      .remove();\r\n\r\n    svg\r\n      .selectAll('.tick > line')\r\n      .styles({\r\n        fill : 'red',\r\n        opacity : 1 / 3,\r\n        transform : `translateY(-${height - 10}px) scale(1, ${height / 6 - .5})`\r\n      });\r\n\r\n    return () => svg.interrupt();\r\n  }, [wMax]);\r\n\r\n  useEffect(() => {\r\n\r\n    const height = 200,\r\n          width = svgRef.current.clientWidth,\r\n          regions = dataSlice.slice(0, dataSlice.length - 1),\r\n          world = dataSlice[dataSlice.length - 1],\r\n          \r\n          xScale = scaleLinear()\r\n            .domain([0, wMax / 3])\r\n            .range([0, width]),\r\n          \r\n          yScale = scaleBand()\r\n            .padding(1 / 3)\r\n            .domain(new Array(regions.length)\r\n              .fill(null)\r\n              .map((value, index) => index)\r\n            )\r\n            .range([0, height]),\r\n          \r\n          wScale = scaleLinear()\r\n            .domain([0, wMax])\r\n            .range([height, yScale.bandwidth() / 2]),\r\n          \r\n          svg = select(svgRef.current);\r\n\r\n    [\r\n      '#66c2a5',\r\n      '#fc8d62',\r\n      '#8da0cb',\r\n      '#e78ac3',\r\n      '#a6d854',\r\n      '#ffd92f',\r\n      '#e5c494'\r\n    ].map((color, index) => regions[index][Object.keys(regions[index])[0]].color = color)\r\n\r\n    regions.sort((a, b) => getTotal(b) - getTotal(a));\r\n    \r\n    svg\r\n      .selectAll('.region')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('rect')\r\n      .attrs({\r\n        class : 'region',\r\n        fill : region => Object.values(region)[0].color,\r\n        stroke : 'black',\r\n        height : yScale.bandwidth(),\r\n        x : 0\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        width : region => xScale(getTotal(region)),\r\n        y : (region, index) => yScale(index)\r\n      });\r\n\r\n    svg\r\n      .selectAll('.regionRural')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('rect')\r\n      .attrs({\r\n        class : 'regionRural',\r\n        fill : 'none',\r\n        stroke : 'black',\r\n        'stroke-opacity' : .25,\r\n        height : yScale.bandwidth()\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        width : .1,\r\n        x : (region, index) => xScale(getTotal(region)) * Object.values(region)[0].Rural / 100,\r\n        y : (region, index) => yScale(index)\r\n      });\r\n    \r\n    svg\r\n      .selectAll('.world')\r\n      .data([world])\r\n      .join('rect')\r\n      .attrs({\r\n        class : 'world',\r\n        width : yScale.bandwidth() * 3,\r\n        x : width - yScale.bandwidth() * 4\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        height : entry => height - wScale(getTotal(entry)),\r\n        y : entry => wScale(getTotal(entry))\r\n      });\r\n    \r\n    svg\r\n      .selectAll('.label')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('text')\r\n      .text(region => Object.keys(region)[0])\r\n      .attrs({\r\n        class : 'label',\r\n        'font-size' : 8,\r\n        x : 0,\r\n        y : (region, index) => yScale(index) - 2\r\n      });\r\n   \r\n    svg\r\n      .selectAll('.total')\r\n      .data(regions, region => Object.keys(region)[0])\r\n      .join('text')\r\n      .text(region => parseInt(getTotal(region) / 1000000) + 'M')\r\n      .attrs({\r\n        class : 'total',\r\n        'font-size' : 8,\r\n        x : 4,\r\n        y : (region, index) => yScale(index) + yScale.bandwidth() * 2 / 3\r\n      });\r\n\r\n    svg\r\n      .selectAll('.worldLabel')\r\n      .data([world])\r\n      .join('text')\r\n      .text('Total')\r\n      .attrs({\r\n        class : 'worldLabel',\r\n        'font-size' : 8,\r\n        x : width - yScale.bandwidth() * 3\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        y : entry => wScale(getTotal(entry)) - 2\r\n      });\r\n\r\n    svg\r\n      .selectAll('.worldTotal')\r\n      .data([world])\r\n      .join('text')\r\n      .text(world => parseInt(getTotal(world) / 1000000) + 'M')\r\n      .attrs({\r\n        class : 'worldTotal',\r\n        fill : 'white',\r\n        'font-size' : 8,\r\n        x : width - yScale.bandwidth() * 3.15\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attrs({\r\n        y : entry => wScale(getTotal(entry)) + yScale.bandwidth() * 3 / 5\r\n      });\r\n    \r\n    return () => svg.interrupt();\r\n  }, [dataSlice, wMax]);\r\n  \r\n  return (\r\n    <svg\r\n    ref={svgRef}\r\n    style={{\r\n      borderBottom : '2px solid black',\r\n      height : 0,\r\n      marginTop : 20,\r\n      opacity : 0,\r\n      overflow : 'visible'\r\n    }}>\r\n      <g className=\"xAxis\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst getTotal = obj => +Object.values(obj)[0].Total;\r\n\r\nconst useTimer = (callback, setter) => {\r\n  \r\n  const callbackRef = useRef(),\r\n        setterRef = useRef(),\r\n        timerRef = useRef();\r\n\r\n  const clear = () => {\r\n    clearInterval(timerRef.current);\r\n    clearTimeout(timerRef.current);\r\n  };\r\n  \r\n  const tick = () => callbackRef.current();\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n    setterRef.current = setter;\r\n  }, [callback, setter]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const props = {\r\n      active : false,\r\n      setActive : bool => {\r\n        props.active && !bool && clear();\r\n        setterRef.current(state => ({ ...state, active : props.active = bool }));\r\n      },\r\n      interval : delay => {\r\n        timerRef.current = setInterval(tick, delay);\r\n        props.setActive(true);\r\n      },\r\n      timeout : delay => {\r\n        timerRef.current = setTimeout(tick, delay);\r\n        props.setActive(true);\r\n      }\r\n    };\r\n    setterRef.current(props);\r\n    \r\n    return clear;\r\n  }, []);\r\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useState } from \"react\";\r\nimport M from 'materialize-css';\r\nimport './useToast/Style.scss';\r\n\r\nexport default function useToast() {\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    message && M.toast({\r\n      completeCallback: () => setMessage(''),\r\n      displayLength: 2000,\r\n      html: message\r\n    });\r\n    return () => M.Toast.dismissAll();\r\n  }, [message]);\r\n\r\n  return setMessage;\r\n};"],"sourceRoot":""}