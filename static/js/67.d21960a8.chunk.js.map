{"version":3,"sources":["Hooks/useIntersectionObserver.ts"],"names":["useIntersectionObserver","thresholds","useState","viewRatio","setViewRatio","ref","useRef","useEffect","observer","IntersectionObserver","entry","intersectionRatio","current","target","observe","unobserve"],"mappings":"mKAEe,SAASA,IAA8C,IAAtBC,EAAqB,uDAAR,CAAC,EAAG,GAE/D,EAC4BC,mBAAS,GADrC,mBACCC,EADD,KACYC,EADZ,KAEAC,EAAMC,iBAAgB,MAkBtB,OAhBAC,qBAAU,WAER,IAAMC,EAAW,IAAIC,sBACnB,SAAAC,GACEN,EAAaM,EAAM,GAAGC,qBAExBV,GAGF,GAAII,EAAIO,QAAS,CACf,IAAMC,EAASR,EAAIO,QAEnB,OADAJ,EAASM,QAAQD,GACV,kBAAML,EAASO,UAAUF,OAEjC,CAACZ,IAEG,CAACE,EAAWE","file":"static/js/67.d21960a8.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function useIntersectionObserver(thresholds = [0, 1]) {\r\n  \r\n  const\r\n  [viewRatio, setViewRatio] = useState(0),\r\n  ref = useRef<Element>(null);\r\n  \r\n  useEffect(() => {\r\n\r\n    const observer = new IntersectionObserver(\r\n      entry => {\r\n        setViewRatio(entry[0].intersectionRatio);\r\n      },\r\n      thresholds as IntersectionObserverInit\r\n    );\r\n\r\n    if (ref.current) {\r\n      const target = ref.current;\r\n      observer.observe(target);\r\n      return () => observer.unobserve(target);\r\n    }\r\n  }, [thresholds]);\r\n  \r\n  return [viewRatio, ref];\r\n};"],"sourceRoot":""}