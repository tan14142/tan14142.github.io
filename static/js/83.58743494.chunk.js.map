{"version":3,"sources":["Projects/ReactD3.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Utils/shuffle.ts"],"names":["ReactD3","useState","data1","setData1","data2","setData2","data3","setData3","svg1","useRef","svg2","svg3","beautifyMax","max","maxArr","toString","split","ceil","fill","join","useEffect","svg","select","current","Math","offsetX","drawCircle","strat","attr","value","attrs","height","margin","width","selectAll","data","enter","append","update","transition","duration","interrupt","beautified","padding","xScale","scaleLinear","domain","length","range","yScale","xAxis","axisBottom","ticks","yAxis","axisLeft","drawPath","line","x","index","y","curve","curveCardinal","call","style","class","stroke","colorScale","clamp","scaleBand","map","drawRect","bandwidth","on","opacity","text","remove","className","ref","onClick","shuffle","borderRight","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","array","randomIndex","temporaryValue","currentIndex","tempArr","slice","floor","random"],"mappings":"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","file":"static/js/83.58743494.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { axisBottom, axisLeft, curveCardinal, line, scaleBand, scaleLinear, select } from 'd3';\r\nimport 'd3-selection-multi';\r\nimport shuffle from '../Utils/shuffle';\r\nimport './ReactD3/Style.scss';\r\n\r\nexport default function ReactD3() {\r\n  \r\n  const\r\n  [data1, setData1] = useState([1, 2, 4, 8, 12, 16, 20, 24]),\r\n  [data2, setData2] = useState(data1),\r\n  [data3, setData3] = useState(data1),\r\n  margin = 20,\r\n  svg1 = useRef(),\r\n  svg2 = useRef(),\r\n  svg3 = useRef();\r\n  \r\n  useEffect(() => {\r\n    \r\n    const\r\n    svg = select(svg1.current),\r\n    padding = 10,\r\n    max = Math.max(...data1) + padding;\r\n          \r\n    let offsetX = 20;\r\n    \r\n    const drawCircle = strat => strat\r\n      .attr('r', value => value)\r\n      .attr('cx', value => {\r\n        offsetX += value * 2 + padding;\r\n        return offsetX - value; \r\n      })\r\n      .attr('cy', max);\r\n    \r\n    svg.attrs({\r\n      height : max * 2,\r\n      margin : margin,\r\n      width : 300\r\n    });\r\n\r\n    svg\r\n      .selectAll('circle')\r\n      .data(data1)\r\n      .join(\r\n        enter => drawCircle(\r\n          enter\r\n          .append('circle')\r\n          .attr('fill', 'white')\r\n          .attr('stroke', 'black')\r\n        ),\r\n        update => drawCircle(\r\n          update\r\n          .transition()\r\n          .duration(500)\r\n        )\r\n      );\r\n    \r\n    return () => svg.interrupt();\r\n  }, [data1]);\r\n  \r\n  useEffect(() => {\r\n    \r\n    const \r\n    max = Math.max(...data2),\r\n    beautified = beautifyMax(max),\r\n    svg = select(svg2.current),\r\n    padding = 20,\r\n    xUnit = 50,\r\n    yUnit = 4,\r\n          \r\n    xScale = scaleLinear()\r\n      .domain([0, data2.length - 1])\r\n      .range([padding, (data2.length - 1) * xUnit + padding])\r\n    ,\r\n    yScale = scaleLinear()\r\n      .domain([0, beautified])\r\n      .range([beautified * yUnit + padding, padding])\r\n    ,\r\n    xAxis = axisBottom(xScale).ticks(data2.length),\r\n    yAxis = axisLeft(yScale).ticks(+max.toString()[0] + 1),\r\n    \r\n    drawPath = strat => strat\r\n      .attr('d', line()\r\n        .x((value, index) => xScale(index))\r\n        .y(yScale)\r\n        .curve(curveCardinal)\r\n      );\r\n\r\n    svg\r\n      .select('.xAxis')\r\n      .call(xAxis)\r\n      .style('transform', `translateY(${ yScale(0) }px)`);\r\n\r\n    svg\r\n      .select('.yAxis')\r\n      .call(yAxis)\r\n      .style('transform', `translateX(${ padding }px)`);\r\n    \r\n    svg\r\n      .attrs({\r\n        height : yScale(0) + padding,\r\n        margin : margin,\r\n        width : xScale(data2.length - 1) + padding\r\n      })\r\n      .selectAll('.path')\r\n      .data([data2])\r\n      .join(\r\n        enter => drawPath(\r\n          enter\r\n          .append('path')\r\n          .attrs({\r\n            class : 'path',\r\n            fill : 'none',\r\n            stroke : 'blue'\r\n          })\r\n        ),\r\n        update => drawPath(\r\n          update\r\n          .transition()\r\n          .duration(500)\r\n        )\r\n      );\r\n    \r\n    return () => svg.interrupt();\r\n  }, [data2]);\r\n  \r\n  useEffect(() => {\r\n    \r\n    const\r\n    max = Math.max(...data3),\r\n    beautified = beautifyMax(max),\r\n    svg = select(svg3.current),\r\n    padding = 20,\r\n    xUnit = 50,\r\n    yUnit = 4,\r\n    \r\n    colorScale = scaleLinear()\r\n      .domain([4, 12, 20])\r\n      .range(['green', 'orange', 'red'])\r\n      .clamp(true),\r\n    \r\n    xScale = scaleBand()\r\n      .domain(data3.map((value, index) => index))\r\n      .range([padding, (data3.length - 1) * xUnit + padding])\r\n      .padding(.5)\r\n    ,\r\n    yScale = scaleLinear()\r\n      .domain([0, beautified])\r\n      .range([beautified * yUnit + padding, padding])\r\n    ,\r\n    xAxis = axisBottom(xScale).ticks(data3.length),\r\n    yAxis = axisLeft(yScale).ticks(+max.toString()[0] + 1),\r\n\r\n    drawRect = strat => strat\r\n      .attrs({\r\n        fill : colorScale,\r\n        height : value => value * yUnit,\r\n        x : (value, index) => xScale(index),\r\n        y : yScale\r\n      });\r\n    \r\n    svg\r\n      .select('.xAxis')\r\n      .call(xAxis)\r\n      .style('transform', `translateY(${ yScale(0) }px)`);\r\n\r\n    svg\r\n      .select('.yAxis')\r\n      .call(yAxis)\r\n      .style('transform', `translateX(${ padding }px)`);\r\n    \r\n    svg\r\n      .attrs({\r\n        height : yScale(0) + padding,\r\n        margin : margin,\r\n        width : (data3.length - 1) * xUnit + padding * 2\r\n      })\r\n      .selectAll('.bar')\r\n      .data(data3)\r\n      .join(\r\n        enter => drawRect(\r\n          enter\r\n          .append('rect')\r\n          .attrs({\r\n            class : 'bar',\r\n            width : xScale.bandwidth()\r\n          })\r\n        ),\r\n        update => drawRect(\r\n          update\r\n          .transition()\r\n          .duration(500)\r\n        )\r\n      )\r\n      .on('mouseenter', (value, index) => {\r\n        svg\r\n          .selectAll('.tooltip')\r\n          .data([value])\r\n          .join(enter => enter\r\n            .append('text')\r\n            .attrs({\r\n              class : 'tooltip',\r\n              'font-size' : 12,\r\n              'text-anchor' : 'middle',\r\n              x : xScale(index) + xScale.bandwidth() / 2,\r\n              y : yScale(value)\r\n            })\r\n          )\r\n          .transition()\r\n          .attrs({\r\n            opacity : .8,\r\n            y : yScale(value) - 4\r\n          })\r\n          .text(value)\r\n      })\r\n      .on('mouseleave', () => svg\r\n        .selectAll('.tooltip')\r\n        .remove()\r\n      );\r\n    \r\n    return () => svg.interrupt();\r\n  }, [data3]);\r\n\r\n  function beautifyMax(max) {\r\n    \r\n    let\r\n    maxArr = max.toString().split(''),\r\n    ceil = ++maxArr[0];\r\n\r\n    maxArr.fill(0);\r\n    maxArr[0] = ceil;\r\n    return +maxArr.join('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"accent-bottom center-content panel\">\r\n        <h2>Circles</h2>\r\n        <svg\r\n        className=\"width100\"\r\n        ref={svg1} />\r\n        <button\r\n        className=\"btn ReactD3-el waves-effect\"\r\n        onClick={() => setData1(shuffle(data1))}>\r\n          shuffle\r\n        </button>\r\n      </section>\r\n      <section className=\"accent-bottom center-content panel\">\r\n        <h2>Line Chart</h2>\r\n        <svg\r\n        className=\"width100\"\r\n        ref={svg2}\r\n        style={{\r\n          borderRight: \"2rem solid transparent\",\r\n        }}>\r\n          <g className=\"xAxis\" />\r\n          <g className=\"yAxis\" />\r\n        </svg>\r\n        <button\r\n        className=\"btn ReactD3-el waves-effect\"\r\n        onClick={() => setData2(shuffle(data2))}>\r\n          shuffle\r\n        </button>\r\n      </section>\r\n      <section className=\"accent-bottom center-content panel\">\r\n        <h2>Bar Chart</h2>\r\n        <svg\r\n        className=\"width100\"\r\n        ref={svg3}\r\n        style={{\r\n          borderRight: \"2rem solid transparent\",\r\n        }}>\r\n          <g className=\"xAxis\" />\r\n          <g className=\"yAxis\" />\r\n        </svg>\r\n        <button\r\n        className=\"btn ReactD3-el waves-effect\"\r\n        onClick={() => setData3(shuffle(data3))}>\r\n          shuffle\r\n        </button>\r\n      </section>\r\n    </>\r\n  );\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function shuffle(array: any[]): any[] {\r\n    \r\n  let\r\n  currentIndex: number = array.length,\r\n  randomIndex,\r\n  temporaryValue,\r\n  tempArr: any[] = array.slice();\r\n\r\n  while (0 !== currentIndex) {\r\n\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    temporaryValue = tempArr[currentIndex];\r\n    tempArr[currentIndex] = tempArr[randomIndex];\r\n    tempArr[randomIndex] = temporaryValue;\r\n  }\r\n  return tempArr;\r\n};"],"sourceRoot":""}