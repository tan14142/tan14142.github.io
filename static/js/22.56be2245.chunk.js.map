{"version":3,"sources":["Projects/ProjectEuler/P28.tsx","Components/CodePanel.tsx","Components/CodePanel/removeIndentation.ts"],"names":["className","title","React","memo","children","onInput","code","removeIndentation","toast","useToast","useEffect","onClick","e","text","currentTarget","parentNode","querySelector","textContent","navigator","clipboard","writeText","then","catch","contentEditable","spellCheck","suppressContentEditableWarning","el","target","lines","split","pop","shift","indentation","match","map","line","replace","join"],"mappings":"sGAAA,mCAGe,qBACb,OACE,oCACE,6BAASA,UAAU,uBACjB,uDACA,0CACA,gJAIA,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,YAAhB,MACC,IAFH,WAIG,IACD,0BAAMA,UAAU,YAAhB,MACA,6BANF,UASE,0BAAMA,UAAU,YAAhB,KATF,cAaE,0BAAMA,UAAU,YAAhB,KACC,IAdH,KAgBE,6BAhBF,gBAmBE,0BAAMA,UAAU,YAAhB,KAnBF,YAsBE,6BAtBF,UAyBE,0BAAMA,UAAU,YAAhB,KAzBF,cA6BE,0BAAMA,UAAU,YAAhB,KACC,IA9BH,KAgCE,6BACA,0BAAMA,UAAU,YAAhB,MACC,IAlCH,WAoCG,IACD,0BAAMA,UAAU,YAAhB,OAEF,sGAIA,gIAKF,kBAAC,UAAD,CAAWC,MAAM,cAAjB,kK,sDC7DN,kDAWeC,cAAMC,MAAK,YAA6D,IAA1DC,EAAyD,EAAzDA,SAAyD,IAA/CC,eAA+C,MAArC,aAAqC,EAA3BJ,EAA2B,EAA3BA,MAGzDK,EAAOC,kBAAkBH,GACzBI,EAAQC,oBAIR,OAFAC,qBAAU,kBAAML,EAAQC,KAAO,CAACD,EAASC,IAGvC,yBAAKN,UAAU,yBACb,4BAAKC,GACL,4BACAD,UAAU,QACVW,QAAS,SAAAC,GACP,IAAMC,EAAOD,EAAEE,cAAcC,WAAYC,cAAc,QAASC,YAChEC,UAAUC,UAAUC,UAAUP,GAC7BQ,MAAK,kBAAMb,EAAM,0BACjBc,OAAM,kBAAMd,EAAM,iCANrB,qBAUA,6BACE,0BACAe,iBAAe,EACfC,WAAW,QACXC,gCAAgC,EAChCpB,QAAS,SAAAO,GACP,IAAMc,EAAKd,EAAEe,OACbtB,EAAQqB,EAAGT,eAEVX,S,gCCzCX,OAAe,mBAACO,GACd,IAAMe,EAAQf,EAAKgB,MAAM,SACzBD,EAAME,MACNF,EAAMG,QAEN,IAAMC,EAAcJ,EAAM,GAAGK,MAAM,UAAY,GAE/C,OAAQD,EACJJ,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,QAAQJ,EAAY,GAAI,OACjDJ,GACFS,KAAK","file":"static/js/22.56be2245.chunk.js","sourcesContent":["import React from 'react';\nimport CodePanel from '../../Components/CodePanel';\n\nexport default () => {\n  return (\n    <>\n      <section className=\"accent-bottom panel\">\n        <h2>Number spiral diagonals</h2>\n        <h4>Problem 28</h4>\n        <p>\n          Starting with the number 1 and moving to the right in a\n          clockwise direction a 5 by 5 spiral is formed as follows:\n        </p>\n        <div className=\"center font-mono nowrap\">\n          <span className=\"red-text\">21</span>\n          {' '}\n          22 23 24\n          {' '}\n          <span className=\"red-text\">25</span>\n          <br />\n          20\n          &nbsp;\n          <span className=\"red-text\">7</span>\n          &nbsp;\n          8\n          &nbsp;\n          <span className=\"red-text\">9</span>\n          {' '}\n          10\n          <br />\n          19 &nbsp;6\n          &nbsp;\n          <span className=\"red-text\">1</span>\n          &nbsp;\n          2 11\n          <br />\n          18\n          &nbsp;\n          <span className=\"red-text\">5</span>\n          &nbsp;\n          4\n          &nbsp;\n          <span className=\"red-text\">3</span>\n          {' '}\n          12\n          <br />\n          <span className=\"red-text\">17</span>\n          {' '}\n          16 15 14\n          {' '}\n          <span className=\"red-text\">13</span>\n        </div>\n        <p>\n          It can be verified that the sum of the numbers on the diagonals\n          is 101.\n        </p>\n        <p>\n          What is the sum of the numbers on the diagonals in a 1001 by\n          1001 spiral formed in the same way?\n        </p>\n      </section>\n      <CodePanel title=\"JavaScript\">{`\n        m => {\n          const n = Math.floor(m / 2);\n          return 16 / 3 * Math.pow(n, 3) + 10 * Math.pow(n, 2) + 26 / 3 * n + 1;\n        }\n    `}</CodePanel>\n    </>\n  );\n};","import React, { useEffect } from 'react';\nimport removeIndentation from './CodePanel/removeIndentation';\nimport useToast from '../Hooks/useToast';\nimport './CodePanel/Style.scss';\n\ninterface CodePanelProps {\n  children: React.ReactNode;\n  onInput?: (text: string) => void;\n  title: string;\n}\n\nexport default React.memo(({ children, onInput = () => {}, title}: CodePanelProps) => {\n\n  const\n  code = removeIndentation(children as string),\n  toast = useToast();\n\n  useEffect(() => onInput(code), [onInput, code]);\n\n  return (\n    <div className=\"panel language-markup\">\n      <h3>{title}</h3>\n      <button\n      className=\"reset\"\n      onClick={e => {\n        const text = e.currentTarget.parentNode!.querySelector('code')!.textContent!;\n        navigator.clipboard.writeText(text)\n        .then(() => toast('copied to clipboard'))\n        .catch(() => toast('copy to clipboard failed'));       \n      }}>\n        Copy to Clipboard\n      </button>\n      <pre>\n        <code\n        contentEditable\n        spellCheck=\"false\"\n        suppressContentEditableWarning={true}\n        onInput={e => {\n          const el = e.target as HTMLElement;\n          onInput(el.textContent as string);\n        }}>\n          {code}\n        </code>\n      </pre>\n    </div>\n  );\n});","export default (text: string) => {\n  const lines = text.split(/\\r|\\n/);\n  lines.pop();\n  lines.shift();\n\n  const indentation = lines[0].match(/^\\s+/g) || [];\n\n  return (indentation\n    ? lines.map((line) => line.replace(indentation[0], ''))\n    : lines\n  ).join('\\r\\n');\n};"],"sourceRoot":""}