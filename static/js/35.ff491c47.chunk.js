(this.webpackJsonppages=this.webpackJsonppages||[]).push([[35,47,55,62,83,86],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(80),c=n(0);function i(){return Object(c.jsxs)(c.Fragment,{children:[Object(c.jsxs)("section",{className:"accent-bottom panel",children:[Object(c.jsx)("h2",{children:"Largest exponential"}),Object(c.jsx)("h4",{children:"Problem 99"}),Object(c.jsx)("p",{children:"Comparing two numbers written in index form like 2\xb9\xb9 and 3\u2077 is not difficult, as any calculator would confirm that 2\xb9\xb9 = 2048 < 3\u2077 = 2187."}),Object(c.jsx)("p",{children:"However, confirming that 632382\u2075\xb9\u2078\u2070\u2076\xb9 > 519432\u2075\xb2\u2075\u2078\u2070\u2076 would be much more difficult, as both numbers contain over three million digits."}),Object(c.jsxs)("p",{children:["Using ",Object(c.jsx)("a",{href:"/Projects/Project-Euler/P9.txt",children:"base_exp.txt"})," (right click and 'Save Link/Target As...'), a 22K text file containing one thousand lines with a base/exponent pair on each line, determine which line number has the greatest numerical value."]}),Object(c.jsx)("p",{children:"NOTE: The first two lines in the file represent the numbers in the example given above."})]}),Object(c.jsx)(r.default,{title:"JavaScript",children:"\n        m => {\n          const\n          { csvParseRows, values } = require('d3'),\n          fs = require('fs'),    \n          buffer = fs.readFileSync(process.cwd() + '/public/Projects/Project-Euler/P99.txt'),\n          data = csvParseRows(String(buffer));\n\n          let\n          c = 0,\n          r = '';\n          m = m || data.length;\n\n          for (let i = 0; i < m; i++) {\n            let\n            v = values(data[i]),\n            p = Math.log(v[0]) * v[1];\n            if (p > c) {\n              c = p;\n              r = v.join();\n            }\n          }\n          return r;\n        }\n    "})]})}},173:function(e,t,n){},174:function(e,t,n){},80:function(e,t,n){"use strict";n.r(t);var r=n(1),c=n.n(r),i=n(82),a=n(81),s=(n(174),n(0)),o=c.a.memo((function(e){var t=e.children,n=e.onInput,c=void 0===n?function(){}:n,o=e.title,l=Object(i.default)(t),u=Object(a.default)();return Object(r.useEffect)((function(){return c(l)}),[c,l]),Object(s.jsxs)("div",{className:"panel language-markup",children:[Object(s.jsx)("h3",{children:o}),Object(s.jsx)("button",{className:"reset",onClick:function(e){var t=e.currentTarget.parentNode.querySelector("code").textContent;navigator.clipboard.writeText(t).then((function(){return u("copied to clipboard")})).catch((function(){return u("copy to clipboard failed")}))},children:"Copy to Clipboard"}),Object(s.jsx)("pre",{children:Object(s.jsx)("code",{contentEditable:!0,spellCheck:"false",suppressContentEditableWarning:!0,onInput:function(e){var t=e.target;c(t.textContent)},children:l})})]})}));t.default=o},81:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var r=n(16),c=n(1),i=n(59),a=n.n(i);n(173);function s(){var e=Object(c.useState)(""),t=Object(r.a)(e,2),n=t[0],i=t[1];return Object(c.useEffect)((function(){return n&&a.a.toast({completeCallback:function(){return i("")},displayLength:2e3,html:n}),function(){return a.a.Toast.dismissAll()}}),[n]),i}},82:function(e,t,n){"use strict";function r(e){var t=e.split(/\r|\n/);t.pop(),t.shift();var n=t[0].match(/^\s+/g)||[];return(n?t.map((function(e){return e.replace(n[0],"")})):t).join("\r\n")}n.r(t),n.d(t,"default",(function(){return r}))}}]);
//# sourceMappingURL=35.ff491c47.chunk.js.map