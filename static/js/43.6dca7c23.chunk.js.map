{"version":3,"sources":["Projects/ReactD3.tsx","../node_modules/d3-selection-multi/src/selection/attrs.js","../node_modules/d3-selection-multi/src/selection/styles.js","../node_modules/d3-selection-multi/src/selection/properties.js","../node_modules/d3-selection-multi/src/transition/attrs.js","../node_modules/d3-selection-multi/src/transition/styles.js","../node_modules/d3-selection-multi/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["useState","data1","setData1","data2","setData2","data3","setData3","svg1","useRef","svg2","svg3","beautifyMax","max","maxArr","toString","split","ceil","fill","join","shuffle","array","randomIndex","temporaryValue","currentIndex","length","tempArr","slice","Math","floor","random","useEffect","svg","select","current","offsetX","drawCircle","strat","attr","value","attrs","height","margin","width","selectAll","data","enter","append","update","transition","duration","interrupt","beautified","xScale","scaleLinear","domain","range","yScale","xAxis","axisBottom","ticks","yAxis","axisLeft","drawPath","line","x","index","y","curve","curveCardinal","call","style","class","stroke","colorScale","clamp","scaleBand","map","padding","drawRect","bandwidth","on","opacity","text","remove","className","ref","onClick","borderRight","attrsFunction","selection","each","apply","this","arguments","s","name","attrsObject","stylesFunction","priority","stylesObject","propertiesFunction","property","propertiesObject","t","prototype","styles","properties","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/43.6dca7c23.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { axisBottom, axisLeft, curveCardinal, line, scaleBand, scaleLinear, select } from 'd3';\nimport 'd3-selection-multi';\nimport './ReactD3/Style.scss';\n\nexport default () => {\n  \n  const\n  [data1, setData1] = useState([1, 2, 4, 8, 12, 16, 20, 24]),\n  [data2, setData2] = useState(data1),\n  [data3, setData3] = useState(data1),\n  margin = 20,\n  svg1 = useRef(),\n  svg2 = useRef(),\n  svg3 = useRef();\n  \n  useEffect(() => {\n    \n    const\n    svg = select(svg1.current),\n    padding = 10,\n    max = Math.max(...data1) + padding;\n          \n    let offsetX = 20;\n    \n    const drawCircle = strat => strat\n      .attr('r', value => value)\n      .attr('cx', value => {\n        offsetX += value * 2 + padding;\n        return offsetX - value; \n      })\n      .attr('cy', max);\n    \n    svg.attrs({\n      height : max * 2,\n      margin : margin,\n      width : 300\n    });\n\n    svg\n      .selectAll('circle')\n      .data(data1)\n      .join(\n        enter => drawCircle(\n          enter\n          .append('circle')\n          .attr('fill', 'white')\n          .attr('stroke', 'black')\n        ),\n        update => drawCircle(\n          update\n          .transition()\n          .duration(500)\n        )\n      );\n    \n    return () => svg.interrupt();\n  }, [data1]);\n  \n  useEffect(() => {\n    \n    const \n    max = Math.max(...data2),\n    beautified = beautifyMax(max),\n    svg = select(svg2.current),\n    padding = 20,\n    xUnit = 50,\n    yUnit = 4,\n          \n    xScale = scaleLinear()\n      .domain([0, data2.length - 1])\n      .range([padding, (data2.length - 1) * xUnit + padding])\n    ,\n    yScale = scaleLinear()\n      .domain([0, beautified])\n      .range([beautified * yUnit + padding, padding])\n    ,\n    xAxis = axisBottom(xScale).ticks(data2.length),\n    yAxis = axisLeft(yScale).ticks(+max.toString()[0] + 1),\n    \n    drawPath = strat => strat\n      .attr('d', line()\n        .x((value, index) => xScale(index))\n        .y(yScale)\n        .curve(curveCardinal)\n      );\n\n    svg\n      .select('.xAxis')\n      .call(xAxis)\n      .style('transform', `translateY(${ yScale(0) }px)`);\n\n    svg\n      .select('.yAxis')\n      .call(yAxis)\n      .style('transform', `translateX(${ padding }px)`);\n    \n    svg\n      .attrs({\n        height : yScale(0) + padding,\n        margin : margin,\n        width : xScale(data2.length - 1) + padding\n      })\n      .selectAll('.path')\n      .data([data2])\n      .join(\n        enter => drawPath(\n          enter\n          .append('path')\n          .attrs({\n            class : 'path',\n            fill : 'none',\n            stroke : 'blue'\n          })\n        ),\n        update => drawPath(\n          update\n          .transition()\n          .duration(500)\n        )\n      );\n    \n    return () => svg.interrupt();\n  }, [data2]);\n  \n  useEffect(() => {\n    \n    const\n    max = Math.max(...data3),\n    beautified = beautifyMax(max),\n    svg = select(svg3.current),\n    padding = 20,\n    xUnit = 50,\n    yUnit = 4,\n    \n    colorScale = scaleLinear()\n      .domain([4, 12, 20])\n      .range(['green', 'orange', 'red'])\n      .clamp(true),\n    \n    xScale = scaleBand()\n      .domain(data3.map((value, index) => index))\n      .range([padding, (data3.length - 1) * xUnit + padding])\n      .padding(.5)\n    ,\n    yScale = scaleLinear()\n      .domain([0, beautified])\n      .range([beautified * yUnit + padding, padding])\n    ,\n    xAxis = axisBottom(xScale).ticks(data3.length),\n    yAxis = axisLeft(yScale).ticks(+max.toString()[0] + 1),\n\n    drawRect = strat => strat\n      .attrs({\n        fill : colorScale,\n        height : value => value * yUnit,\n        x : (value, index) => xScale(index),\n        y : yScale\n      });\n    \n    svg\n      .select('.xAxis')\n      .call(xAxis)\n      .style('transform', `translateY(${ yScale(0) }px)`);\n\n    svg\n      .select('.yAxis')\n      .call(yAxis)\n      .style('transform', `translateX(${ padding }px)`);\n    \n    svg\n      .attrs({\n        height : yScale(0) + padding,\n        margin : margin,\n        width : (data3.length - 1) * xUnit + padding * 2\n      })\n      .selectAll('.bar')\n      .data(data3)\n      .join(\n        enter => drawRect(\n          enter\n          .append('rect')\n          .attrs({\n            class : 'bar',\n            width : xScale.bandwidth()\n          })\n        ),\n        update => drawRect(\n          update\n          .transition()\n          .duration(500)\n        )\n      )\n      .on('mouseenter', (value, index) => {\n        svg\n          .selectAll('.tooltip')\n          .data([value])\n          .join(enter => enter\n            .append('text')\n            .attrs({\n              class : 'tooltip',\n              'font-size' : 12,\n              'text-anchor' : 'middle',\n              x : xScale(index) + xScale.bandwidth() / 2,\n              y : yScale(value)\n            })\n          )\n          .transition()\n          .attrs({\n            opacity : .8,\n            y : yScale(value) - 4\n          })\n          .text(value)\n      })\n      .on('mouseleave', () => svg\n        .selectAll('.tooltip')\n        .remove()\n      );\n    \n    return () => svg.interrupt();\n  }, [data3]);\n\n  function beautifyMax(max) {\n    \n    let\n    maxArr = max.toString().split(''),\n    ceil = ++maxArr[0];\n\n    maxArr.fill(0);\n    maxArr[0] = ceil;\n    return +maxArr.join('');\n  }\n\n  function shuffle(array) {\n    \n    let\n    currentIndex = array.length,\n    randomIndex,\n    temporaryValue,\n    tempArr = array.slice();\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      temporaryValue = tempArr[currentIndex];\n      tempArr[currentIndex] = tempArr[randomIndex];\n      tempArr[randomIndex] = temporaryValue;\n    }\n    return tempArr;\n  }\n\n  return (\n    <>\n      <section className=\"accent-bottom center-content panel\">\n        <h2>Circles</h2>\n        <svg\n        className=\"width100\"\n        ref={svg1} />\n        <button\n        className=\"btn ReactD3-el waves-effect\"\n        onClick={() => setData1(shuffle(data1))}>\n          shuffle\n        </button>\n      </section>\n      <section className=\"accent-bottom center-content panel\">\n        <h2>Line Chart</h2>\n        <svg\n        className=\"width100\"\n        ref={svg2}\n        style={{\n          borderRight: \"2rem solid transparent\",\n        }}>\n          <g className=\"xAxis\" />\n          <g className=\"yAxis\" />\n        </svg>\n        <button\n        className=\"btn ReactD3-el waves-effect\"\n        onClick={() => setData2(shuffle(data2))}>\n          shuffle\n        </button>\n      </section>\n      <section className=\"accent-bottom center-content panel\">\n        <h2>Bar Chart</h2>\n        <svg\n        className=\"width100\"\n        ref={svg3}\n        style={{\n          borderRight: \"2rem solid transparent\",\n        }}>\n          <g className=\"xAxis\" />\n          <g className=\"yAxis\" />\n        </svg>\n        <button\n        className=\"btn ReactD3-el waves-effect\"\n        onClick={() => setData3(shuffle(data3))}>\n          shuffle\n        </button>\n      </section>\n    </>\n  );\n};","import {select} from \"d3-selection\";\n\nfunction attrsFunction(selection, map) {\n  return selection.each(function() {\n    var x = map.apply(this, arguments), s = select(this);\n    for (var name in x) s.attr(name, x[name]);\n  });\n}\n\nfunction attrsObject(selection, map) {\n  for (var name in map) selection.attr(name, map[name]);\n  return selection;\n}\n\nexport default function(map) {\n  return (typeof map === \"function\" ? attrsFunction : attrsObject)(this, map);\n}\n","import {select} from \"d3-selection\";\n\nfunction stylesFunction(selection, map, priority) {\n  return selection.each(function() {\n    var x = map.apply(this, arguments), s = select(this);\n    for (var name in x) s.style(name, x[name], priority);\n  });\n}\n\nfunction stylesObject(selection, map, priority) {\n  for (var name in map) selection.style(name, map[name], priority);\n  return selection;\n}\n\nexport default function(map, priority) {\n  return (typeof map === \"function\" ? stylesFunction : stylesObject)(this, map, priority == null ? \"\" : priority);\n}\n","import {select} from \"d3-selection\";\n\nfunction propertiesFunction(selection, map) {\n  return selection.each(function() {\n    var x = map.apply(this, arguments), s = select(this);\n    for (var name in x) s.property(name, x[name]);\n  });\n}\n\nfunction propertiesObject(selection, map) {\n  for (var name in map) selection.property(name, map[name]);\n  return selection;\n}\n\nexport default function(map) {\n  return (typeof map === \"function\" ? propertiesFunction : propertiesObject)(this, map);\n}\n","import {select} from \"d3-selection\";\n\nfunction attrsFunction(transition, map) {\n  return transition.each(function() {\n    var x = map.apply(this, arguments), t = select(this).transition(transition);\n    for (var name in x) t.attr(name, x[name]);\n  });\n}\n\nfunction attrsObject(transition, map) {\n  for (var name in map) transition.attr(name, map[name]);\n  return transition;\n}\n\nexport default function(map) {\n  return (typeof map === \"function\" ? attrsFunction : attrsObject)(this, map);\n}\n","import {select} from \"d3-selection\";\n\nfunction stylesFunction(transition, map, priority) {\n  return transition.each(function() {\n    var x = map.apply(this, arguments), t = select(this).transition(transition);\n    for (var name in x) t.style(name, x[name], priority);\n  });\n}\n\nfunction stylesObject(transition, map, priority) {\n  for (var name in map) transition.style(name, map[name], priority);\n  return transition;\n}\n\nexport default function(map, priority) {\n  return (typeof map === \"function\" ? stylesFunction : stylesObject)(this, map, priority == null ? \"\" : priority);\n}\n","import {selection} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\nimport selection_attrs from \"./src/selection/attrs\";\nimport selection_styles from \"./src/selection/styles\";\nimport selection_properties from \"./src/selection/properties\";\nimport transition_attrs from \"./src/transition/attrs\";\nimport transition_styles from \"./src/transition/styles\";\n\nselection.prototype.attrs = selection_attrs;\nselection.prototype.styles = selection_styles;\nselection.prototype.properties = selection_properties;\ntransition.prototype.attrs = transition_attrs;\ntransition.prototype.styles = transition_styles;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}